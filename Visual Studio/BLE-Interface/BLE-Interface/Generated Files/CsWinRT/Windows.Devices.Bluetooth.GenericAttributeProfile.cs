//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.3.0-prerelease.250720.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Windows.Devices.Bluetooth.GenericAttributeProfile
{
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattCharacteristic))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattCharacteristic : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattCharacteristic>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicStaticsMethods.IID);
                }
            }
        }

        public static Guid ConvertShortIdToUuid(ushort shortId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicStaticsMethods.ConvertShortIdToUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicStatics, shortId);

        public static GattCharacteristic FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattCharacteristic>.FromAbi(thisPtr);
        }

        internal GattCharacteristic(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.IID);

        }


        public static bool operator ==(GattCharacteristic x, GattCharacteristic y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattCharacteristic x, GattCharacteristic y) => !(x == y);
        public bool Equals(GattCharacteristic other) => this == other;
        public override bool Equals(object obj) => obj is GattCharacteristic that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IReadOnlyList<GattDescriptor> GetDescriptors(Guid descriptorUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.GetDescriptors(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, descriptorUuid);

        public global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.ReadValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.ReadValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, cacheMode);

        public global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.WriteValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, value);

        public global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value, GattWriteOption writeOption) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.WriteValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, value, writeOption);

        public global::Windows.Foundation.IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult> ReadClientCharacteristicConfigurationDescriptorAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.ReadClientCharacteristicConfigurationDescriptorAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteClientCharacteristicConfigurationDescriptorAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.WriteClientCharacteristicConfigurationDescriptorAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, clientCharacteristicConfigurationDescriptorValue);

        public event global::Windows.Foundation.TypedEventHandler<GattCharacteristic, GattValueChangedEventArgs> ValueChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.Get_ValueChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.Get_ValueChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, (IWinRTObject)this).Unsubscribe(value);
        }

        public global::System.Collections.Generic.IReadOnlyList<GattDescriptor> GetAllDescriptors() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic2Methods.GetAllDescriptors(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.GetDescriptorsAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.GetDescriptorsAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsForUuidAsync(Guid descriptorUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.GetDescriptorsForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, descriptorUuid);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsForUuidAsync(Guid descriptorUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.GetDescriptorsForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, descriptorUuid, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.WriteValueWithResultAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, value);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value, GattWriteOption writeOption) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.WriteValueWithResultAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, value, writeOption);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteClientCharacteristicConfigurationDescriptorWithResultAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3Methods.WriteClientCharacteristicConfigurationDescriptorWithResultAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic3, clientCharacteristicConfigurationDescriptorValue);

        public ushort AttributeHandle => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_AttributeHandle(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public GattCharacteristicProperties CharacteristicProperties => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_CharacteristicProperties(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public global::System.Collections.Generic.IReadOnlyList<GattPresentationFormat> PresentationFormats => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_PresentationFormats(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public GattProtectionLevel ProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_ProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.set_ProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic, value);
        }

        public GattDeviceService Service => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic2Methods.get_Service(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic2);

        public string UserDescription => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_UserDescription(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristic);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattCharacteristicProperties>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum GattCharacteristicProperties : uint
    {
        None = unchecked((uint)0),
        Broadcast = unchecked((uint)0x1),
        Read = unchecked((uint)0x2),
        WriteWithoutResponse = unchecked((uint)0x4),
        Write = unchecked((uint)0x8),
        Notify = unchecked((uint)0x10),
        Indicate = unchecked((uint)0x20),
        AuthenticatedSignedWrites = unchecked((uint)0x40),
        ExtendedProperties = unchecked((uint)0x80),
        ReliableWrites = unchecked((uint)0x100),
        WritableAuxiliaries = unchecked((uint)0x200),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public static class GattCharacteristicUuids
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.IID);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicUuids", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.IID);
                }
            }
        }

        public static Guid AlertCategoryId => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_AlertCategoryId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid AlertCategoryIdBitMask => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_AlertCategoryIdBitMask(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid AlertLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_AlertLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid AlertNotificationControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_AlertNotificationControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid AlertStatus => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_AlertStatus(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid BatteryLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_BatteryLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid BloodPressureFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_BloodPressureFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid BloodPressureMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_BloodPressureMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid BodySensorLocation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_BodySensorLocation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid BootKeyboardInputReport => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_BootKeyboardInputReport(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid BootKeyboardOutputReport => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_BootKeyboardOutputReport(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid BootMouseInputReport => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_BootMouseInputReport(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid CscFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_CscFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid CscMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_CscMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid CurrentTime => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_CurrentTime(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid CyclingPowerControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_CyclingPowerControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid CyclingPowerFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_CyclingPowerFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid CyclingPowerMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_CyclingPowerMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid CyclingPowerVector => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_CyclingPowerVector(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid DateTime => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_DateTime(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid DayDateTime => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_DayDateTime(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid DayOfWeek => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_DayOfWeek(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid DstOffset => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_DstOffset(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid ExactTime256 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ExactTime256(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid FirmwareRevisionString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_FirmwareRevisionString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GapAppearance => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GapAppearance(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GapDeviceName => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GapDeviceName(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GapPeripheralPreferredConnectionParameters => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GapPeripheralPreferredConnectionParameters(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GapPeripheralPrivacyFlag => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GapPeripheralPrivacyFlag(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GapReconnectionAddress => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GapReconnectionAddress(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GattServiceChanged => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_GattServiceChanged(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid GlucoseFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_GlucoseFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid GlucoseMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_GlucoseMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid GlucoseMeasurementContext => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_GlucoseMeasurementContext(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid HardwareRevisionString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_HardwareRevisionString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid HeartRateControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_HeartRateControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid HeartRateMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_HeartRateMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid HidControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_HidControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid HidInformation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_HidInformation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid Ieee1107320601RegulatoryCertificationDataList => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_Ieee1107320601RegulatoryCertificationDataList(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid IntermediateCuffPressure => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_IntermediateCuffPressure(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid IntermediateTemperature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_IntermediateTemperature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid LnControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_LnControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid LnFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_LnFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid LocalTimeInformation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_LocalTimeInformation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid LocationAndSpeed => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_LocationAndSpeed(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid ManufacturerNameString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ManufacturerNameString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid MeasurementInterval => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_MeasurementInterval(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid ModelNumberString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ModelNumberString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid Navigation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_Navigation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid NewAlert => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_NewAlert(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid PnpId => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_PnpId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid PositionQuality => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_PositionQuality(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid ProtocolMode => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ProtocolMode(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid RecordAccessControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_RecordAccessControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid ReferenceTimeInformation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ReferenceTimeInformation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid Report => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_Report(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid ReportMap => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ReportMap(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid RingerControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_RingerControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid RingerSetting => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_RingerSetting(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid RscFeature => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_RscFeature(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid RscMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_RscMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid SCControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_SCControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid ScanIntervalWindow => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ScanIntervalWindow(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid ScanRefresh => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_ScanRefresh(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid SensorLocation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_SensorLocation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid SerialNumberString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_SerialNumberString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid SoftwareRevisionString => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_SoftwareRevisionString(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid SupportUnreadAlertCategory => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_SupportUnreadAlertCategory(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid SupportedNewAlertCategory => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_SupportedNewAlertCategory(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid SystemId => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_SystemId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TemperatureMeasurement => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_TemperatureMeasurement(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid TemperatureType => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStaticsMethods.get_TemperatureType(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics);

        public static Guid TimeAccuracy => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeAccuracy(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TimeSource => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeSource(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TimeUpdateControlPoint => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeUpdateControlPoint(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TimeUpdateState => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeUpdateState(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TimeWithDst => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeWithDst(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TimeZone => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TimeZone(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid TxPowerLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_TxPowerLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);

        public static Guid UnreadAlertStatus => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2Methods.get_UnreadAlertStatus(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicUuidsStatics2);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattCharacteristicsResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattCharacteristicsResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattCharacteristicsResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicsResult => _inner;


        public static GattCharacteristicsResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattCharacteristicsResult>.FromAbi(thisPtr);
        }

        internal GattCharacteristicsResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.IID);

        }


        public static bool operator ==(GattCharacteristicsResult x, GattCharacteristicsResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattCharacteristicsResult x, GattCharacteristicsResult y) => !(x == y);
        public bool Equals(GattCharacteristicsResult other) => this == other;
        public override bool Equals(object obj) => obj is GattCharacteristicsResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> Characteristics => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.get_Characteristics(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicsResult);

        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicsResult);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattCharacteristicsResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattClientCharacteristicConfigurationDescriptorValue>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum GattClientCharacteristicConfigurationDescriptorValue : int
    {
        None = unchecked((int)0),
        Notify = unchecked((int)0x1),
        Indicate = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattClientNotificationResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattClientNotificationResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattClientNotificationResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2();



        public static GattClientNotificationResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattClientNotificationResult>.FromAbi(thisPtr);
        }

        internal GattClientNotificationResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.IID);

        }


        public static bool operator ==(GattClientNotificationResult x, GattClientNotificationResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattClientNotificationResult x, GattClientNotificationResult y) => !(x == y);
        public bool Equals(GattClientNotificationResult other) => this == other;
        public override bool Equals(object obj) => obj is GattClientNotificationResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.16299.0")]
        public ushort BytesSent => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult2Methods.get_BytesSent(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult2);

        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult);

        public GattSubscribedClient SubscribedClient => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.get_SubscribedClient(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattClientNotificationResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattCommunicationStatus>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum GattCommunicationStatus : int
    {
        Success = unchecked((int)0),
        Unreachable = unchecked((int)0x1),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        ProtocolError = unchecked((int)0x2),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        AccessDenied = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattDescriptor))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattDescriptor : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattDescriptor>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorStaticsMethods.IID);
                }
            }
        }

        public static Guid ConvertShortIdToUuid(ushort shortId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorStaticsMethods.ConvertShortIdToUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorStatics, shortId);

        public static GattDescriptor FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattDescriptor>.FromAbi(thisPtr);
        }

        internal GattDescriptor(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.IID);

        }


        public static bool operator ==(GattDescriptor x, GattDescriptor y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattDescriptor x, GattDescriptor y) => !(x == y);
        public bool Equals(GattDescriptor other) => this == other;
        public override bool Equals(object obj) => obj is GattDescriptor that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.ReadValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor);

        public global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.ReadValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor, cacheMode);

        public global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.WriteValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor, value);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor2Methods.WriteValueWithResultAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor2, value);

        public ushort AttributeHandle => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.get_AttributeHandle(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor);

        public GattProtectionLevel ProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.get_ProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.set_ProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor, value);
        }

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptor);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public static class GattDescriptorUuids
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorUuids").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorUuids", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.IID);
                }
            }
        }

        public static Guid CharacteristicAggregateFormat => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_CharacteristicAggregateFormat(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);

        public static Guid CharacteristicExtendedProperties => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_CharacteristicExtendedProperties(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);

        public static Guid CharacteristicPresentationFormat => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_CharacteristicPresentationFormat(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);

        public static Guid CharacteristicUserDescription => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_CharacteristicUserDescription(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);

        public static Guid ClientCharacteristicConfiguration => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_ClientCharacteristicConfiguration(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);

        public static Guid ServerCharacteristicConfiguration => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStaticsMethods.get_ServerCharacteristicConfiguration(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorUuidsStatics);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattDescriptorsResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattDescriptorsResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattDescriptorsResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorsResult => _inner;


        public static GattDescriptorsResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattDescriptorsResult>.FromAbi(thisPtr);
        }

        internal GattDescriptorsResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.IID);

        }


        public static bool operator ==(GattDescriptorsResult x, GattDescriptorsResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattDescriptorsResult x, GattDescriptorsResult y) => !(x == y);
        public bool Equals(GattDescriptorsResult other) => this == other;
        public override bool Equals(object obj) => obj is GattDescriptorsResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IReadOnlyList<GattDescriptor> Descriptors => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.get_Descriptors(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorsResult);

        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorsResult);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDescriptorsResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServiceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattDeviceService))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattDeviceService : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattDeviceService>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.Foundation.IAsyncOperation<GattDeviceService> FromIdAsync(string deviceId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStaticsMethods.FromIdAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics, deviceId);

        public static string GetDeviceSelectorFromUuid(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStaticsMethods.GetDeviceSelectorFromUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics, serviceUuid);

        public static string GetDeviceSelectorFromShortId(ushort serviceShortId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStaticsMethods.GetDeviceSelectorFromShortId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics, serviceShortId);

        public static Guid ConvertShortIdToUuid(ushort shortId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStaticsMethods.ConvertShortIdToUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics, shortId);

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.IID);
                }
            }
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static global::Windows.Foundation.IAsyncOperation<GattDeviceService> FromIdAsync(string deviceId, GattSharingMode sharingMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.FromIdAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2, deviceId, sharingMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static string GetDeviceSelectorForBluetoothDeviceId(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.GetDeviceSelectorForBluetoothDeviceId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2, bluetoothDeviceId);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static string GetDeviceSelectorForBluetoothDeviceId(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.GetDeviceSelectorForBluetoothDeviceId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2, bluetoothDeviceId, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static string GetDeviceSelectorForBluetoothDeviceIdAndUuid(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.GetDeviceSelectorForBluetoothDeviceIdAndUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2, bluetoothDeviceId, serviceUuid);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static string GetDeviceSelectorForBluetoothDeviceIdAndUuid(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2Methods.GetDeviceSelectorForBluetoothDeviceIdAndUuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServiceStatics2, bluetoothDeviceId, serviceUuid, cacheMode);

        public static GattDeviceService FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattDeviceService>.FromAbi(thisPtr);
        }

        internal GattDeviceService(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.IID);

        }


        public static bool operator ==(GattDeviceService x, GattDeviceService y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattDeviceService x, GattDeviceService y) => !(x == y);
        public bool Equals(GattDeviceService other) => this == other;
        public override bool Equals(object obj) => obj is GattDeviceService that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> GetCharacteristics(Guid characteristicUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.GetCharacteristics(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService, characteristicUuid);

        public global::System.Collections.Generic.IReadOnlyList<GattDeviceService> GetIncludedServices(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.GetIncludedServices(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService, serviceUuid);

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> GetAllCharacteristics() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2Methods.GetAllCharacteristics(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2);

        public global::System.Collections.Generic.IReadOnlyList<GattDeviceService> GetAllIncludedServices() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2Methods.GetAllIncludedServices(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.RequestAccessAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattOpenStatus> OpenAsync(GattSharingMode sharingMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.OpenAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, sharingMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetCharacteristicsAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetCharacteristicsAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsForUuidAsync(Guid characteristicUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetCharacteristicsForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, characteristicUuid);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsForUuidAsync(Guid characteristicUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetCharacteristicsForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, characteristicUuid, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetIncludedServicesAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetIncludedServicesAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesForUuidAsync(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetIncludedServicesForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, serviceUuid);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesForUuidAsync(Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.GetIncludedServicesForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3, serviceUuid, cacheMode);

        public ushort AttributeHandle => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.get_AttributeHandle(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService);

        public global::Windows.Devices.Bluetooth.BluetoothLEDevice Device => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2Methods.get_Device(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.get_DeviceAccessInformation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        public string DeviceId => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.get_DeviceId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService);

        public global::System.Collections.Generic.IReadOnlyList<GattDeviceService> ParentServices => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2Methods.get_ParentServices(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public GattSession Session => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.get_Session(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public GattSharingMode SharingMode => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3Methods.get_SharingMode(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService3);

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceService);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattDeviceServicesResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattDeviceServicesResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattDeviceServicesResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServicesResult => _inner;


        public static GattDeviceServicesResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattDeviceServicesResult>.FromAbi(thisPtr);
        }

        internal GattDeviceServicesResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.IID);

        }


        public static bool operator ==(GattDeviceServicesResult x, GattDeviceServicesResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattDeviceServicesResult x, GattDeviceServicesResult y) => !(x == y);
        public bool Equals(GattDeviceServicesResult other) => this == other;
        public override bool Equals(object obj) => obj is GattDeviceServicesResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServicesResult);

        public global::System.Collections.Generic.IReadOnlyList<GattDeviceService> Services => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.get_Services(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServicesResult);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattDeviceServicesResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalCharacteristic))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalCharacteristic : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalCharacteristic>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic => _inner;


        public static GattLocalCharacteristic FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalCharacteristic>.FromAbi(thisPtr);
        }

        internal GattLocalCharacteristic(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.IID);

        }


        public static bool operator ==(GattLocalCharacteristic x, GattLocalCharacteristic y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalCharacteristic x, GattLocalCharacteristic y) => !(x == y);
        public bool Equals(GattLocalCharacteristic other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalCharacteristic that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.IAsyncOperation<GattLocalDescriptorResult> CreateDescriptorAsync(Guid descriptorUuid, GattLocalDescriptorParameters parameters) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.CreateDescriptorAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, descriptorUuid, parameters);

        public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<GattClientNotificationResult>> NotifyValueAsync(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.NotifyValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, value);

        public global::Windows.Foundation.IAsyncOperation<GattClientNotificationResult> NotifyValueAsync(global::Windows.Storage.Streams.IBuffer value, GattSubscribedClient subscribedClient) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.NotifyValueAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, value, subscribedClient);

        public event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, GattReadRequestedEventArgs> ReadRequested
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_ReadRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_ReadRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, object> SubscribedClientsChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_SubscribedClientsChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_SubscribedClientsChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, GattWriteRequestedEventArgs> WriteRequested
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_WriteRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.Get_WriteRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic, (IWinRTObject)this).Unsubscribe(value);
        }

        public GattCharacteristicProperties CharacteristicProperties => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_CharacteristicProperties(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public global::System.Collections.Generic.IReadOnlyList<GattLocalDescriptor> Descriptors => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_Descriptors(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public global::System.Collections.Generic.IReadOnlyList<GattPresentationFormat> PresentationFormats => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_PresentationFormats(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public GattProtectionLevel ReadProtectionLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public global::Windows.Storage.Streams.IBuffer StaticValue => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public global::System.Collections.Generic.IReadOnlyList<GattSubscribedClient> SubscribedClients => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_SubscribedClients(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public string UserDescription => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_UserDescription(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        public GattProtectionLevel WriteProtectionLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.get_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristic);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParametersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalCharacteristicParameters))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalCharacteristicParameters : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalCharacteristicParameters>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters => _inner;


        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicParameters;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicParameters
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicParameters;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicParameters = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters");
                }
            }
        }

        public GattLocalCharacteristicParameters() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicParameters, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GattLocalCharacteristicParameters FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalCharacteristicParameters>.FromAbi(thisPtr);
        }

        internal GattLocalCharacteristicParameters(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.IID);

        }


        public static bool operator ==(GattLocalCharacteristicParameters x, GattLocalCharacteristicParameters y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalCharacteristicParameters x, GattLocalCharacteristicParameters y) => !(x == y);
        public bool Equals(GattLocalCharacteristicParameters other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalCharacteristicParameters that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattCharacteristicProperties CharacteristicProperties
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_CharacteristicProperties(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.set_CharacteristicProperties(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters, value);
        }

        public global::System.Collections.Generic.IList<GattPresentationFormat> PresentationFormats => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_PresentationFormats(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);

        public GattProtectionLevel ReadProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.set_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters, value);
        }

        public global::Windows.Storage.Streams.IBuffer StaticValue
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.set_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters, value);
        }

        public string UserDescription
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_UserDescription(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.set_UserDescription(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters, value);
        }

        public GattProtectionLevel WriteProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.get_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.set_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicParameters, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalCharacteristicResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalCharacteristicResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalCharacteristicResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicResult => _inner;


        public static GattLocalCharacteristicResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalCharacteristicResult>.FromAbi(thisPtr);
        }

        internal GattLocalCharacteristicResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResultMethods.IID);

        }


        public static bool operator ==(GattLocalCharacteristicResult x, GattLocalCharacteristicResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalCharacteristicResult x, GattLocalCharacteristicResult y) => !(x == y);
        public bool Equals(GattLocalCharacteristicResult other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalCharacteristicResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattLocalCharacteristic Characteristic => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResultMethods.get_Characteristic(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicResult);

        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResultMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalCharacteristicResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalDescriptor))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalDescriptor : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalDescriptor>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor => _inner;


        public static GattLocalDescriptor FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalDescriptor>.FromAbi(thisPtr);
        }

        internal GattLocalDescriptor(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.IID);

        }


        public static bool operator ==(GattLocalDescriptor x, GattLocalDescriptor y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalDescriptor x, GattLocalDescriptor y) => !(x == y);
        public bool Equals(GattLocalDescriptor other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalDescriptor that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<GattLocalDescriptor, GattReadRequestedEventArgs> ReadRequested
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.Get_ReadRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.Get_ReadRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<GattLocalDescriptor, GattWriteRequestedEventArgs> WriteRequested
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.Get_WriteRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.Get_WriteRequested2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor, (IWinRTObject)this).Unsubscribe(value);
        }

        public GattProtectionLevel ReadProtectionLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.get_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor);

        public global::Windows.Storage.Streams.IBuffer StaticValue => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.get_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor);

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor);

        public GattProtectionLevel WriteProtectionLevel => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.get_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptor);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParametersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalDescriptorParameters))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalDescriptorParameters : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalDescriptorParameters>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters => _inner;


        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorParameters;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorParameters
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorParameters;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorParameters = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters");
                }
            }
        }

        public GattLocalDescriptorParameters() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorParameters, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GattLocalDescriptorParameters FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalDescriptorParameters>.FromAbi(thisPtr);
        }

        internal GattLocalDescriptorParameters(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.IID);

        }


        public static bool operator ==(GattLocalDescriptorParameters x, GattLocalDescriptorParameters y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalDescriptorParameters x, GattLocalDescriptorParameters y) => !(x == y);
        public bool Equals(GattLocalDescriptorParameters other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalDescriptorParameters that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattProtectionLevel ReadProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.get_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.set_ReadProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters, value);
        }

        public global::Windows.Storage.Streams.IBuffer StaticValue
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.get_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.set_StaticValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters, value);
        }

        public GattProtectionLevel WriteProtectionLevel
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.get_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.set_WriteProtectionLevel(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorParameters, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalDescriptorResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalDescriptorResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalDescriptorResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorResult => _inner;


        public static GattLocalDescriptorResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalDescriptorResult>.FromAbi(thisPtr);
        }

        internal GattLocalDescriptorResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResultMethods.IID);

        }


        public static bool operator ==(GattLocalDescriptorResult x, GattLocalDescriptorResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalDescriptorResult x, GattLocalDescriptorResult y) => !(x == y);
        public bool Equals(GattLocalDescriptorResult other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalDescriptorResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattLocalDescriptor Descriptor => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResultMethods.get_Descriptor(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorResult);

        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResultMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalDescriptorResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalServiceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattLocalService))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattLocalService : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattLocalService>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalService => _inner;


        public static GattLocalService FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattLocalService>.FromAbi(thisPtr);
        }

        internal GattLocalService(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.IID);

        }


        public static bool operator ==(GattLocalService x, GattLocalService y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattLocalService x, GattLocalService y) => !(x == y);
        public bool Equals(GattLocalService other) => this == other;
        public override bool Equals(object obj) => obj is GattLocalService that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.IAsyncOperation<GattLocalCharacteristicResult> CreateCharacteristicAsync(Guid characteristicUuid, GattLocalCharacteristicParameters parameters) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.CreateCharacteristicAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalService, characteristicUuid, parameters);

        public global::System.Collections.Generic.IReadOnlyList<GattLocalCharacteristic> Characteristics => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.get_Characteristics(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalService);

        public Guid Uuid => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.get_Uuid(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattLocalService);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattOpenStatus>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum GattOpenStatus : int
    {
        Unspecified = unchecked((int)0),
        Success = unchecked((int)0x1),
        AlreadyOpened = unchecked((int)0x2),
        NotFound = unchecked((int)0x3),
        SharingViolation = unchecked((int)0x4),
        AccessDenied = unchecked((int)0x5),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormatRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattPresentationFormat))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattPresentationFormat : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattPresentationFormat>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStaticsMethods.IID);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics2Methods.IID);
                }
            }
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public static GattPresentationFormat FromParts(byte formatType, int exponent, ushort unit, byte namespaceId, ushort description) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics2Methods.FromParts(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics2, formatType, exponent, unit, namespaceId, description);

        public static byte BluetoothSigAssignedNumbers => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStaticsMethods.get_BluetoothSigAssignedNumbers(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatStatics);

        public static GattPresentationFormat FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattPresentationFormat>.FromAbi(thisPtr);
        }

        internal GattPresentationFormat(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.IID);

        }


        public static bool operator ==(GattPresentationFormat x, GattPresentationFormat y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattPresentationFormat x, GattPresentationFormat y) => !(x == y);
        public bool Equals(GattPresentationFormat other) => this == other;
        public override bool Equals(object obj) => obj is GattPresentationFormat that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ushort Description => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.get_Description(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat);

        public int Exponent => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.get_Exponent(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat);

        public byte FormatType => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.get_FormatType(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat);

        public byte Namespace => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.get_Namespace(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat);

        public ushort Unit => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.get_Unit(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormat);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public static class GattPresentationFormatTypes
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormatTypes").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormatTypes", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.IID);
                }
            }
        }

        public static byte Bit2 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Bit2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Boolean => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Boolean(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte DUInt16 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_DUInt16(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Float => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Float(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Float32 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Float32(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Float64 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Float64(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Nibble => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Nibble(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SFloat => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SFloat(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt12 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt12(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt128 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt128(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt16 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt16(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt24 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt24(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt32 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt32(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt48 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt48(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt64 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt64(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte SInt8 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_SInt8(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Struct => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Struct(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt12 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt12(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt128 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt128(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt16 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt16(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt24 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt24(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt32 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt32(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt48 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt48(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt64 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt64(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte UInt8 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_UInt8(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Utf16 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Utf16(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);

        public static byte Utf8 => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStaticsMethods.get_Utf8(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattPresentationFormatTypesStatics);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattProtectionLevel>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum GattProtectionLevel : int
    {
        Plain = unchecked((int)0),
        AuthenticationRequired = unchecked((int)0x1),
        EncryptionRequired = unchecked((int)0x2),
        EncryptionAndAuthenticationRequired = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public static class GattProtocolError
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtocolError").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtocolError", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.IID);
                }
            }
        }

        public static byte AttributeNotFound => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_AttributeNotFound(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte AttributeNotLong => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_AttributeNotLong(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InsufficientAuthentication => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InsufficientAuthentication(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InsufficientAuthorization => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InsufficientAuthorization(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InsufficientEncryption => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InsufficientEncryption(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InsufficientEncryptionKeySize => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InsufficientEncryptionKeySize(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InsufficientResources => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InsufficientResources(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InvalidAttributeValueLength => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InvalidAttributeValueLength(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InvalidHandle => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InvalidHandle(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InvalidOffset => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InvalidOffset(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte InvalidPdu => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_InvalidPdu(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte PrepareQueueFull => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_PrepareQueueFull(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte ReadNotPermitted => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_ReadNotPermitted(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte RequestNotSupported => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_RequestNotSupported(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte UnlikelyError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_UnlikelyError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte UnsupportedGroupType => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_UnsupportedGroupType(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);

        public static byte WriteNotPermitted => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStaticsMethods.get_WriteNotPermitted(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattProtocolErrorStatics);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattReadClientCharacteristicConfigurationDescriptorResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattReadClientCharacteristicConfigurationDescriptorResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattReadClientCharacteristicConfigurationDescriptorResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2();



        public static GattReadClientCharacteristicConfigurationDescriptorResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattReadClientCharacteristicConfigurationDescriptorResult>.FromAbi(thisPtr);
        }

        internal GattReadClientCharacteristicConfigurationDescriptorResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResultMethods.IID);

        }


        public static bool operator ==(GattReadClientCharacteristicConfigurationDescriptorResult x, GattReadClientCharacteristicConfigurationDescriptorResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattReadClientCharacteristicConfigurationDescriptorResult x, GattReadClientCharacteristicConfigurationDescriptorResult y) => !(x == y);
        public bool Equals(GattReadClientCharacteristicConfigurationDescriptorResult other) => this == other;
        public override bool Equals(object obj) => obj is GattReadClientCharacteristicConfigurationDescriptorResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattClientCharacteristicConfigurationDescriptorValue ClientCharacteristicConfigurationDescriptor => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResultMethods.get_ClientCharacteristicConfigurationDescriptor(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult2Methods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult2);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadClientCharacteristicConfigurationDescriptorResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattReadRequest))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattReadRequest : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattReadRequest>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest => _inner;


        public static GattReadRequest FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattReadRequest>.FromAbi(thisPtr);
        }

        internal GattReadRequest(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.IID);

        }


        public static bool operator ==(GattReadRequest x, GattReadRequest y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattReadRequest x, GattReadRequest y) => !(x == y);
        public bool Equals(GattReadRequest other) => this == other;
        public override bool Equals(object obj) => obj is GattReadRequest that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void RespondWithValue(global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.RespondWithValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest, value);

        public void RespondWithProtocolError(byte protocolError) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.RespondWithProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest, protocolError);

        public event global::Windows.Foundation.TypedEventHandler<GattReadRequest, GattRequestStateChangedEventArgs> StateChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.Get_StateChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.Get_StateChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest, (IWinRTObject)this).Unsubscribe(value);
        }

        public uint Length => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.get_Length(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest);

        public uint Offset => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.get_Offset(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest);

        public GattRequestState State => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.get_State(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattReadRequestedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattReadRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattReadRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequestedEventArgs => _inner;


        public static GattReadRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattReadRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal GattReadRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.IID);

        }


        public static bool operator ==(GattReadRequestedEventArgs x, GattReadRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattReadRequestedEventArgs x, GattReadRequestedEventArgs y) => !(x == y);
        public bool Equals(GattReadRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattReadRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Deferral GetDeferral() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.GetDeferral(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequestedEventArgs);

        public global::Windows.Foundation.IAsyncOperation<GattReadRequest> GetRequestAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.GetRequestAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequestedEventArgs);

        public GattSession Session => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.get_Session(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadRequestedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattReadResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattReadResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattReadResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2();



        public static GattReadResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattReadResult>.FromAbi(thisPtr);
        }

        internal GattReadResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResultMethods.IID);

        }


        public static bool operator ==(GattReadResult x, GattReadResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattReadResult x, GattReadResult y) => !(x == y);
        public bool Equals(GattReadResult other) => this == other;
        public override bool Equals(object obj) => obj is GattReadResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult2Methods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult2);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult);

        public global::Windows.Storage.Streams.IBuffer Value => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResultMethods.get_Value(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReadResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransactionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattReliableWriteTransaction))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattReliableWriteTransaction : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattReliableWriteTransaction>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2();



        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReliableWriteTransaction;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReliableWriteTransaction
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReliableWriteTransaction;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReliableWriteTransaction = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction");
                }
            }
        }

        public GattReliableWriteTransaction() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReliableWriteTransaction, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GattReliableWriteTransaction FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattReliableWriteTransaction>.FromAbi(thisPtr);
        }

        internal GattReliableWriteTransaction(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.IID);

        }


        public static bool operator ==(GattReliableWriteTransaction x, GattReliableWriteTransaction y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattReliableWriteTransaction x, GattReliableWriteTransaction y) => !(x == y);
        public bool Equals(GattReliableWriteTransaction other) => this == other;
        public override bool Equals(object obj) => obj is GattReliableWriteTransaction that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void WriteValue(GattCharacteristic characteristic, global::Windows.Storage.Streams.IBuffer value) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.WriteValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction, characteristic, value);

        public global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> CommitAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.CommitAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<GattWriteResult> CommitWithResultAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction2Methods.CommitWithResultAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattReliableWriteTransaction2);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattRequestState>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum GattRequestState : int
    {
        Pending = unchecked((int)0),
        Completed = unchecked((int)0x1),
        Canceled = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattRequestStateChangedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattRequestStateChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattRequestStateChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattRequestStateChangedEventArgs => _inner;


        public static GattRequestStateChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattRequestStateChangedEventArgs>.FromAbi(thisPtr);
        }

        internal GattRequestStateChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgsMethods.IID);

        }


        public static bool operator ==(GattRequestStateChangedEventArgs x, GattRequestStateChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattRequestStateChangedEventArgs x, GattRequestStateChangedEventArgs y) => !(x == y);
        public bool Equals(GattRequestStateChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattRequestStateChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgsMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattRequestStateChangedEventArgs);

        public GattRequestState State => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgsMethods.get_State(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattRequestStateChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProvider))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProvider : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProvider>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.Foundation.IAsyncOperation<GattServiceProviderResult> CreateAsync(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderStaticsMethods.CreateAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderStatics, serviceUuid);

        public static GattServiceProvider FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProvider>.FromAbi(thisPtr);
        }

        internal GattServiceProvider(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.IID);

        }


        public static bool operator ==(GattServiceProvider x, GattServiceProvider y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProvider x, GattServiceProvider y) => !(x == y);
        public bool Equals(GattServiceProvider other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProvider that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void StartAdvertising() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.StartAdvertising(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider);

        public void StartAdvertising(GattServiceProviderAdvertisingParameters parameters) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.StartAdvertising(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider, parameters);

        public void StopAdvertising() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.StopAdvertising(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider);

        public event global::Windows.Foundation.TypedEventHandler<GattServiceProvider, GattServiceProviderAdvertisementStatusChangedEventArgs> AdvertisementStatusChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.Get_AdvertisementStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.Get_AdvertisementStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider, (IWinRTObject)this).Unsubscribe(value);
        }

        public GattServiceProviderAdvertisementStatus AdvertisementStatus => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.get_AdvertisementStatus(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider);

        public GattLocalService Service => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.get_Service(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProvider);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattServiceProviderAdvertisementStatus>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum GattServiceProviderAdvertisementStatus : int
    {
        Created = unchecked((int)0),
        Stopped = unchecked((int)0x1),
        Started = unchecked((int)0x2),
        Aborted = unchecked((int)0x3),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.18362.0")]
        StartedWithoutAllAdvertisementData = unchecked((int)0x4),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProviderAdvertisementStatusChangedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProviderAdvertisementStatusChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProviderAdvertisementStatusChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisementStatusChangedEventArgs => _inner;


        public static GattServiceProviderAdvertisementStatusChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProviderAdvertisementStatusChangedEventArgs>.FromAbi(thisPtr);
        }

        internal GattServiceProviderAdvertisementStatusChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgsMethods.IID);

        }


        public static bool operator ==(GattServiceProviderAdvertisementStatusChangedEventArgs x, GattServiceProviderAdvertisementStatusChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProviderAdvertisementStatusChangedEventArgs x, GattServiceProviderAdvertisementStatusChangedEventArgs y) => !(x == y);
        public bool Equals(GattServiceProviderAdvertisementStatusChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProviderAdvertisementStatusChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgsMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisementStatusChangedEventArgs);

        public GattServiceProviderAdvertisementStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgsMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisementStatusChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParametersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProviderAdvertisingParameters))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProviderAdvertisingParameters : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProviderAdvertisingParameters>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2 => ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2 ?? Make___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2();



        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisingParameters;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisingParameters
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisingParameters;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisingParameters = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters");
                }
            }
        }

        public GattServiceProviderAdvertisingParameters() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisingParameters, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static GattServiceProviderAdvertisingParameters FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProviderAdvertisingParameters>.FromAbi(thisPtr);
        }

        internal GattServiceProviderAdvertisingParameters(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.IID);

        }


        public static bool operator ==(GattServiceProviderAdvertisingParameters x, GattServiceProviderAdvertisingParameters y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProviderAdvertisingParameters x, GattServiceProviderAdvertisingParameters y) => !(x == y);
        public bool Equals(GattServiceProviderAdvertisingParameters other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProviderAdvertisingParameters that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool IsConnectable
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.get_IsConnectable(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.set_IsConnectable(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters, value);
        }

        public bool IsDiscoverable
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.get_IsDiscoverable(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.set_IsDiscoverable(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters, value);
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.18362.0")]
        public global::Windows.Storage.Streams.IBuffer ServiceData
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2Methods.get_ServiceData(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2Methods.set_ServiceData(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderAdvertisingParameters2, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProviderResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProviderResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProviderResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderResult => _inner;


        public static GattServiceProviderResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProviderResult>.FromAbi(thisPtr);
        }

        internal GattServiceProviderResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResultMethods.IID);

        }


        public static bool operator ==(GattServiceProviderResult x, GattServiceProviderResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProviderResult x, GattServiceProviderResult y) => !(x == y);
        public bool Equals(GattServiceProviderResult other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProviderResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResultMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderResult);

        public GattServiceProvider ServiceProvider => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResultMethods.get_ServiceProvider(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceProviderResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public static class GattServiceUuids
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceUuids").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceUuids", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.IID);
                }
            }
        }

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceUuids", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.IID);
                }
            }
        }

        public static Guid AlertNotification => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_AlertNotification(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid Battery => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_Battery(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid BloodPressure => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_BloodPressure(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid CurrentTime => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_CurrentTime(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid CyclingPower => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_CyclingPower(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid CyclingSpeedAndCadence => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_CyclingSpeedAndCadence(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid DeviceInformation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_DeviceInformation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid GenericAccess => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_GenericAccess(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid GenericAttribute => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_GenericAttribute(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid Glucose => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_Glucose(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid HealthThermometer => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_HealthThermometer(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid HeartRate => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_HeartRate(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid HumanInterfaceDevice => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_HumanInterfaceDevice(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid ImmediateAlert => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_ImmediateAlert(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid LinkLoss => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_LinkLoss(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid LocationAndNavigation => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_LocationAndNavigation(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid NextDstChange => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_NextDstChange(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid PhoneAlertStatus => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_PhoneAlertStatus(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid ReferenceTimeUpdate => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_ReferenceTimeUpdate(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid RunningSpeedAndCadence => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStaticsMethods.get_RunningSpeedAndCadence(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics);

        public static Guid ScanParameters => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_ScanParameters(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);

        public static Guid TxPower => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2Methods.get_TxPower(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattServiceUuidsStatics2);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattSession))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattSession : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattSession>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession", global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.Foundation.IAsyncOperation<GattSession> FromDeviceIdAsync(global::Windows.Devices.Bluetooth.BluetoothDeviceId deviceId) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStaticsMethods.FromDeviceIdAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatics, deviceId);

        public static GattSession FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattSession>.FromAbi(thisPtr);
        }

        internal GattSession(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.IID);

        }


        public static bool operator ==(GattSession x, GattSession y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattSession x, GattSession y) => !(x == y);
        public bool Equals(GattSession other) => this == other;
        public override bool Equals(object obj) => obj is GattSession that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<GattSession, object> MaxPduSizeChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.Get_MaxPduSizeChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.Get_MaxPduSizeChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<GattSession, GattSessionStatusChangedEventArgs> SessionStatusChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.Get_SessionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.Get_SessionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public bool CanMaintainConnection => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.get_CanMaintainConnection(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession);

        public global::Windows.Devices.Bluetooth.BluetoothDeviceId DeviceId => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.get_DeviceId(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession);

        public bool MaintainConnection
        {
            get => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.get_MaintainConnection(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession);
            set => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.set_MaintainConnection(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession, value);
        }

        public ushort MaxPduSize => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.get_MaxPduSize(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession);

        public GattSessionStatus SessionStatus => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.get_SessionStatus(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSession);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattSessionStatus>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum GattSessionStatus : int
    {
        Closed = unchecked((int)0),
        Active = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattSessionStatusChangedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattSessionStatusChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattSessionStatusChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatusChangedEventArgs => _inner;


        public static GattSessionStatusChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattSessionStatusChangedEventArgs>.FromAbi(thisPtr);
        }

        internal GattSessionStatusChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgsMethods.IID);

        }


        public static bool operator ==(GattSessionStatusChangedEventArgs x, GattSessionStatusChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattSessionStatusChangedEventArgs x, GattSessionStatusChangedEventArgs y) => !(x == y);
        public bool Equals(GattSessionStatusChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattSessionStatusChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgsMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatusChangedEventArgs);

        public GattSessionStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgsMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSessionStatusChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattSharingMode>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum GattSharingMode : int
    {
        Unspecified = unchecked((int)0),
        Exclusive = unchecked((int)0x1),
        SharedReadOnly = unchecked((int)0x2),
        SharedReadAndWrite = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClientRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattSubscribedClient))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattSubscribedClient : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattSubscribedClient>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSubscribedClient => _inner;


        public static GattSubscribedClient FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattSubscribedClient>.FromAbi(thisPtr);
        }

        internal GattSubscribedClient(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.IID);

        }


        public static bool operator ==(GattSubscribedClient x, GattSubscribedClient y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattSubscribedClient x, GattSubscribedClient y) => !(x == y);
        public bool Equals(GattSubscribedClient other) => this == other;
        public override bool Equals(object obj) => obj is GattSubscribedClient that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<GattSubscribedClient, object> MaxNotificationSizeChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.Get_MaxNotificationSizeChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSubscribedClient, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.Get_MaxNotificationSizeChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSubscribedClient, (IWinRTObject)this).Unsubscribe(value);
        }

        public ushort MaxNotificationSize => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.get_MaxNotificationSize(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSubscribedClient);

        public GattSession Session => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.get_Session(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattSubscribedClient);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattValueChangedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattValueChangedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattValueChangedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattValueChangedEventArgs => _inner;


        public static GattValueChangedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattValueChangedEventArgs>.FromAbi(thisPtr);
        }

        internal GattValueChangedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgsMethods.IID);

        }


        public static bool operator ==(GattValueChangedEventArgs x, GattValueChangedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattValueChangedEventArgs x, GattValueChangedEventArgs y) => !(x == y);
        public bool Equals(GattValueChangedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattValueChangedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Storage.Streams.IBuffer CharacteristicValue => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgsMethods.get_CharacteristicValue(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattValueChangedEventArgs);

        public global::System.DateTimeOffset Timestamp => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgsMethods.get_Timestamp(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattValueChangedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<GattWriteOption>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum GattWriteOption : int
    {
        WriteWithResponse = unchecked((int)0),
        WriteWithoutResponse = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattWriteRequest))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattWriteRequest : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattWriteRequest>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest => _inner;


        public static GattWriteRequest FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattWriteRequest>.FromAbi(thisPtr);
        }

        internal GattWriteRequest(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.IID);

        }


        public static bool operator ==(GattWriteRequest x, GattWriteRequest y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattWriteRequest x, GattWriteRequest y) => !(x == y);
        public bool Equals(GattWriteRequest other) => this == other;
        public override bool Equals(object obj) => obj is GattWriteRequest that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Respond() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.Respond(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest);

        public void RespondWithProtocolError(byte protocolError) => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.RespondWithProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest, protocolError);

        public event global::Windows.Foundation.TypedEventHandler<GattWriteRequest, GattRequestStateChangedEventArgs> StateChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.Get_StateChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.Get_StateChanged2(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest, (IWinRTObject)this).Unsubscribe(value);
        }

        public uint Offset => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.get_Offset(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest);

        public GattWriteOption Option => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.get_Option(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest);

        public GattRequestState State => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.get_State(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest);

        public global::Windows.Storage.Streams.IBuffer Value => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.get_Value(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattWriteRequestedEventArgs))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattWriteRequestedEventArgs : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattWriteRequestedEventArgs>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequestedEventArgs => _inner;


        public static GattWriteRequestedEventArgs FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattWriteRequestedEventArgs>.FromAbi(thisPtr);
        }

        internal GattWriteRequestedEventArgs(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.IID);

        }


        public static bool operator ==(GattWriteRequestedEventArgs x, GattWriteRequestedEventArgs y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattWriteRequestedEventArgs x, GattWriteRequestedEventArgs y) => !(x == y);
        public bool Equals(GattWriteRequestedEventArgs other) => this == other;
        public override bool Equals(object obj) => obj is GattWriteRequestedEventArgs that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.Deferral GetDeferral() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.GetDeferral(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequestedEventArgs);

        public global::Windows.Foundation.IAsyncOperation<GattWriteRequest> GetRequestAsync() => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.GetRequestAsync(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequestedEventArgs);

        public GattSession Session => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.get_Session(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteRequestedEventArgs);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult))]
    [global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResultRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattWriteResult))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattWriteResult : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattWriteResult>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteResult => _inner;


        public static GattWriteResult FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattWriteResult>.FromAbi(thisPtr);
        }

        internal GattWriteResult(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResultMethods.IID);

        }


        public static bool operator ==(GattWriteResult x, GattWriteResult y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattWriteResult x, GattWriteResult y) => !(x == y);
        public bool Equals(GattWriteResult other) => this == other;
        public override bool Equals(object obj) => obj is GattWriteResult that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Nullable<byte> ProtocolError => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResultMethods.get_ProtocolError(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteResult);

        public GattCommunicationStatus Status => global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResultMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_GenericAttributeProfile_IGattWriteResult);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("59CB50C1-5934-4F68-A198-EB864FA44E6B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristic
    {
        global::System.Collections.Generic.IReadOnlyList<GattDescriptor> GetDescriptors(Guid descriptorUuid);
        [global::Windows.Foundation.Metadata.Overload(@"ReadValueAsync")]
        global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync();
        [global::Windows.Foundation.Metadata.Overload(@"ReadValueWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"WriteValueAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value);
        [global::Windows.Foundation.Metadata.Overload(@"WriteValueWithOptionAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value, GattWriteOption writeOption);
        global::Windows.Foundation.IAsyncOperation<GattReadClientCharacteristicConfigurationDescriptorResult> ReadClientCharacteristicConfigurationDescriptorAsync();
        global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteClientCharacteristicConfigurationDescriptorAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue);
        ushort AttributeHandle { get; }
        GattCharacteristicProperties CharacteristicProperties { get; }
        global::System.Collections.Generic.IReadOnlyList<GattPresentationFormat> PresentationFormats { get; }
        GattProtectionLevel ProtectionLevel { get; set; }
        string UserDescription { get; }
        Guid Uuid { get; }
        event global::Windows.Foundation.TypedEventHandler<GattCharacteristic, GattValueChangedEventArgs> ValueChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AE1AB578-EC06-4764-B780-9835A1D35D6E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristic2
    {
        global::System.Collections.Generic.IReadOnlyList<GattDescriptor> GetAllDescriptors();
        GattDeviceService Service { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("3F3C663E-93D4-406B-B817-DB81F8ED53B3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattCharacteristic3
    {
        [global::Windows.Foundation.Metadata.Overload(@"GetDescriptorsAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetDescriptorsWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetDescriptorsForUuidAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsForUuidAsync(Guid descriptorUuid);
        [global::Windows.Foundation.Metadata.Overload(@"GetDescriptorsForUuidWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDescriptorsResult> GetDescriptorsForUuidAsync(Guid descriptorUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"WriteValueWithResultAsync")]
        global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value);
        [global::Windows.Foundation.Metadata.Overload(@"WriteValueWithResultAndOptionAsync")]
        global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value, GattWriteOption writeOption);
        global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteClientCharacteristicConfigurationDescriptorWithResultAsync(GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("59CB50C3-5934-4F68-A198-EB864FA44E6B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristicStatics
    {
        Guid ConvertShortIdToUuid(ushort shortId);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("58FA4586-B1DE-470C-B7DE-0D11FF44F4B7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristicUuidsStatics
    {
        Guid BatteryLevel { get; }
        Guid BloodPressureFeature { get; }
        Guid BloodPressureMeasurement { get; }
        Guid BodySensorLocation { get; }
        Guid CscFeature { get; }
        Guid CscMeasurement { get; }
        Guid GlucoseFeature { get; }
        Guid GlucoseMeasurement { get; }
        Guid GlucoseMeasurementContext { get; }
        Guid HeartRateControlPoint { get; }
        Guid HeartRateMeasurement { get; }
        Guid IntermediateCuffPressure { get; }
        Guid IntermediateTemperature { get; }
        Guid MeasurementInterval { get; }
        Guid RecordAccessControlPoint { get; }
        Guid RscFeature { get; }
        Guid RscMeasurement { get; }
        Guid SCControlPoint { get; }
        Guid SensorLocation { get; }
        Guid TemperatureMeasurement { get; }
        Guid TemperatureType { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("1855B425-D46E-4A2C-9C3F-ED6DEA29E7BE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristicUuidsStatics2
    {
        Guid AlertCategoryId { get; }
        Guid AlertCategoryIdBitMask { get; }
        Guid AlertLevel { get; }
        Guid AlertNotificationControlPoint { get; }
        Guid AlertStatus { get; }
        Guid BootKeyboardInputReport { get; }
        Guid BootKeyboardOutputReport { get; }
        Guid BootMouseInputReport { get; }
        Guid CurrentTime { get; }
        Guid CyclingPowerControlPoint { get; }
        Guid CyclingPowerFeature { get; }
        Guid CyclingPowerMeasurement { get; }
        Guid CyclingPowerVector { get; }
        Guid DateTime { get; }
        Guid DayDateTime { get; }
        Guid DayOfWeek { get; }
        Guid DstOffset { get; }
        Guid ExactTime256 { get; }
        Guid FirmwareRevisionString { get; }
        Guid GapAppearance { get; }
        Guid GapDeviceName { get; }
        Guid GapPeripheralPreferredConnectionParameters { get; }
        Guid GapPeripheralPrivacyFlag { get; }
        Guid GapReconnectionAddress { get; }
        Guid GattServiceChanged { get; }
        Guid HardwareRevisionString { get; }
        Guid HidControlPoint { get; }
        Guid HidInformation { get; }
        Guid Ieee1107320601RegulatoryCertificationDataList { get; }
        Guid LnControlPoint { get; }
        Guid LnFeature { get; }
        Guid LocalTimeInformation { get; }
        Guid LocationAndSpeed { get; }
        Guid ManufacturerNameString { get; }
        Guid ModelNumberString { get; }
        Guid Navigation { get; }
        Guid NewAlert { get; }
        Guid PnpId { get; }
        Guid PositionQuality { get; }
        Guid ProtocolMode { get; }
        Guid ReferenceTimeInformation { get; }
        Guid Report { get; }
        Guid ReportMap { get; }
        Guid RingerControlPoint { get; }
        Guid RingerSetting { get; }
        Guid ScanIntervalWindow { get; }
        Guid ScanRefresh { get; }
        Guid SerialNumberString { get; }
        Guid SoftwareRevisionString { get; }
        Guid SupportUnreadAlertCategory { get; }
        Guid SupportedNewAlertCategory { get; }
        Guid SystemId { get; }
        Guid TimeAccuracy { get; }
        Guid TimeSource { get; }
        Guid TimeUpdateControlPoint { get; }
        Guid TimeUpdateState { get; }
        Guid TimeWithDst { get; }
        Guid TimeZone { get; }
        Guid TxPowerLevel { get; }
        Guid UnreadAlertStatus { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("1194945C-B257-4F3E-9DB7-F68BC9A9AEF2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattCharacteristicsResult
    {
        global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> Characteristics { get; }
        global::System.Nullable<byte> ProtocolError { get; }
        GattCommunicationStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("506D5599-0112-419A-8E3B-AE21AFABD2C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattClientNotificationResult
    {
        global::System.Nullable<byte> ProtocolError { get; }
        GattCommunicationStatus Status { get; }
        GattSubscribedClient SubscribedClient { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("8FAEC497-45E0-497E-9582-29A1FE281AD5")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 327680u)]
    internal interface IGattClientNotificationResult2
    {
        ushort BytesSent { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("92055F2B-8084-4344-B4C2-284DE19A8506")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDescriptor
    {
        [global::Windows.Foundation.Metadata.Overload(@"ReadValueAsync")]
        global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync();
        [global::Windows.Foundation.Metadata.Overload(@"ReadValueWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattReadResult> ReadValueAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> WriteValueAsync(global::Windows.Storage.Streams.IBuffer value);
        ushort AttributeHandle { get; }
        GattProtectionLevel ProtectionLevel { get; set; }
        Guid Uuid { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("8F563D39-D630-406C-BA11-10CDD16B0E5E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattDescriptor2
    {
        global::Windows.Foundation.IAsyncOperation<GattWriteResult> WriteValueWithResultAsync(global::Windows.Storage.Streams.IBuffer value);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("92055F2D-8084-4344-B4C2-284DE19A8506")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDescriptorStatics
    {
        Guid ConvertShortIdToUuid(ushort shortId);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A6F862CE-9CFC-42F1-9185-FF37B75181D3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDescriptorUuidsStatics
    {
        Guid CharacteristicAggregateFormat { get; }
        Guid CharacteristicExtendedProperties { get; }
        Guid CharacteristicPresentationFormat { get; }
        Guid CharacteristicUserDescription { get; }
        Guid ClientCharacteristicConfiguration { get; }
        Guid ServerCharacteristicConfiguration { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9BC091F3-95E7-4489-8D25-FF81955A57B9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattDescriptorsResult
    {
        global::System.Collections.Generic.IReadOnlyList<GattDescriptor> Descriptors { get; }
        global::System.Nullable<byte> ProtocolError { get; }
        GattCommunicationStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AC7B7C05-B33C-47CF-990F-6B8F5577DF71")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDeviceService : global::System.IDisposable
    {
        global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> GetCharacteristics(Guid characteristicUuid);
        global::System.Collections.Generic.IReadOnlyList<GattDeviceService> GetIncludedServices(Guid serviceUuid);
        ushort AttributeHandle { get; }
        string DeviceId { get; }
        Guid Uuid { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("FC54520B-0B0D-4708-BAE0-9FFD9489BC59")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDeviceService2 : global::System.IDisposable
    {
        global::System.Collections.Generic.IReadOnlyList<GattCharacteristic> GetAllCharacteristics();
        global::System.Collections.Generic.IReadOnlyList<GattDeviceService> GetAllIncludedServices();
        global::Windows.Devices.Bluetooth.BluetoothLEDevice Device { get; }
        global::System.Collections.Generic.IReadOnlyList<GattDeviceService> ParentServices { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("B293A950-0C53-437C-A9B3-5C3210C6E569")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattDeviceService3
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync();
        global::Windows.Foundation.IAsyncOperation<GattOpenStatus> OpenAsync(GattSharingMode sharingMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetCharacteristicsAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetCharacteristicsWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetCharacteristicsForUuidAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsForUuidAsync(Guid characteristicUuid);
        [global::Windows.Foundation.Metadata.Overload(@"GetCharacteristicsForUuidWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattCharacteristicsResult> GetCharacteristicsForUuidAsync(Guid characteristicUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetIncludedServicesAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetIncludedServicesWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesAsync(global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetIncludedServicesForUuidAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesForUuidAsync(Guid serviceUuid);
        [global::Windows.Foundation.Metadata.Overload(@"GetIncludedServicesForUuidWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceServicesResult> GetIncludedServicesForUuidAsync(Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation { get; }
        GattSession Session { get; }
        GattSharingMode SharingMode { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("196D0022-FAAD-45DC-AE5B-2AC3184E84DB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattDeviceServiceStatics
    {
        [global::Windows.Foundation.Metadata.Overload(@"FromIdAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceService> FromIdAsync(string deviceId);
        string GetDeviceSelectorFromUuid(Guid serviceUuid);
        string GetDeviceSelectorFromShortId(ushort serviceShortId);
        Guid ConvertShortIdToUuid(ushort shortId);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("0604186E-24A6-4B0D-A2F2-30CC01545D25")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattDeviceServiceStatics2
    {
        [global::Windows.Foundation.Metadata.Overload(@"FromIdWithSharingModeAsync")]
        global::Windows.Foundation.IAsyncOperation<GattDeviceService> FromIdAsync(string deviceId, GattSharingMode sharingMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorForBluetoothDeviceId")]
        string GetDeviceSelectorForBluetoothDeviceId(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorForBluetoothDeviceIdWithCacheMode")]
        string GetDeviceSelectorForBluetoothDeviceId(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorForBluetoothDeviceIdAndUuid")]
        string GetDeviceSelectorForBluetoothDeviceIdAndUuid(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorForBluetoothDeviceIdAndUuidWithCacheMode")]
        string GetDeviceSelectorForBluetoothDeviceIdAndUuid(global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("171DD3EE-016D-419D-838A-576CF475A3D8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattDeviceServicesResult
    {
        global::System.Nullable<byte> ProtocolError { get; }
        global::System.Collections.Generic.IReadOnlyList<GattDeviceService> Services { get; }
        GattCommunicationStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AEDE376D-5412-4D74-92A8-8DEB8526829C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristic))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalCharacteristic
    {
        global::Windows.Foundation.IAsyncOperation<GattLocalDescriptorResult> CreateDescriptorAsync(Guid descriptorUuid, GattLocalDescriptorParameters parameters);
        [global::Windows.Foundation.Metadata.Overload(@"NotifyValueAsync")]
        global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<GattClientNotificationResult>> NotifyValueAsync(global::Windows.Storage.Streams.IBuffer value);
        [global::Windows.Foundation.Metadata.Overload(@"NotifyValueForSubscribedClientAsync")]
        global::Windows.Foundation.IAsyncOperation<GattClientNotificationResult> NotifyValueAsync(global::Windows.Storage.Streams.IBuffer value, GattSubscribedClient subscribedClient);
        GattCharacteristicProperties CharacteristicProperties { get; }
        global::System.Collections.Generic.IReadOnlyList<GattLocalDescriptor> Descriptors { get; }
        global::System.Collections.Generic.IReadOnlyList<GattPresentationFormat> PresentationFormats { get; }
        GattProtectionLevel ReadProtectionLevel { get; }
        global::Windows.Storage.Streams.IBuffer StaticValue { get; }
        global::System.Collections.Generic.IReadOnlyList<GattSubscribedClient> SubscribedClients { get; }
        string UserDescription { get; }
        Guid Uuid { get; }
        GattProtectionLevel WriteProtectionLevel { get; }
        event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, GattReadRequestedEventArgs> ReadRequested;
        event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, object> SubscribedClientsChanged;
        event global::Windows.Foundation.TypedEventHandler<GattLocalCharacteristic, GattWriteRequestedEventArgs> WriteRequested;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("FAF73DB4-4CFF-44C7-8445-040E6EAD0063")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalCharacteristicParameters
    {
        GattCharacteristicProperties CharacteristicProperties { get; set; }
        global::System.Collections.Generic.IList<GattPresentationFormat> PresentationFormats { get; }
        GattProtectionLevel ReadProtectionLevel { get; set; }
        global::Windows.Storage.Streams.IBuffer StaticValue { get; set; }
        string UserDescription { get; set; }
        GattProtectionLevel WriteProtectionLevel { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("7975DE9B-0170-4397-9666-92F863F12EE6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalCharacteristicResult
    {
        GattLocalCharacteristic Characteristic { get; }
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F48EBE06-789D-4A4B-8652-BD017B5D2FC6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptor))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalDescriptor
    {
        GattProtectionLevel ReadProtectionLevel { get; }
        global::Windows.Storage.Streams.IBuffer StaticValue { get; }
        Guid Uuid { get; }
        GattProtectionLevel WriteProtectionLevel { get; }
        event global::Windows.Foundation.TypedEventHandler<GattLocalDescriptor, GattReadRequestedEventArgs> ReadRequested;
        event global::Windows.Foundation.TypedEventHandler<GattLocalDescriptor, GattWriteRequestedEventArgs> WriteRequested;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("5FDEDE6A-F3C1-4B66-8C4B-E3D2293B40E9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalDescriptorParameters
    {
        GattProtectionLevel ReadProtectionLevel { get; set; }
        global::Windows.Storage.Streams.IBuffer StaticValue { get; set; }
        GattProtectionLevel WriteProtectionLevel { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("375791BE-321F-4366-BFC1-3BC6B82C79F8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalDescriptorResult
    {
        GattLocalDescriptor Descriptor { get; }
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F513E258-F7F7-4902-B803-57FCC7D6FE83")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalService))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattLocalService
    {
        global::Windows.Foundation.IAsyncOperation<GattLocalCharacteristicResult> CreateCharacteristicAsync(Guid characteristicUuid, GattLocalCharacteristicParameters parameters);
        global::System.Collections.Generic.IReadOnlyList<GattLocalCharacteristic> Characteristics { get; }
        Guid Uuid { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("196D0021-FAAD-45DC-AE5B-2AC3184E84DB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormat))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattPresentationFormat
    {
        ushort Description { get; }
        int Exponent { get; }
        byte FormatType { get; }
        byte Namespace { get; }
        ushort Unit { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("196D0020-FAAD-45DC-AE5B-2AC3184E84DB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattPresentationFormatStatics
    {
        byte BluetoothSigAssignedNumbers { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A9C21713-B82F-435E-B634-21FD85A43C07")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattPresentationFormatStatics2
    {
        GattPresentationFormat FromParts(byte formatType, int exponent, ushort unit, byte namespaceId, ushort description);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("FAF1BA0A-30BA-409C-BEF7-CFFB6D03B8FB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattPresentationFormatTypesStatics
    {
        byte Bit2 { get; }
        byte Boolean { get; }
        byte DUInt16 { get; }
        byte Float { get; }
        byte Float32 { get; }
        byte Float64 { get; }
        byte Nibble { get; }
        byte SFloat { get; }
        byte SInt12 { get; }
        byte SInt128 { get; }
        byte SInt16 { get; }
        byte SInt24 { get; }
        byte SInt32 { get; }
        byte SInt48 { get; }
        byte SInt64 { get; }
        byte SInt8 { get; }
        byte Struct { get; }
        byte UInt12 { get; }
        byte UInt128 { get; }
        byte UInt16 { get; }
        byte UInt24 { get; }
        byte UInt32 { get; }
        byte UInt48 { get; }
        byte UInt64 { get; }
        byte UInt8 { get; }
        byte Utf16 { get; }
        byte Utf8 { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("CA46C5C5-0ECC-4809-BEA3-CF79BC991E37")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattProtocolErrorStatics
    {
        byte AttributeNotFound { get; }
        byte AttributeNotLong { get; }
        byte InsufficientAuthentication { get; }
        byte InsufficientAuthorization { get; }
        byte InsufficientEncryption { get; }
        byte InsufficientEncryptionKeySize { get; }
        byte InsufficientResources { get; }
        byte InvalidAttributeValueLength { get; }
        byte InvalidHandle { get; }
        byte InvalidOffset { get; }
        byte InvalidPdu { get; }
        byte PrepareQueueFull { get; }
        byte ReadNotPermitted { get; }
        byte RequestNotSupported { get; }
        byte UnlikelyError { get; }
        byte UnsupportedGroupType { get; }
        byte WriteNotPermitted { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("63A66F09-1AEA-4C4C-A50F-97BAE474B348")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattReadClientCharacteristicConfigurationDescriptorResult
    {
        GattClientCharacteristicConfigurationDescriptorValue ClientCharacteristicConfigurationDescriptor { get; }
        GattCommunicationStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("1BF1A59D-BA4D-4622-8651-F4EE150D0A5D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattReadClientCharacteristicConfigurationDescriptorResult2
    {
        global::System.Nullable<byte> ProtocolError { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F1DD6535-6ACD-42A6-A4BB-D789DAE0043E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattReadRequest
    {
        void RespondWithValue(global::Windows.Storage.Streams.IBuffer value);
        void RespondWithProtocolError(byte protocolError);
        uint Length { get; }
        uint Offset { get; }
        GattRequestState State { get; }
        event global::Windows.Foundation.TypedEventHandler<GattReadRequest, GattRequestStateChangedEventArgs> StateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("93497243-F39C-484B-8AB6-996BA486CFA3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattReadRequestedEventArgs
    {
        global::Windows.Foundation.Deferral GetDeferral();
        global::Windows.Foundation.IAsyncOperation<GattReadRequest> GetRequestAsync();
        GattSession Session { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("63A66F08-1AEA-4C4C-A50F-97BAE474B348")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattReadResult
    {
        GattCommunicationStatus Status { get; }
        global::Windows.Storage.Streams.IBuffer Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A10F50A0-FB43-48AF-BAAA-638A5C6329FE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattReadResult2
    {
        global::System.Nullable<byte> ProtocolError { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("63A66F07-1AEA-4C4C-A50F-97BAE474B348")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattReliableWriteTransaction
    {
        void WriteValue(GattCharacteristic characteristic, global::Windows.Storage.Streams.IBuffer value);
        global::Windows.Foundation.IAsyncOperation<GattCommunicationStatus> CommitAsync();
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("51113987-EF12-462F-9FB2-A1A43A679416")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattReliableWriteTransaction2
    {
        global::Windows.Foundation.IAsyncOperation<GattWriteResult> CommitWithResultAsync();
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("E834D92C-27BE-44B3-9D0D-4FC6E808DD3F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattRequestStateChangedEventArgs
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        GattRequestState State { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("7822B3CD-2889-4F86-A051-3F0AED1C2760")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProvider))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProvider
    {
        [global::Windows.Foundation.Metadata.Overload(@"StartAdvertising")]
        void StartAdvertising();
        [global::Windows.Foundation.Metadata.Overload(@"StartAdvertisingWithParameters")]
        void StartAdvertising(GattServiceProviderAdvertisingParameters parameters);
        void StopAdvertising();
        GattServiceProviderAdvertisementStatus AdvertisementStatus { get; }
        GattLocalService Service { get; }
        event global::Windows.Foundation.TypedEventHandler<GattServiceProvider, GattServiceProviderAdvertisementStatusChangedEventArgs> AdvertisementStatusChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9EF531A9-CF12-59A3-A81C-362F4AABAACF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProvider2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 1245184u)]
    internal interface IGattServiceProvider2
    {
        void UpdateAdvertisingParameters(GattServiceProviderAdvertisingParameters parameters);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("59A5AA65-FA21-4FFC-B155-04D928012686")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderAdvertisementStatusChangedEventArgs
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        GattServiceProviderAdvertisementStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("E2CE31AB-6315-4C22-9BD7-781DBC3D8D82")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderAdvertisingParameters
    {
        bool IsConnectable { get; set; }
        bool IsDiscoverable { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("FF68468D-CA92-4434-9743-0E90988AD879")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 524288u)]
    internal interface IGattServiceProviderAdvertisingParameters2
    {
        global::Windows.Storage.Streams.IBuffer ServiceData { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A23546B2-B216-5929-9055-F1313DD53E2A")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 1245184u)]
    internal interface IGattServiceProviderAdvertisingParameters3
    {
        bool UseLowEnergyUncoded1MPhyAsSecondaryPhy { get; set; }
        bool UseLowEnergyUncoded2MPhyAsSecondaryPhy { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("764696D8-C53E-428C-8A48-67AFE02C3AE6")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderResult
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        GattServiceProvider ServiceProvider { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("31794063-5256-4054-A4F4-7BBE7755A57E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderStatics
    {
        [global::Windows.Foundation.Metadata.Overload(@"CreateAsync")]
        global::Windows.Foundation.IAsyncOperation<GattServiceProviderResult> CreateAsync(Guid serviceUuid);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("6DC57058-9ABA-4417-B8F2-DCE016D34EE2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattServiceUuidsStatics
    {
        Guid Battery { get; }
        Guid BloodPressure { get; }
        Guid CyclingSpeedAndCadence { get; }
        Guid GenericAccess { get; }
        Guid GenericAttribute { get; }
        Guid Glucose { get; }
        Guid HealthThermometer { get; }
        Guid HeartRate { get; }
        Guid RunningSpeedAndCadence { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("D2AE94F5-3D15-4F79-9C0C-EAAFA675155C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattServiceUuidsStatics2
    {
        Guid AlertNotification { get; }
        Guid CurrentTime { get; }
        Guid CyclingPower { get; }
        Guid DeviceInformation { get; }
        Guid HumanInterfaceDevice { get; }
        Guid ImmediateAlert { get; }
        Guid LinkLoss { get; }
        Guid LocationAndNavigation { get; }
        Guid NextDstChange { get; }
        Guid PhoneAlertStatus { get; }
        Guid ReferenceTimeUpdate { get; }
        Guid ScanParameters { get; }
        Guid TxPower { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("D23B5143-E04E-4C24-999C-9C256F9856B1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSession))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattSession
    {
        bool CanMaintainConnection { get; }
        global::Windows.Devices.Bluetooth.BluetoothDeviceId DeviceId { get; }
        bool MaintainConnection { get; set; }
        ushort MaxPduSize { get; }
        GattSessionStatus SessionStatus { get; }
        event global::Windows.Foundation.TypedEventHandler<GattSession, object> MaxPduSizeChanged;
        event global::Windows.Foundation.TypedEventHandler<GattSession, GattSessionStatusChangedEventArgs> SessionStatusChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("2E65B95C-539F-4DB7-82A8-73BDBBF73EBF")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattSessionStatics
    {
        global::Windows.Foundation.IAsyncOperation<GattSession> FromDeviceIdAsync(global::Windows.Devices.Bluetooth.BluetoothDeviceId deviceId);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("7605B72E-837F-404C-AB34-3163F39DDF32")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattSessionStatusChangedEventArgs
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        GattSessionStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("736E9001-15A4-4EC2-9248-E3F20D463BE9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClient))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattSubscribedClient
    {
        ushort MaxNotificationSize { get; }
        GattSession Session { get; }
        event global::Windows.Foundation.TypedEventHandler<GattSubscribedClient, object> MaxNotificationSizeChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("D21BDB54-06E3-4ED8-A263-ACFAC8BA7313")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattValueChangedEventArgs
    {
        global::Windows.Storage.Streams.IBuffer CharacteristicValue { get; }
        global::System.DateTimeOffset Timestamp { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AEB6A9ED-DE2F-4FC2-A9A8-94EA7844F13D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattWriteRequest
    {
        void Respond();
        void RespondWithProtocolError(byte protocolError);
        uint Offset { get; }
        GattWriteOption Option { get; }
        GattRequestState State { get; }
        global::Windows.Storage.Streams.IBuffer Value { get; }
        event global::Windows.Foundation.TypedEventHandler<GattWriteRequest, GattRequestStateChangedEventArgs> StateChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("2DEC8BBE-A73A-471A-94D5-037DEADD0806")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgs))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattWriteRequestedEventArgs
    {
        global::Windows.Foundation.Deferral GetDeferral();
        global::Windows.Foundation.IAsyncOperation<GattWriteRequest> GetRequestAsync();
        GattSession Session { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("4991DDB1-CB2B-44F7-99FC-D29A2871DC9B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResult))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattWriteResult
    {
        global::System.Nullable<byte> ProtocolError { get; }
        GattCommunicationStatus Status { get; }
    }
}

#pragma warning disable CA1416
namespace ABI.Windows.Devices.Bluetooth.GenericAttributeProfile
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattCharacteristic
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattCharacteristicRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattCharacteristicsResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattCharacteristicsResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattClientNotificationResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattClientNotificationResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattDescriptor
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattDescriptorRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattDescriptorsResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattDescriptorsResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattDeviceService
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattDeviceServiceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattDeviceServicesResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattDeviceServicesResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalCharacteristic
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalCharacteristicRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalCharacteristicParameters
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParametersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalCharacteristicParametersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalCharacteristicResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalCharacteristicResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalDescriptor
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalDescriptorRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalDescriptorParameters
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParametersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalDescriptorParametersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalDescriptorResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalDescriptorResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattLocalService
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalServiceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattLocalServiceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattPresentationFormat
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattPresentationFormatRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattReadClientCharacteristicConfigurationDescriptorResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattReadClientCharacteristicConfigurationDescriptorResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattReadRequest
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattReadRequestRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattReadRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattReadRequestedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattReadResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattReadResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattReliableWriteTransaction
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransactionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattReliableWriteTransactionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReliableWriteTransaction(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattRequestStateChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattRequestStateChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProvider
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProviderAdvertisementStatusChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderAdvertisementStatusChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProviderAdvertisingParameters
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParametersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderAdvertisingParametersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProviderResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattSession
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattSessionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattSessionStatusChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattSessionStatusChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattSubscribedClient
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClientMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattSubscribedClientRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattValueChangedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattValueChangedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattWriteRequest
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattWriteRequestRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattWriteRequestedEventArgs
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattWriteRequestedEventArgsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattWriteResult
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResultMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResultMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattWriteResultRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult(inspectable.ObjRef);
    }
    internal static class IGattCharacteristicMethods
    {


        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor> GetDescriptors(IObjectReference _obj, Guid descriptorUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[6](ThisPtr, descriptorUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptor.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult> ReadValueAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult> ReadValueAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[15](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus> WriteValueAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCommunicationStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus> WriteValueAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption writeOption)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption, IntPtr*, int>**)ThisPtr)[17](ThisPtr, MarshalInspectable<object>.GetAbi(__value), writeOption, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCommunicationStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult> ReadClientCharacteristicConfigurationDescriptorAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[18](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadClientCharacteristicConfigurationDescriptorResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadClientCharacteristicConfigurationDescriptorResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus> WriteClientCharacteristicConfigurationDescriptorAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue, IntPtr*, int>**)ThisPtr)[19](ThisPtr, clientCharacteristicConfigurationDescriptorValue, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCommunicationStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe ushort get_AttributeHandle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties get_CharacteristicProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat> get_PresentationFormats(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattPresentationFormat.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[9](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe string get_UserDescription(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>>> _ValueChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>>> MakeValueChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ValueChanged_, new(), null);
            return _ValueChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>>> _ValueChanged => _ValueChanged_ ?? MakeValueChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>> Get_ValueChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ValueChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristic__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattValueChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[20],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[21],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC1, 0x50, 0xCB, 0x59, 0x34, 0x59, 0x68, 0x4F, 0xA1, 0x98, 0xEB, 0x86, 0x4F, 0xA4, 0x4E, 0x6B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("59CB50C1-5934-4F68-A198-EB864FA44E6B")]
    internal interface IGattCharacteristic : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic
    {
    }
    internal static class IGattCharacteristic2Methods
    {


        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor> GetAllDescriptors(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptor.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService get_Service(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x78, 0xB5, 0x1A, 0xAE, 0x6, 0xEC, 0x64, 0x47, 0xB7, 0x80, 0x98, 0x35, 0xA1, 0xD3, 0x5D, 0x6E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AE1AB578-EC06-4764-B780-9835A1D35D6E")]
    internal interface IGattCharacteristic2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic2
    {
    }
    internal static class IGattCharacteristic3Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult> GetDescriptorsAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptorsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult> GetDescriptorsAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[7](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptorsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult> GetDescriptorsForUuidAsync(IObjectReference _obj, Guid descriptorUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[8](ThisPtr, descriptorUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptorsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult> GetDescriptorsForUuidAsync(IObjectReference _obj, Guid descriptorUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[9](ThisPtr, descriptorUuid, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptorsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptorsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult> WriteValueWithResultAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult> WriteValueWithResultAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption writeOption)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value), writeOption, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult> WriteClientCharacteristicConfigurationDescriptorWithResultAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue clientCharacteristicConfigurationDescriptorValue)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue, IntPtr*, int>**)ThisPtr)[12](ThisPtr, clientCharacteristicConfigurationDescriptorValue, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x3E, 0x66, 0x3C, 0x3F, 0xD4, 0x93, 0x6B, 0x40, 0xB8, 0x17, 0xDB, 0x81, 0xF8, 0xED, 0x53, 0xB3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3F3C663E-93D4-406B-B817-DB81F8ED53B3")]
    internal interface IGattCharacteristic3 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristic3
    {
    }
    internal static class IGattCharacteristicStaticsMethods
    {


        internal static unsafe Guid ConvertShortIdToUuid(IObjectReference _obj, ushort shortId)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, Guid*, int>**)ThisPtr)[6](ThisPtr, shortId, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC3, 0x50, 0xCB, 0x59, 0x34, 0x59, 0x68, 0x4F, 0xA1, 0x98, 0xEB, 0x86, 0x4F, 0xA4, 0x4E, 0x6B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("59CB50C3-5934-4F68-A198-EB864FA44E6B")]
    internal interface IGattCharacteristicStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicStatics
    {
    }
    internal static class IGattCharacteristicUuidsStaticsMethods
    {

        internal static unsafe Guid get_BatteryLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BloodPressureFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BloodPressureMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BodySensorLocation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CscFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CscMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GlucoseFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GlucoseMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GlucoseMeasurementContext(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HeartRateControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HeartRateMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_IntermediateCuffPressure(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_IntermediateTemperature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_MeasurementInterval(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RecordAccessControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RscFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RscMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SCControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SensorLocation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TemperatureMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TemperatureType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0x45, 0xFA, 0x58, 0xDE, 0xB1, 0xC, 0x47, 0xB7, 0xDE, 0xD, 0x11, 0xFF, 0x44, 0xF4, 0xB7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("58FA4586-B1DE-470C-B7DE-0D11FF44F4B7")]
    internal interface IGattCharacteristicUuidsStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics
    {
    }
    internal static class IGattCharacteristicUuidsStatics2Methods
    {

        internal static unsafe Guid get_AlertCategoryId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_AlertCategoryIdBitMask(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_AlertLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_AlertNotificationControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_AlertStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BootKeyboardInputReport(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BootKeyboardOutputReport(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BootMouseInputReport(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CurrentTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingPowerControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingPowerFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingPowerMeasurement(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingPowerVector(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_DateTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_DayDateTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_DayOfWeek(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_DstOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ExactTime256(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_FirmwareRevisionString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GapAppearance(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GapDeviceName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GapPeripheralPreferredConnectionParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[39](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GapPeripheralPrivacyFlag(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[40](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GapReconnectionAddress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[44](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GattServiceChanged(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[53](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HardwareRevisionString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HidControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HidInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_Ieee1107320601RegulatoryCertificationDataList(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LnControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LnFeature(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[32](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LocalTimeInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LocationAndSpeed(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[34](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ManufacturerNameString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[35](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ModelNumberString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[36](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_Navigation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[37](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_NewAlert(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[38](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_PnpId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[41](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_PositionQuality(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[42](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ProtocolMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[43](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ReferenceTimeInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[45](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_Report(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[46](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ReportMap(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[47](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RingerControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[48](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RingerSetting(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[49](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ScanIntervalWindow(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[50](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ScanRefresh(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[51](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SerialNumberString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[52](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SoftwareRevisionString(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[54](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SupportUnreadAlertCategory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[56](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SupportedNewAlertCategory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[55](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_SystemId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[57](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeAccuracy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[58](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeSource(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[59](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeUpdateControlPoint(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[60](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeUpdateState(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[61](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeWithDst(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[62](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TimeZone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[63](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TxPowerLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[64](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_UnreadAlertStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[65](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0xB4, 0x55, 0x18, 0x6E, 0xD4, 0x2C, 0x4A, 0x9C, 0x3F, 0xED, 0x6D, 0xEA, 0x29, 0xE7, 0xBE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1855B425-D46E-4A2C-9C3F-ED6DEA29E7BE")]
    internal interface IGattCharacteristicUuidsStatics2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicUuidsStatics2
    {
    }
    internal static class IGattCharacteristicsResultMethods
    {

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic> get_Characteristics(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristic.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0x94, 0x94, 0x11, 0x57, 0xB2, 0x3E, 0x4F, 0x9D, 0xB7, 0xF6, 0x8B, 0xC9, 0xA9, 0xAE, 0xF2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1194945C-B257-4F3E-9DB7-F68BC9A9AEF2")]
    internal interface IGattCharacteristicsResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattCharacteristicsResult
    {
    }
    internal static class IGattClientNotificationResultMethods
    {

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient get_SubscribedClient(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x99, 0x55, 0x6D, 0x50, 0x12, 0x1, 0x9A, 0x41, 0x8E, 0x3B, 0xAE, 0x21, 0xAF, 0xAB, 0xD2, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("506D5599-0112-419A-8E3B-AE21AFABD2C2")]
    internal interface IGattClientNotificationResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult
    {
    }
    internal static class IGattClientNotificationResult2Methods
    {

        internal static unsafe ushort get_BytesSent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x97, 0xC4, 0xAE, 0x8F, 0xE0, 0x45, 0x7E, 0x49, 0x95, 0x82, 0x29, 0xA1, 0xFE, 0x28, 0x1A, 0xD5 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8FAEC497-45E0-497E-9582-29A1FE281AD5")]
    internal interface IGattClientNotificationResult2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattClientNotificationResult2
    {
    }
    internal static class IGattDescriptorMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult> ReadValueAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult> ReadValueAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[11](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus> WriteValueAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCommunicationStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe ushort get_AttributeHandle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[7](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2B, 0x5F, 0x5, 0x92, 0x84, 0x80, 0x44, 0x43, 0xB4, 0xC2, 0x28, 0x4D, 0xE1, 0x9A, 0x85, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("92055F2B-8084-4344-B4C2-284DE19A8506")]
    internal interface IGattDescriptor : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor
    {
    }
    internal static class IGattDescriptor2Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult> WriteValueWithResultAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x39, 0x3D, 0x56, 0x8F, 0x30, 0xD6, 0x6C, 0x40, 0xBA, 0x11, 0x10, 0xCD, 0xD1, 0x6B, 0xE, 0x5E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8F563D39-D630-406C-BA11-10CDD16B0E5E")]
    internal interface IGattDescriptor2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptor2
    {
    }
    internal static class IGattDescriptorStaticsMethods
    {


        internal static unsafe Guid ConvertShortIdToUuid(IObjectReference _obj, ushort shortId)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, Guid*, int>**)ThisPtr)[6](ThisPtr, shortId, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2D, 0x5F, 0x5, 0x92, 0x84, 0x80, 0x44, 0x43, 0xB4, 0xC2, 0x28, 0x4D, 0xE1, 0x9A, 0x85, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("92055F2D-8084-4344-B4C2-284DE19A8506")]
    internal interface IGattDescriptorStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorStatics
    {
    }
    internal static class IGattDescriptorUuidsStaticsMethods
    {

        internal static unsafe Guid get_CharacteristicAggregateFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CharacteristicExtendedProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CharacteristicPresentationFormat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CharacteristicUserDescription(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ClientCharacteristicConfiguration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ServerCharacteristicConfiguration(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCE, 0x62, 0xF8, 0xA6, 0xFC, 0x9C, 0xF1, 0x42, 0x91, 0x85, 0xFF, 0x37, 0xB7, 0x51, 0x81, 0xD3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A6F862CE-9CFC-42F1-9185-FF37B75181D3")]
    internal interface IGattDescriptorUuidsStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorUuidsStatics
    {
    }
    internal static class IGattDescriptorsResultMethods
    {

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor> get_Descriptors(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDescriptor.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDescriptor>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF3, 0x91, 0xC0, 0x9B, 0xE7, 0x95, 0x89, 0x44, 0x8D, 0x25, 0xFF, 0x81, 0x95, 0x5A, 0x57, 0xB9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9BC091F3-95E7-4489-8D25-FF81955A57B9")]
    internal interface IGattDescriptorsResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDescriptorsResult
    {
    }
    internal static class IGattDeviceServiceMethods
    {


        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic> GetCharacteristics(IObjectReference _obj, Guid characteristicUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[6](ThisPtr, characteristicUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristic.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> GetIncludedServices(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[7](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe ushort get_AttributeHandle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_DeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5, 0x7C, 0x7B, 0xAC, 0x3C, 0xB3, 0xCF, 0x47, 0x99, 0xF, 0x6B, 0x8F, 0x55, 0x77, 0xDF, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AC7B7C05-B33C-47CF-990F-6B8F5577DF71")]
    internal interface IGattDeviceService : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService
    {
    }
    internal static class IGattDeviceService2Methods
    {


        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic> GetAllCharacteristics(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristic.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> GetAllIncludedServices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEDevice get_Device(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEDevice.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> get_ParentServices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB, 0x52, 0x54, 0xFC, 0xD, 0xB, 0x8, 0x47, 0xBA, 0xE0, 0x9F, 0xFD, 0x94, 0x89, 0xBC, 0x59 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FC54520B-0B0D-4708-BAE0-9FFD9489BC59")]
    internal interface IGattDeviceService2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService2
    {
    }
    internal static class IGattDeviceService3Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_DeviceAccessStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattOpenStatus> OpenAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode sharingMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode, IntPtr*, int>**)ThisPtr)[10](ThisPtr, sharingMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattOpenStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattOpenStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattOpenStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult> GetCharacteristicsAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristicsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult> GetCharacteristicsAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[12](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristicsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult> GetCharacteristicsForUuidAsync(IObjectReference _obj, Guid characteristicUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[13](ThisPtr, characteristicUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristicsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult> GetCharacteristicsForUuidAsync(IObjectReference _obj, Guid characteristicUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[14](ThisPtr, characteristicUuid, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCharacteristicsResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicsResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetIncludedServicesAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetIncludedServicesAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[16](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetIncludedServicesForUuidAsync(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[17](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetIncludedServicesForUuidAsync(IObjectReference _obj, Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[18](ThisPtr, serviceUuid, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Enumeration.DeviceAccessInformation get_DeviceAccessInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession get_Session(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode get_SharingMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x50, 0xA9, 0x93, 0xB2, 0x53, 0xC, 0x7C, 0x43, 0xA9, 0xB3, 0x5C, 0x32, 0x10, 0xC6, 0xE5, 0x69 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B293A950-0C53-437C-A9B3-5C3210C6E569")]
    internal interface IGattDeviceService3 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceService3
    {
    }
    internal static class IGattDeviceServiceStaticsMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> FromIdAsync(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromUuid(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[7](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromShortId(IObjectReference _obj, ushort serviceShortId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, IntPtr*, int>**)ThisPtr)[8](ThisPtr, serviceShortId, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid ConvertShortIdToUuid(IObjectReference _obj, ushort shortId)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, Guid*, int>**)ThisPtr)[9](ThisPtr, shortId, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x22, 0x0, 0x6D, 0x19, 0xAD, 0xFA, 0xDC, 0x45, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("196D0022-FAAD-45DC-AE5B-2AC3184E84DB")]
    internal interface IGattDeviceServiceStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics
    {
    }
    internal static class IGattDeviceServiceStatics2Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> FromIdAsync(IObjectReference _obj, string deviceId, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode sharingMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSharingMode, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId), sharingMode, &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorForBluetoothDeviceId(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __bluetoothDeviceId = default;
            IntPtr __retval = default;
            try
            {
                __bluetoothDeviceId = global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.CreateMarshaler2(bluetoothDeviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__bluetoothDeviceId), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__bluetoothDeviceId);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorForBluetoothDeviceId(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __bluetoothDeviceId = default;
            IntPtr __retval = default;
            try
            {
                __bluetoothDeviceId = global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.CreateMarshaler2(bluetoothDeviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__bluetoothDeviceId), cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__bluetoothDeviceId);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorForBluetoothDeviceIdAndUuid(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __bluetoothDeviceId = default;
            IntPtr __retval = default;
            try
            {
                __bluetoothDeviceId = global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.CreateMarshaler2(bluetoothDeviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, Guid, IntPtr*, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__bluetoothDeviceId), serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__bluetoothDeviceId);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorForBluetoothDeviceIdAndUuid(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothDeviceId bluetoothDeviceId, Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __bluetoothDeviceId = default;
            IntPtr __retval = default;
            try
            {
                __bluetoothDeviceId = global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.CreateMarshaler2(bluetoothDeviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, Guid, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__bluetoothDeviceId), serviceUuid, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__bluetoothDeviceId);
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6E, 0x18, 0x4, 0x6, 0xA6, 0x24, 0xD, 0x4B, 0xA2, 0xF2, 0x30, 0xCC, 0x1, 0x54, 0x5D, 0x25 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0604186E-24A6-4B0D-A2F2-30CC01545D25")]
    internal interface IGattDeviceServiceStatics2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServiceStatics2
    {
    }
    internal static class IGattDeviceServicesResultMethods
    {

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> get_Services(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEE, 0xD3, 0x1D, 0x17, 0x6D, 0x1, 0x9D, 0x41, 0x83, 0x8A, 0x57, 0x6C, 0xF4, 0x75, 0xA3, 0xD8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("171DD3EE-016D-419D-838A-576CF475A3D8")]
    internal interface IGattDeviceServicesResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattDeviceServicesResult
    {
    }
    internal static class IGattLocalCharacteristicMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult> CreateDescriptorAsync(IObjectReference _obj, Guid descriptorUuid, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters parameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameters = default;
            IntPtr __retval = default;
            try
            {
                __parameters = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorParameters.CreateMarshaler2(parameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, descriptorUuid, MarshalInspectable<object>.GetAbi(__parameters), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptorResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameters);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptorResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>> NotifyValueAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[22](ThisPtr, MarshalInspectable<object>.GetAbi(__value), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattClientNotificationResult_.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult> NotifyValueAsync(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient subscribedClient)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            ObjectReferenceValue __subscribedClient = default;
            IntPtr __retval = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                __subscribedClient = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient.CreateMarshaler2(subscribedClient);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[23](ThisPtr, MarshalInspectable<object>.GetAbi(__value), MarshalInspectable<object>.GetAbi(__subscribedClient), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattClientNotificationResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
                MarshalInspectable<object>.DisposeMarshaler(__subscribedClient);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientNotificationResult>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties get_CharacteristicProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor> get_Descriptors(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptor.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat> get_PresentationFormats(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[14](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattPresentationFormat.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ReadProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_StaticValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient> get_SubscribedClients(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattSubscribedClient.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_UserDescription(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_WriteProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> _ReadRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> MakeReadRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ReadRequested_, new(), null);
            return _ReadRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> _ReadRequested => _ReadRequested_ ?? MakeReadRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>> Get_ReadRequested2(IObjectReference _obj, object _thisObj)
        {
            return _ReadRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristic__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[18],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[19],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, object>>> _SubscribedClientsChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, object>>> MakeSubscribedClientsChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _SubscribedClientsChanged_, new(), null);
            return _SubscribedClientsChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, object>>> _SubscribedClientsChanged => _SubscribedClientsChanged_ ?? MakeSubscribedClientsChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, object>> Get_SubscribedClientsChanged2(IObjectReference _obj, object _thisObj)
        {
            return _SubscribedClientsChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristic__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[16],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[17],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> _WriteRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> MakeWriteRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _WriteRequested_, new(), null);
            return _WriteRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> _WriteRequested => _WriteRequested_ ?? MakeWriteRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>> Get_WriteRequested2(IObjectReference _obj, object _thisObj)
        {
            return _WriteRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristic__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[20],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[21],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6D, 0x37, 0xDE, 0xAE, 0x12, 0x54, 0x74, 0x4D, 0x92, 0xA8, 0x8D, 0xEB, 0x85, 0x26, 0x82, 0x9C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AEDE376D-5412-4D74-92A8-8DEB8526829C")]
    internal interface IGattLocalCharacteristic : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristic
    {
    }
    internal static class IGattLocalCharacteristicParametersMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties get_CharacteristicProperties(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_CharacteristicProperties(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristicProperties, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::System.Collections.Generic.IList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat> get_PresentationFormats(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[16](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattPresentationFormat.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ReadProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ReadProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_StaticValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_StaticValue(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe string get_UserDescription(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[15](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_UserDescription(IObjectReference _obj, string value)
        {
            var ThisPtr = _obj.ThisPtr;

            MarshalString.Pinnable __value = new(value);
            fixed(void* ___value = __value)
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[14](ThisPtr, MarshalString.GetAbi(ref __value)));
                global::System.GC.KeepAlive(_obj);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_WriteProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_WriteProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[12](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB4, 0x3D, 0xF7, 0xFA, 0xFF, 0x4C, 0xC7, 0x44, 0x84, 0x45, 0x4, 0xE, 0x6E, 0xAD, 0x0, 0x63 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FAF73DB4-4CFF-44C7-8445-040E6EAD0063")]
    internal interface IGattLocalCharacteristicParameters : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicParameters
    {
    }
    internal static class IGattLocalCharacteristicResultMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic get_Characteristic(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9B, 0xDE, 0x75, 0x79, 0x70, 0x1, 0x97, 0x43, 0x96, 0x66, 0x92, 0xF8, 0x63, 0xF1, 0x2E, 0xE6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7975DE9B-0170-4397-9666-92F863F12EE6")]
    internal interface IGattLocalCharacteristicResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalCharacteristicResult
    {
    }
    internal static class IGattLocalDescriptorMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ReadProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_StaticValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_WriteProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> _ReadRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> MakeReadRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ReadRequested_, new(), null);
            return _ReadRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>>> _ReadRequested => _ReadRequested_ ?? MakeReadRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequestedEventArgs>> Get_ReadRequested2(IObjectReference _obj, object _thisObj)
        {
            return _ReadRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptor__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> _WriteRequested_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> MakeWriteRequestedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _WriteRequested_, new(), null);
            return _WriteRequested_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>>> _WriteRequested => _WriteRequested_ ?? MakeWriteRequestedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequestedEventArgs>> Get_WriteRequested2(IObjectReference _obj, object _thisObj)
        {
            return _WriteRequested.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalDescriptor__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteRequestedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[12],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[13],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6, 0xBE, 0x8E, 0xF4, 0x9D, 0x78, 0x4B, 0x4A, 0x86, 0x52, 0xBD, 0x1, 0x7B, 0x5D, 0x2F, 0xC6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F48EBE06-789D-4A4B-8652-BD017B5D2FC6")]
    internal interface IGattLocalDescriptor : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptor
    {
    }
    internal static class IGattLocalDescriptorParametersMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_ReadProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ReadProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[8](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_StaticValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_StaticValue(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel get_WriteProtectionLevel(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_WriteProtectionLevel(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattProtectionLevel, int>**)ThisPtr)[10](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6A, 0xDE, 0xDE, 0x5F, 0xC1, 0xF3, 0x66, 0x4B, 0x8C, 0x4B, 0xE3, 0xD2, 0x29, 0x3B, 0x40, 0xE9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5FDEDE6A-F3C1-4B66-8C4B-E3D2293B40E9")]
    internal interface IGattLocalDescriptorParameters : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorParameters
    {
    }
    internal static class IGattLocalDescriptorResultMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor get_Descriptor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalDescriptor.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBE, 0x91, 0x57, 0x37, 0x1F, 0x32, 0x66, 0x43, 0xBF, 0xC1, 0x3B, 0xC6, 0xB8, 0x2C, 0x79, 0xF8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("375791BE-321F-4366-BFC1-3BC6B82C79F8")]
    internal interface IGattLocalDescriptorResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalDescriptorResult
    {
    }
    internal static class IGattLocalServiceMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult> CreateCharacteristicAsync(IObjectReference _obj, Guid characteristicUuid, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters parameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameters = default;
            IntPtr __retval = default;
            try
            {
                __parameters = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicParameters.CreateMarshaler2(parameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, characteristicUuid, MarshalInspectable<object>.GetAbi(__parameters), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristicResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameters);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristicResult>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic> get_Characteristics(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattLocalCharacteristic.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalCharacteristic>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe Guid get_Uuid(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0xE2, 0x13, 0xF5, 0xF7, 0xF7, 0x2, 0x49, 0xB8, 0x3, 0x57, 0xFC, 0xC7, 0xD6, 0xFE, 0x83 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F513E258-F7F7-4902-B803-57FCC7D6FE83")]
    internal interface IGattLocalService : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattLocalService
    {
    }
    internal static class IGattPresentationFormatMethods
    {

        internal static unsafe ushort get_Description(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe int get_Exponent(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            int __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_FormatType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Namespace(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Unit(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x21, 0x0, 0x6D, 0x19, 0xAD, 0xFA, 0xDC, 0x45, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("196D0021-FAAD-45DC-AE5B-2AC3184E84DB")]
    internal interface IGattPresentationFormat : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormat
    {
    }
    internal static class IGattPresentationFormatStaticsMethods
    {

        internal static unsafe byte get_BluetoothSigAssignedNumbers(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x20, 0x0, 0x6D, 0x19, 0xAD, 0xFA, 0xDC, 0x45, 0xAE, 0x5B, 0x2A, 0xC3, 0x18, 0x4E, 0x84, 0xDB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("196D0020-FAAD-45DC-AE5B-2AC3184E84DB")]
    internal interface IGattPresentationFormatStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics
    {
    }
    internal static class IGattPresentationFormatStatics2Methods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat FromParts(IObjectReference _obj, byte formatType, int exponent, ushort unit, byte namespaceId, ushort description)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int, ushort, byte, ushort, IntPtr*, int>**)ThisPtr)[6](ThisPtr, formatType, exponent, unit, namespaceId, description, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattPresentationFormat.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x13, 0x17, 0xC2, 0xA9, 0x2F, 0xB8, 0x5E, 0x43, 0xB6, 0x34, 0x21, 0xFD, 0x85, 0xA4, 0x3C, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A9C21713-B82F-435E-B634-21FD85A43C07")]
    internal interface IGattPresentationFormatStatics2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatStatics2
    {
    }
    internal static class IGattPresentationFormatTypesStaticsMethods
    {

        internal static unsafe byte get_Bit2(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Boolean(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_DUInt16(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Float(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Float32(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Float64(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Nibble(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SFloat(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt12(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt128(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt16(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt24(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt32(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt48(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt64(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_SInt8(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Struct(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[32](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt12(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt128(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt16(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt24(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt32(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt48(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt64(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UInt8(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Utf16(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_Utf8(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA, 0xBA, 0xF1, 0xFA, 0xBA, 0x30, 0x9C, 0x40, 0xBE, 0xF7, 0xCF, 0xFB, 0x6D, 0x3, 0xB8, 0xFB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FAF1BA0A-30BA-409C-BEF7-CFFB6D03B8FB")]
    internal interface IGattPresentationFormatTypesStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattPresentationFormatTypesStatics
    {
    }
    internal static class IGattProtocolErrorStaticsMethods
    {

        internal static unsafe byte get_AttributeNotFound(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_AttributeNotLong(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InsufficientAuthentication(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InsufficientAuthorization(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InsufficientEncryption(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InsufficientEncryptionKeySize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InsufficientResources(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InvalidAttributeValueLength(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InvalidHandle(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InvalidOffset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_InvalidPdu(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_PrepareQueueFull(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_ReadNotPermitted(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_RequestNotSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UnlikelyError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_UnsupportedGroupType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe byte get_WriteNotPermitted(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC5, 0xC5, 0x46, 0xCA, 0xCC, 0xE, 0x9, 0x48, 0xBE, 0xA3, 0xCF, 0x79, 0xBC, 0x99, 0x1E, 0x37 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CA46C5C5-0ECC-4809-BEA3-CF79BC991E37")]
    internal interface IGattProtocolErrorStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattProtocolErrorStatics
    {
    }
    internal static class IGattReadClientCharacteristicConfigurationDescriptorResultMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue get_ClientCharacteristicConfigurationDescriptor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattClientCharacteristicConfigurationDescriptorValue*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9, 0x6F, 0xA6, 0x63, 0xEA, 0x1A, 0x4C, 0x4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("63A66F09-1AEA-4C4C-A50F-97BAE474B348")]
    internal interface IGattReadClientCharacteristicConfigurationDescriptorResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult
    {
    }
    internal static class IGattReadClientCharacteristicConfigurationDescriptorResult2Methods
    {

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x9D, 0xA5, 0xF1, 0x1B, 0x4D, 0xBA, 0x22, 0x46, 0x86, 0x51, 0xF4, 0xEE, 0x15, 0xD, 0xA, 0x5D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("1BF1A59D-BA4D-4622-8651-F4EE150D0A5D")]
    internal interface IGattReadClientCharacteristicConfigurationDescriptorResult2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadClientCharacteristicConfigurationDescriptorResult2
    {
    }
    internal static class IGattReadRequestMethods
    {


        internal static unsafe void RespondWithValue(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe void RespondWithProtocolError(IObjectReference _obj, byte protocolError)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[12](ThisPtr, protocolError));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe uint get_Length(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe uint get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState get_State(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> _StateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> MakeStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_, new(), null);
            return _StateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> _StateChanged => _StateChanged_ ?? MakeStateChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>> Get_StateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _StateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadRequest__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattRequestStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x35, 0x65, 0xDD, 0xF1, 0xCD, 0x6A, 0xA6, 0x42, 0xA4, 0xBB, 0xD7, 0x89, 0xDA, 0xE0, 0x4, 0x3E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F1DD6535-6ACD-42A6-A4BB-D789DAE0043E")]
    internal interface IGattReadRequest : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequest
    {
    }
    internal static class IGattReadRequestedEventArgsMethods
    {


        internal static unsafe global::Windows.Foundation.Deferral GetDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Deferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Deferral.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest> GetRequestAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattReadRequest.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattReadRequest>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession get_Session(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0x72, 0x49, 0x93, 0x9C, 0xF3, 0x4B, 0x48, 0x8A, 0xB6, 0x99, 0x6B, 0xA4, 0x86, 0xCF, 0xA3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("93497243-F39C-484B-8AB6-996BA486CFA3")]
    internal interface IGattReadRequestedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadRequestedEventArgs
    {
    }
    internal static class IGattReadResultMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8, 0x6F, 0xA6, 0x63, 0xEA, 0x1A, 0x4C, 0x4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("63A66F08-1AEA-4C4C-A50F-97BAE474B348")]
    internal interface IGattReadResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult
    {
    }
    internal static class IGattReadResult2Methods
    {

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA0, 0x50, 0xF, 0xA1, 0x43, 0xFB, 0xAF, 0x48, 0xBA, 0xAA, 0x63, 0x8A, 0x5C, 0x63, 0x29, 0xFE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A10F50A0-FB43-48AF-BAAA-638A5C6329FE")]
    internal interface IGattReadResult2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReadResult2
    {
    }
    internal static class IGattReliableWriteTransactionMethods
    {


        internal static unsafe void WriteValue(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic characteristic, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __characteristic = default;
            ObjectReferenceValue __value = default;
            try
            {
                __characteristic = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic.CreateMarshaler2(characteristic);
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__characteristic), MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__characteristic);
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus> CommitAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattCommunicationStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7, 0x6F, 0xA6, 0x63, 0xEA, 0x1A, 0x4C, 0x4C, 0xA5, 0xF, 0x97, 0xBA, 0xE4, 0x74, 0xB3, 0x48 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("63A66F07-1AEA-4C4C-A50F-97BAE474B348")]
    internal interface IGattReliableWriteTransaction : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction
    {
    }
    internal static class IGattReliableWriteTransaction2Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult> CommitWithResultAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteResult>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x87, 0x39, 0x11, 0x51, 0x12, 0xEF, 0x2F, 0x46, 0x9F, 0xB2, 0xA1, 0xA4, 0x3A, 0x67, 0x94, 0x16 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("51113987-EF12-462F-9FB2-A1A43A679416")]
    internal interface IGattReliableWriteTransaction2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattReliableWriteTransaction2
    {
    }
    internal static class IGattRequestStateChangedEventArgsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState get_State(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2C, 0xD9, 0x34, 0xE8, 0xBE, 0x27, 0xB3, 0x44, 0x9D, 0xD, 0x4F, 0xC6, 0xE8, 0x8, 0xDD, 0x3F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E834D92C-27BE-44B3-9D0D-4FC6E808DD3F")]
    internal interface IGattRequestStateChangedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattRequestStateChangedEventArgs
    {
    }
    internal static class IGattServiceProviderMethods
    {


        internal static unsafe void StartAdvertising(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[10](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void StartAdvertising(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters parameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameters = default;
            try
            {
                __parameters = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters.CreateMarshaler2(parameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__parameters)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameters);
            }
        }

        internal static unsafe void StopAdvertising(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus get_AdvertisementStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService get_Service(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>>> _AdvertisementStatusChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>>> MakeAdvertisementStatusChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _AdvertisementStatusChanged_, new(), null);
            return _AdvertisementStatusChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>>> _AdvertisementStatusChanged => _AdvertisementStatusChanged_ ?? MakeAdvertisementStatusChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatusChangedEventArgs>> Get_AdvertisementStatusChanged2(IObjectReference _obj, object _thisObj)
        {
            return _AdvertisementStatusChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProvider__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderAdvertisementStatusChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCD, 0xB3, 0x22, 0x78, 0x89, 0x28, 0x86, 0x4F, 0xA0, 0x51, 0x3F, 0xA, 0xED, 0x1C, 0x27, 0x60 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7822B3CD-2889-4F86-A051-3F0AED1C2760")]
    internal interface IGattServiceProvider : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProvider
    {
    }
    internal static class IGattServiceProvider2Methods
    {


        internal static unsafe void UpdateAdvertisingParameters(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters parameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameters = default;
            try
            {
                __parameters = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters.CreateMarshaler2(parameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__parameters)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameters);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA9, 0x31, 0xF5, 0x9E, 0x12, 0xCF, 0xA3, 0x59, 0xA8, 0x1C, 0x36, 0x2F, 0x4A, 0xAB, 0xAA, 0xCF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9EF531A9-CF12-59A3-A81C-362F4AABAACF")]
    internal interface IGattServiceProvider2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProvider2
    {
    }
    internal static class IGattServiceProviderAdvertisementStatusChangedEventArgsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisementStatus*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x65, 0xAA, 0xA5, 0x59, 0x21, 0xFA, 0xFC, 0x4F, 0xB1, 0x55, 0x4, 0xD9, 0x28, 0x1, 0x26, 0x86 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("59A5AA65-FA21-4FFC-B155-04D928012686")]
    internal interface IGattServiceProviderAdvertisementStatusChangedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisementStatusChangedEventArgs
    {
    }
    internal static class IGattServiceProviderAdvertisingParametersMethods
    {

        internal static unsafe bool get_IsConnectable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsConnectable(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[6](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_IsDiscoverable(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_IsDiscoverable(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[8](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAB, 0x31, 0xCE, 0xE2, 0x15, 0x63, 0x22, 0x4C, 0x9B, 0xD7, 0x78, 0x1D, 0xBC, 0x3D, 0x8D, 0x82 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E2CE31AB-6315-4C22-9BD7-781DBC3D8D82")]
    internal interface IGattServiceProviderAdvertisingParameters : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters
    {
    }
    internal static class IGattServiceProviderAdvertisingParameters2Methods
    {

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_ServiceData(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_ServiceData(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8D, 0x46, 0x68, 0xFF, 0x92, 0xCA, 0x34, 0x44, 0x97, 0x43, 0xE, 0x90, 0x98, 0x8A, 0xD8, 0x79 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("FF68468D-CA92-4434-9743-0E90988AD879")]
    internal interface IGattServiceProviderAdvertisingParameters2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters2
    {
    }
    internal static class IGattServiceProviderAdvertisingParameters3Methods
    {

        internal static unsafe bool get_UseLowEnergyUncoded1MPhyAsSecondaryPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_UseLowEnergyUncoded1MPhyAsSecondaryPhy(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[7](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe bool get_UseLowEnergyUncoded2MPhyAsSecondaryPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_UseLowEnergyUncoded2MPhyAsSecondaryPhy(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[9](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB2, 0x46, 0x35, 0xA2, 0x16, 0xB2, 0x29, 0x59, 0x90, 0x55, 0xF1, 0x31, 0x3D, 0xD5, 0x3E, 0x2A };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A23546B2-B216-5929-9055-F1313DD53E2A")]
    internal interface IGattServiceProviderAdvertisingParameters3 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderAdvertisingParameters3
    {
    }
    internal static class IGattServiceProviderResultMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider get_ServiceProvider(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProvider.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0x96, 0x46, 0x76, 0x3E, 0xC5, 0x8C, 0x42, 0x8A, 0x48, 0x67, 0xAF, 0xE0, 0x2C, 0x3A, 0xE6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("764696D8-C53E-428C-8A48-67AFE02C3AE6")]
    internal interface IGattServiceProviderResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderResult
    {
    }
    internal static class IGattServiceProviderStaticsMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult> CreateAsync(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[6](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattServiceProviderResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderResult>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x63, 0x40, 0x79, 0x31, 0x56, 0x52, 0x54, 0x40, 0xA4, 0xF4, 0x7B, 0xBE, 0x77, 0x55, 0xA5, 0x7E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("31794063-5256-4054-A4F4-7BBE7755A57E")]
    internal interface IGattServiceProviderStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceProviderStatics
    {
    }
    internal static class IGattServiceUuidsStaticsMethods
    {

        internal static unsafe Guid get_Battery(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_BloodPressure(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingSpeedAndCadence(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GenericAccess(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_GenericAttribute(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_Glucose(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HealthThermometer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HeartRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_RunningSpeedAndCadence(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x58, 0x70, 0xC5, 0x6D, 0xBA, 0x9A, 0x17, 0x44, 0xB8, 0xF2, 0xDC, 0xE0, 0x16, 0xD3, 0x4E, 0xE2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6DC57058-9ABA-4417-B8F2-DCE016D34EE2")]
    internal interface IGattServiceUuidsStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics
    {
    }
    internal static class IGattServiceUuidsStatics2Methods
    {

        internal static unsafe Guid get_AlertNotification(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CurrentTime(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_CyclingPower(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_DeviceInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_HumanInterfaceDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ImmediateAlert(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LinkLoss(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_LocationAndNavigation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_NextDstChange(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_PhoneAlertStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ReferenceTimeUpdate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_ScanParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe Guid get_TxPower(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF5, 0x94, 0xAE, 0xD2, 0x15, 0x3D, 0x79, 0x4F, 0x9C, 0xC, 0xEA, 0xAF, 0xA6, 0x75, 0x15, 0x5C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D2AE94F5-3D15-4F79-9C0C-EAAFA675155C")]
    internal interface IGattServiceUuidsStatics2 : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattServiceUuidsStatics2
    {
    }
    internal static class IGattSessionMethods
    {

        internal static unsafe bool get_CanMaintainConnection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothDeviceId get_DeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_MaintainConnection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }
        internal static unsafe void set_MaintainConnection(IObjectReference _obj, bool value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[8](ThisPtr, (byte)(value ? 1 : 0)));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe ushort get_MaxPduSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus get_SessionStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, object>>> _MaxPduSizeChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, object>>> MakeMaxPduSizeChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _MaxPduSizeChanged_, new(), null);
            return _MaxPduSizeChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, object>>> _MaxPduSizeChanged => _MaxPduSizeChanged_ ?? MakeMaxPduSizeChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, object>> Get_MaxPduSizeChanged2(IObjectReference _obj, object _thisObj)
        {
            return _MaxPduSizeChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattSession__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[12],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[13],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>>> _SessionStatusChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>>> MakeSessionStatusChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _SessionStatusChanged_, new(), null);
            return _SessionStatusChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>>> _SessionStatusChanged => _SessionStatusChanged_ ?? MakeSessionStatusChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatusChangedEventArgs>> Get_SessionStatusChanged2(IObjectReference _obj, object _thisObj)
        {
            return _SessionStatusChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattSession__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattSessionStatusChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[14],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[15],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x43, 0x51, 0x3B, 0xD2, 0x4E, 0xE0, 0x24, 0x4C, 0x99, 0x9C, 0x9C, 0x25, 0x6F, 0x98, 0x56, 0xB1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D23B5143-E04E-4C24-999C-9C256F9856B1")]
    internal interface IGattSession : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSession
    {
    }
    internal static class IGattSessionStaticsMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession> FromDeviceIdAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothDeviceId deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __deviceId = default;
            IntPtr __retval = default;
            try
            {
                __deviceId = global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.CreateMarshaler2(deviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__deviceId), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattSession.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__deviceId);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x5C, 0xB9, 0x65, 0x2E, 0x9F, 0x53, 0xB7, 0x4D, 0x82, 0xA8, 0x73, 0xBD, 0xBB, 0xF7, 0x3E, 0xBF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2E65B95C-539F-4DB7-82A8-73BDBBF73EBF")]
    internal interface IGattSessionStatics : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatics
    {
    }
    internal static class IGattSessionStatusChangedEventArgsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSessionStatus*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2E, 0xB7, 0x5, 0x76, 0x7F, 0x83, 0x4C, 0x40, 0xAB, 0x34, 0x31, 0x63, 0xF3, 0x9D, 0xDF, 0x32 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7605B72E-837F-404C-AB34-3163F39DDF32")]
    internal interface IGattSessionStatusChangedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSessionStatusChangedEventArgs
    {
    }
    internal static class IGattSubscribedClientMethods
    {

        internal static unsafe ushort get_MaxNotificationSize(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession get_Session(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient, object>>> _MaxNotificationSizeChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient, object>>> MakeMaxNotificationSizeChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _MaxNotificationSizeChanged_, new(), null);
            return _MaxNotificationSizeChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient, object>>> _MaxNotificationSizeChanged => _MaxNotificationSizeChanged_ ?? MakeMaxNotificationSizeChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSubscribedClient, object>> Get_MaxNotificationSizeChanged2(IObjectReference _obj, object _thisObj)
        {
            return _MaxNotificationSizeChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattSubscribedClient__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[8],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[9],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x1, 0x90, 0x6E, 0x73, 0xA4, 0x15, 0xC2, 0x4E, 0x92, 0x48, 0xE3, 0xF2, 0xD, 0x46, 0x3B, 0xE9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("736E9001-15A4-4EC2-9248-E3F20D463BE9")]
    internal interface IGattSubscribedClient : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattSubscribedClient
    {
    }
    internal static class IGattValueChangedEventArgsMethods
    {

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_CharacteristicValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.DateTimeOffset get_Timestamp(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::ABI.System.DateTimeOffset __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::ABI.System.DateTimeOffset*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.System.DateTimeOffset.FromAbi(__retval);
            }
            finally
            {
                global::ABI.System.DateTimeOffset.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0xDB, 0x1B, 0xD2, 0xE3, 0x6, 0xD8, 0x4E, 0xA2, 0x63, 0xAC, 0xFA, 0xC8, 0xBA, 0x73, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D21BDB54-06E3-4ED8-A263-ACFAC8BA7313")]
    internal interface IGattValueChangedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattValueChangedEventArgs
    {
    }
    internal static class IGattWriteRequestMethods
    {


        internal static unsafe void Respond(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[12](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }

        internal static unsafe void RespondWithProtocolError(IObjectReference _obj, byte protocolError)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, int>**)ThisPtr)[13](ThisPtr, protocolError));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe uint get_Offset(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption get_Option(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteOption*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState get_State(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestState*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> _StateChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> MakeStateChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _StateChanged_, new(), null);
            return _StateChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>>> _StateChanged => _StateChanged_ ?? MakeStateChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattRequestStateChangedEventArgs>> Get_StateChanged2(IObjectReference _obj, object _thisObj)
        {
            return _StateChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteRequest__global__Windows_Devices_Bluetooth_GenericAttributeProfile_GattRequestStateChangedEventArgs_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[10],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[11],
                0);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xED, 0xA9, 0xB6, 0xAE, 0x2F, 0xDE, 0xC2, 0x4F, 0xA9, 0xA8, 0x94, 0xEA, 0x78, 0x44, 0xF1, 0x3D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AEB6A9ED-DE2F-4FC2-A9A8-94EA7844F13D")]
    internal interface IGattWriteRequest : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequest
    {
    }
    internal static class IGattWriteRequestedEventArgsMethods
    {


        internal static unsafe global::Windows.Foundation.Deferral GetDeferral(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Foundation.Deferral.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Foundation.Deferral.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest> GetRequestAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattWriteRequest.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattWriteRequest>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession get_Session(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattSession.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBE, 0x8B, 0xEC, 0x2D, 0x3A, 0xA7, 0x1A, 0x47, 0x94, 0xD5, 0x3, 0x7D, 0xEA, 0xDD, 0x8, 0x6 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2DEC8BBE-A73A-471A-94D5-037DEADD0806")]
    internal interface IGattWriteRequestedEventArgs : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteRequestedEventArgs
    {
    }
    internal static class IGattWriteResultMethods
    {

        internal static unsafe global::System.Nullable<byte> get_ProtocolError(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<byte>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<byte>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCommunicationStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB1, 0xDD, 0x91, 0x49, 0x2B, 0xCB, 0xF7, 0x44, 0x99, 0xFC, 0xD2, 0x9A, 0x28, 0x71, 0xDC, 0x9B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("4991DDB1-CB2B-44F7-99FC-D29A2871DC9B")]
    internal interface IGattWriteResult : global::Windows.Devices.Bluetooth.GenericAttributeProfile.IGattWriteResult
    {
    }
}
#pragma warning restore CA1416
