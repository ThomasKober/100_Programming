//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.3.0-prerelease.250720.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Windows.Devices.Bluetooth.Background
{
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothEventTriggeringMode>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public enum BluetoothEventTriggeringMode : int
    {
        Serial = unchecked((int)0),
        Batch = unchecked((int)0x1),
        KeepLatest = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails))]
    [global::ABI.Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetailsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEAdvertisementPublisherTriggerDetails))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothLEAdvertisementPublisherTriggerDetails : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEAdvertisementPublisherTriggerDetails>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2 => ___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2 ?? Make___objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2();



        public static BluetoothLEAdvertisementPublisherTriggerDetails FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEAdvertisementPublisherTriggerDetails>.FromAbi(thisPtr);
        }

        internal BluetoothLEAdvertisementPublisherTriggerDetails(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetailsMethods.IID);

        }


        public static bool operator ==(BluetoothLEAdvertisementPublisherTriggerDetails x, BluetoothLEAdvertisementPublisherTriggerDetails y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEAdvertisementPublisherTriggerDetails x, BluetoothLEAdvertisementPublisherTriggerDetails y) => !(x == y);
        public bool Equals(BluetoothLEAdvertisementPublisherTriggerDetails other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEAdvertisementPublisherTriggerDetails that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetailsMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.19041.0")]
        public global::System.Nullable<short> SelectedTransmitPowerLevelInDBm => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails2Methods.get_SelectedTransmitPowerLevelInDBm(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails2);

        public global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus Status => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetailsMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementPublisherTriggerDetails);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails))]
    [global::ABI.Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetailsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEAdvertisementWatcherTriggerDetails))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothLEAdvertisementWatcherTriggerDetails : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEAdvertisementWatcherTriggerDetails>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementWatcherTriggerDetails => _inner;


        public static BluetoothLEAdvertisementWatcherTriggerDetails FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEAdvertisementWatcherTriggerDetails>.FromAbi(thisPtr);
        }

        internal BluetoothLEAdvertisementWatcherTriggerDetails(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.IID);

        }


        public static bool operator ==(BluetoothLEAdvertisementWatcherTriggerDetails x, BluetoothLEAdvertisementWatcherTriggerDetails y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEAdvertisementWatcherTriggerDetails x, BluetoothLEAdvertisementWatcherTriggerDetails y) => !(x == y);
        public bool Equals(BluetoothLEAdvertisementWatcherTriggerDetails other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEAdvertisementWatcherTriggerDetails that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs> Advertisements => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.get_Advertisements(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementWatcherTriggerDetails);

        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.get_Error(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementWatcherTriggerDetails);

        public global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter SignalStrengthFilter => global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.get_SignalStrengthFilter(_objRef_global__Windows_Devices_Bluetooth_Background_IBluetoothLEAdvertisementWatcherTriggerDetails);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails))]
    [global::ABI.Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetailsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattCharacteristicNotificationTriggerDetails))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class GattCharacteristicNotificationTriggerDetails : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattCharacteristicNotificationTriggerDetails>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2 => ___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2 ?? Make___objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2();



        public static GattCharacteristicNotificationTriggerDetails FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattCharacteristicNotificationTriggerDetails>.FromAbi(thisPtr);
        }

        internal GattCharacteristicNotificationTriggerDetails(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetailsMethods.IID);

        }


        public static bool operator ==(GattCharacteristicNotificationTriggerDetails x, GattCharacteristicNotificationTriggerDetails y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattCharacteristicNotificationTriggerDetails x, GattCharacteristicNotificationTriggerDetails y) => !(x == y);
        public bool Equals(GattCharacteristicNotificationTriggerDetails other) => this == other;
        public override bool Equals(object obj) => obj is GattCharacteristicNotificationTriggerDetails that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic Characteristic => global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetailsMethods.get_Characteristic(_objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Devices.Bluetooth.BluetoothError Error => global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2Methods.get_Error(_objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public BluetoothEventTriggeringMode EventTriggeringMode => global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2Methods.get_EventTriggeringMode(_objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2);

        public global::Windows.Storage.Streams.IBuffer Value => global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetailsMethods.get_Value(_objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs> ValueChangedEvents => global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2Methods.get_ValueChangedEvents(_objRef_global__Windows_Devices_Bluetooth_Background_IGattCharacteristicNotificationTriggerDetails2);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderConnection))]
    [global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderConnectionRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProviderConnection))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProviderConnection : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProviderConnection>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnection => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.Background.GattServiceProviderConnection").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnectionStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnectionStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnectionStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnectionStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.Background.GattServiceProviderConnection", global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionStaticsMethods.IID);
                }
            }
        }

        public static global::System.Collections.Generic.IReadOnlyDictionary<string, GattServiceProviderConnection> AllServices => global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionStaticsMethods.get_AllServices(_objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnectionStatics);

        public static GattServiceProviderConnection FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProviderConnection>.FromAbi(thisPtr);
        }

        internal GattServiceProviderConnection(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.IID);

        }


        public static bool operator ==(GattServiceProviderConnection x, GattServiceProviderConnection y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProviderConnection x, GattServiceProviderConnection y) => !(x == y);
        public bool Equals(GattServiceProviderConnection other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProviderConnection that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Start() => global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.Start(_objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnection);

        public global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService Service => global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.get_Service(_objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnection);

        public string TriggerId => global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.get_TriggerId(_objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderConnection);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails))]
    [global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetailsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IGattServiceProviderTriggerDetails))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class GattServiceProviderTriggerDetails : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<GattServiceProviderTriggerDetails>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderTriggerDetails => _inner;


        public static GattServiceProviderTriggerDetails FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<GattServiceProviderTriggerDetails>.FromAbi(thisPtr);
        }

        internal GattServiceProviderTriggerDetails(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetailsMethods.IID);

        }


        public static bool operator ==(GattServiceProviderTriggerDetails x, GattServiceProviderTriggerDetails y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(GattServiceProviderTriggerDetails x, GattServiceProviderTriggerDetails y) => !(x == y);
        public bool Equals(GattServiceProviderTriggerDetails other) => this == other;
        public override bool Equals(object obj) => obj is GattServiceProviderTriggerDetails that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public GattServiceProviderConnection Connection => global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetailsMethods.get_Connection(_objRef_global__Windows_Devices_Bluetooth_Background_IGattServiceProviderTriggerDetails);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("610ECA86-3480-41C9-A918-7DDADF207E00")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothLEAdvertisementPublisherTriggerDetails
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("D4A3D025-C601-42D6-9829-4CCB3F5CD77F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 655360u)]
    internal interface IBluetoothLEAdvertisementPublisherTriggerDetails2
    {
        global::System.Nullable<short> SelectedTransmitPowerLevelInDBm { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A7DB5AD7-2257-4E69-9784-FEE645C1DCE0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetails))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothLEAdvertisementWatcherTriggerDetails
    {
        global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs> Advertisements { get; }
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter SignalStrengthFilter { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9BA03B18-0FEC-436A-93B1-F46C697532A2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IGattCharacteristicNotificationTriggerDetails
    {
        global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic Characteristic { get; }
        global::Windows.Storage.Streams.IBuffer Value { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("727A50DC-949D-454A-B192-983467E3D50F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattCharacteristicNotificationTriggerDetails2
    {
        global::Windows.Devices.Bluetooth.BluetoothError Error { get; }
        BluetoothEventTriggeringMode EventTriggeringMode { get; }
        global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs> ValueChangedEvents { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("7FA1B9B9-2F13-40B5-9582-8EB78E98EF13")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnection))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderConnection
    {
        void Start();
        global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService Service { get; }
        string TriggerId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("90D12BE0-EBC0-484F-AE0A-7EB8B6266BAC")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnection2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 1245184u)]
    internal interface IGattServiceProviderConnection2
    {
        void UpdateAdvertisingParameters(global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters parameters);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("3D509F4B-0B0E-4466-B8CD-6EBDDA1FA17D")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderConnectionStatics
    {
        global::System.Collections.Generic.IReadOnlyDictionary<string, GattServiceProviderConnection> AllServices { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AE8C0625-05FF-4AFB-B16A-DE95F3CF0158")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetails))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IGattServiceProviderTriggerDetails
    {
        GattServiceProviderConnection Connection { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F922734D-2E3C-4EFC-AB59-FC5CF96F97E3")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetails))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IRfcommConnectionTriggerDetails
    {
        bool Incoming { get; }
        global::Windows.Devices.Bluetooth.BluetoothDevice RemoteDevice { get; }
        global::Windows.Networking.Sockets.StreamSocket Socket { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("6D3E75A8-5429-4059-92E3-1E8B65528707")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IRfcommInboundConnectionInformation
    {
        global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId LocalServiceId { get; set; }
        global::Windows.Storage.Streams.IBuffer SdpRecord { get; set; }
        global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities ServiceCapabilities { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("B091227B-F434-4CB0-99B1-4AB8CEDAEDD7")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformation))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IRfcommOutboundConnectionInformation
    {
        global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId RemoteServiceId { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails))]
    [global::ABI.Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetailsRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRfcommConnectionTriggerDetails))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class RfcommConnectionTriggerDetails : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RfcommConnectionTriggerDetails>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IRfcommConnectionTriggerDetails => _inner;


        public static RfcommConnectionTriggerDetails FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RfcommConnectionTriggerDetails>.FromAbi(thisPtr);
        }

        internal RfcommConnectionTriggerDetails(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.IID);

        }


        public static bool operator ==(RfcommConnectionTriggerDetails x, RfcommConnectionTriggerDetails y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RfcommConnectionTriggerDetails x, RfcommConnectionTriggerDetails y) => !(x == y);
        public bool Equals(RfcommConnectionTriggerDetails other) => this == other;
        public override bool Equals(object obj) => obj is RfcommConnectionTriggerDetails that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool Incoming => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.get_Incoming(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommConnectionTriggerDetails);

        public global::Windows.Devices.Bluetooth.BluetoothDevice RemoteDevice => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.get_RemoteDevice(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommConnectionTriggerDetails);

        public global::Windows.Networking.Sockets.StreamSocket Socket => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.get_Socket(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommConnectionTriggerDetails);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation))]
    [global::ABI.Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRfcommInboundConnectionInformation))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class RfcommInboundConnectionInformation : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RfcommInboundConnectionInformation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation => _inner;


        public static RfcommInboundConnectionInformation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RfcommInboundConnectionInformation>.FromAbi(thisPtr);
        }

        internal RfcommInboundConnectionInformation(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.IID);

        }


        public static bool operator ==(RfcommInboundConnectionInformation x, RfcommInboundConnectionInformation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RfcommInboundConnectionInformation x, RfcommInboundConnectionInformation y) => !(x == y);
        public bool Equals(RfcommInboundConnectionInformation other) => this == other;
        public override bool Equals(object obj) => obj is RfcommInboundConnectionInformation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId LocalServiceId
        {
            get => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.get_LocalServiceId(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation);
            set => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.set_LocalServiceId(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation, value);
        }

        public global::Windows.Storage.Streams.IBuffer SdpRecord
        {
            get => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.get_SdpRecord(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation);
            set => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.set_SdpRecord(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation, value);
        }

        public global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities ServiceCapabilities
        {
            get => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.get_ServiceCapabilities(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation);
            set => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.set_ServiceCapabilities(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommInboundConnectionInformation, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation))]
    [global::ABI.Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformationRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IRfcommOutboundConnectionInformation))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class RfcommOutboundConnectionInformation : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<RfcommOutboundConnectionInformation>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_Background_IRfcommOutboundConnectionInformation => _inner;


        public static RfcommOutboundConnectionInformation FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<RfcommOutboundConnectionInformation>.FromAbi(thisPtr);
        }

        internal RfcommOutboundConnectionInformation(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformationMethods.IID);

        }


        public static bool operator ==(RfcommOutboundConnectionInformation x, RfcommOutboundConnectionInformation y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(RfcommOutboundConnectionInformation x, RfcommOutboundConnectionInformation y) => !(x == y);
        public bool Equals(RfcommOutboundConnectionInformation other) => this == other;
        public override bool Equals(object obj) => obj is RfcommOutboundConnectionInformation that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId RemoteServiceId
        {
            get => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformationMethods.get_RemoteServiceId(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommOutboundConnectionInformation);
            set => global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformationMethods.set_RemoteServiceId(_objRef_global__Windows_Devices_Bluetooth_Background_IRfcommOutboundConnectionInformation, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
}

#pragma warning disable CA1416
namespace ABI.Windows.Devices.Bluetooth.Background
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEAdvertisementPublisherTriggerDetails
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetailsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetailsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEAdvertisementPublisherTriggerDetailsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementPublisherTriggerDetails(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEAdvertisementWatcherTriggerDetails
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetailsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEAdvertisementWatcherTriggerDetailsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.BluetoothLEAdvertisementWatcherTriggerDetails(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattCharacteristicNotificationTriggerDetails
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetailsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetailsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattCharacteristicNotificationTriggerDetailsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.GattCharacteristicNotificationTriggerDetails(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProviderConnection
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderConnectionRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct GattServiceProviderTriggerDetails
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetailsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetailsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class GattServiceProviderTriggerDetailsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.GattServiceProviderTriggerDetails(inspectable.ObjRef);
    }
    internal static class IBluetoothLEAdvertisementPublisherTriggerDetailsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementPublisherStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x86, 0xCA, 0xE, 0x61, 0x80, 0x34, 0xC9, 0x41, 0xA9, 0x18, 0x7D, 0xDA, 0xDF, 0x20, 0x7E, 0x0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("610ECA86-3480-41C9-A918-7DDADF207E00")]
    internal interface IBluetoothLEAdvertisementPublisherTriggerDetails : global::Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails
    {
    }
    internal static class IBluetoothLEAdvertisementPublisherTriggerDetails2Methods
    {

        internal static unsafe global::System.Nullable<short> get_SelectedTransmitPowerLevelInDBm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<short>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<short>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0xD0, 0xA3, 0xD4, 0x1, 0xC6, 0xD6, 0x42, 0x98, 0x29, 0x4C, 0xCB, 0x3F, 0x5C, 0xD7, 0x7F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D4A3D025-C601-42D6-9829-4CCB3F5CD77F")]
    internal interface IBluetoothLEAdvertisementPublisherTriggerDetails2 : global::Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementPublisherTriggerDetails2
    {
    }
    internal static class IBluetoothLEAdvertisementWatcherTriggerDetailsMethods
    {

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs> get_Advertisements(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_Advertisement_BluetoothLEAdvertisementReceivedEventArgs.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Advertisement.BluetoothLEAdvertisementReceivedEventArgs>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter get_SignalStrengthFilter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD7, 0x5A, 0xDB, 0xA7, 0x57, 0x22, 0x69, 0x4E, 0x97, 0x84, 0xFE, 0xE6, 0x45, 0xC1, 0xDC, 0xE0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A7DB5AD7-2257-4E69-9784-FEE645C1DCE0")]
    internal interface IBluetoothLEAdvertisementWatcherTriggerDetails : global::Windows.Devices.Bluetooth.Background.IBluetoothLEAdvertisementWatcherTriggerDetails
    {
    }
    internal static class IGattCharacteristicNotificationTriggerDetailsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic get_Characteristic(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattCharacteristic.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_Value(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x18, 0x3B, 0xA0, 0x9B, 0xEC, 0xF, 0x6A, 0x43, 0x93, 0xB1, 0xF4, 0x6C, 0x69, 0x75, 0x32, 0xA2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9BA03B18-0FEC-436A-93B1-F46C697532A2")]
    internal interface IGattCharacteristicNotificationTriggerDetails : global::Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails
    {
    }
    internal static class IGattCharacteristicNotificationTriggerDetails2Methods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothError get_Error(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothError __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothError*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.Background.BluetoothEventTriggeringMode get_EventTriggeringMode(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.Background.BluetoothEventTriggeringMode __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.Background.BluetoothEventTriggeringMode*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs> get_ValueChangedEvents(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattValueChangedEventArgs.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattValueChangedEventArgs>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0x50, 0x7A, 0x72, 0x9D, 0x94, 0x4A, 0x45, 0xB1, 0x92, 0x98, 0x34, 0x67, 0xE3, 0xD5, 0xF };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("727A50DC-949D-454A-B192-983467E3D50F")]
    internal interface IGattCharacteristicNotificationTriggerDetails2 : global::Windows.Devices.Bluetooth.Background.IGattCharacteristicNotificationTriggerDetails2
    {
    }
    internal static class IGattServiceProviderConnectionMethods
    {


        internal static unsafe void Start(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, int>**)ThisPtr)[8](ThisPtr));
            global::System.GC.KeepAlive(_obj);
        }
        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService get_Service(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattLocalService.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_TriggerId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB9, 0xB9, 0xA1, 0x7F, 0x13, 0x2F, 0xB5, 0x40, 0x95, 0x82, 0x8E, 0xB7, 0x8E, 0x98, 0xEF, 0x13 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7FA1B9B9-2F13-40B5-9582-8EB78E98EF13")]
    internal interface IGattServiceProviderConnection : global::Windows.Devices.Bluetooth.Background.IGattServiceProviderConnection
    {
    }
    internal static class IGattServiceProviderConnection2Methods
    {


        internal static unsafe void UpdateAdvertisingParameters(IObjectReference _obj, global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters parameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __parameters = default;
            try
            {
                __parameters = global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattServiceProviderAdvertisingParameters.CreateMarshaler2(parameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[6](ThisPtr, MarshalInspectable<object>.GetAbi(__parameters)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__parameters);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE0, 0x2B, 0xD1, 0x90, 0xC0, 0xEB, 0x4F, 0x48, 0xAE, 0xA, 0x7E, 0xB8, 0xB6, 0x26, 0x6B, 0xAC };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("90D12BE0-EBC0-484F-AE0A-7EB8B6266BAC")]
    internal interface IGattServiceProviderConnection2 : global::Windows.Devices.Bluetooth.Background.IGattServiceProviderConnection2
    {
    }
    internal static class IGattServiceProviderConnectionStaticsMethods
    {

        internal static unsafe global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection> get_AllServices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IMapView_2_String__Windows_Devices_Bluetooth_Background_GattServiceProviderConnection.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection>>.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4B, 0x9F, 0x50, 0x3D, 0xE, 0xB, 0x66, 0x44, 0xB8, 0xCD, 0x6E, 0xBD, 0xDA, 0x1F, 0xA1, 0x7D };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("3D509F4B-0B0E-4466-B8CD-6EBDDA1FA17D")]
    internal interface IGattServiceProviderConnectionStatics : global::Windows.Devices.Bluetooth.Background.IGattServiceProviderConnectionStatics
    {
    }
    internal static class IGattServiceProviderTriggerDetailsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.Background.GattServiceProviderConnection get_Connection(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderConnection.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.Background.GattServiceProviderConnection.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x25, 0x6, 0x8C, 0xAE, 0xFF, 0x5, 0xFB, 0x4A, 0xB1, 0x6A, 0xDE, 0x95, 0xF3, 0xCF, 0x1, 0x58 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AE8C0625-05FF-4AFB-B16A-DE95F3CF0158")]
    internal interface IGattServiceProviderTriggerDetails : global::Windows.Devices.Bluetooth.Background.IGattServiceProviderTriggerDetails
    {
    }
    internal static class IRfcommConnectionTriggerDetailsMethods
    {

        internal static unsafe bool get_Incoming(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothDevice get_RemoteDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothDevice.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Networking.Sockets.StreamSocket get_Socket(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Networking.Sockets.StreamSocket.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Networking.Sockets.StreamSocket.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4D, 0x73, 0x22, 0xF9, 0x3C, 0x2E, 0xFC, 0x4E, 0xAB, 0x59, 0xFC, 0x5C, 0xF9, 0x6F, 0x97, 0xE3 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F922734D-2E3C-4EFC-AB59-FC5CF96F97E3")]
    internal interface IRfcommConnectionTriggerDetails : global::Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetails
    {
    }
    internal static class IRfcommInboundConnectionInformationMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId get_LocalServiceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_LocalServiceId(IObjectReference _obj, global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Storage.Streams.IBuffer get_SdpRecord(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::Windows.Storage.Streams.IBuffer>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Storage.Streams.IBuffer>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_SdpRecord(IObjectReference _obj, global::Windows.Storage.Streams.IBuffer value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::Windows.Storage.Streams.IBuffer>.CreateMarshaler2(value, global::ABI.Windows.Storage.Streams.IBufferMethods.IID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities get_ServiceCapabilities(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }
        internal static unsafe void set_ServiceCapabilities(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities value)
        {
            var ThisPtr = _obj.ThisPtr;

            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities, int>**)ThisPtr)[11](ThisPtr, value));
            global::System.GC.KeepAlive(_obj);
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xA8, 0x75, 0x3E, 0x6D, 0x29, 0x54, 0x59, 0x40, 0x92, 0xE3, 0x1E, 0x8B, 0x65, 0x52, 0x87, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6D3E75A8-5429-4059-92E3-1E8B65528707")]
    internal interface IRfcommInboundConnectionInformation : global::Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformation
    {
    }
    internal static class IRfcommOutboundConnectionInformationMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId get_RemoteServiceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_RemoteServiceId(IObjectReference _obj, global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.CreateMarshaler2(value);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0x22, 0x91, 0xB0, 0x34, 0xF4, 0xB0, 0x4C, 0x99, 0xB1, 0x4A, 0xB8, 0xCE, 0xDA, 0xED, 0xD7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B091227B-F434-4CB0-99B1-4AB8CEDAEDD7")]
    internal interface IRfcommOutboundConnectionInformation : global::Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformation
    {
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RfcommConnectionTriggerDetails
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommConnectionTriggerDetailsMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RfcommConnectionTriggerDetailsRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.RfcommConnectionTriggerDetails(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RfcommInboundConnectionInformation
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommInboundConnectionInformationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RfcommInboundConnectionInformationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.RfcommInboundConnectionInformation(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct RfcommOutboundConnectionInformation
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformationMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.Background.IRfcommOutboundConnectionInformationMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class RfcommOutboundConnectionInformationRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.Background.RfcommOutboundConnectionInformation(inspectable.ObjRef);
    }
}
#pragma warning restore CA1416
