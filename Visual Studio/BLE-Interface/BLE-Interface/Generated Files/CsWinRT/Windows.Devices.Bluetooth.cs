//------------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by cswinrt.exe version 2.3.0-prerelease.250720.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using WinRT;
using WinRT.Interop;


#pragma warning disable 0169 // warning CS0169: The field '...' is never used
#pragma warning disable 0649 // warning CS0169: Field '...' is never assigned to
#pragma warning disable CA2207, CA1063, CA1033, CA1001, CA2213

namespace Windows.Devices.Bluetooth
{
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothAdapter))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothAdapterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothAdapter))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class BluetoothAdapter : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothAdapter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter => _inner;
        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter3Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothAdapter").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothAdapter", global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterStaticsMethods.IID);
                }
            }
        }

        public static string GetDeviceSelector() => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterStaticsMethods.GetDeviceSelector(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics);

        public static global::Windows.Foundation.IAsyncOperation<BluetoothAdapter> FromIdAsync(string deviceId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterStaticsMethods.FromIdAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics, deviceId);

        public static global::Windows.Foundation.IAsyncOperation<BluetoothAdapter> GetDefaultAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterStaticsMethods.GetDefaultAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapterStatics);

        public static BluetoothAdapter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothAdapter>.FromAbi(thisPtr);
        }

        internal BluetoothAdapter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.IID);

        }


        public static bool operator ==(BluetoothAdapter x, BluetoothAdapter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothAdapter x, BluetoothAdapter y) => !(x == y);
        public bool Equals(BluetoothAdapter other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothAdapter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Radios.Radio> GetRadioAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.GetRadioAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.17134.0")]
        public bool AreClassicSecureConnectionsSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter2Methods.get_AreClassicSecureConnectionsSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.17134.0")]
        public bool AreLowEnergySecureConnectionsSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter2Methods.get_AreLowEnergySecureConnectionsSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter2);

        public ulong BluetoothAddress => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_BluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        public string DeviceId => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_DeviceId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        public bool IsAdvertisementOffloadSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_IsAdvertisementOffloadSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        public bool IsCentralRoleSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_IsCentralRoleSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        public bool IsClassicSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_IsClassicSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.19041.0")]
        public bool IsExtendedAdvertisingSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter3Methods.get_IsExtendedAdvertisingSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3);

        public bool IsLowEnergySupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_IsLowEnergySupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        public bool IsPeripheralRoleSupported => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.get_IsPeripheralRoleSupported(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.19041.0")]
        public uint MaxAdvertisementDataLength => global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter3Methods.get_MaxAdvertisementDataLength(_objRef_global__Windows_Devices_Bluetooth_IBluetoothAdapter3);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothAddressType>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    public enum BluetoothAddressType : int
    {
        Public = unchecked((int)0),
        Random = unchecked((int)0x1),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        Unspecified = unchecked((int)0x2),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothCacheMode>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothCacheMode : int
    {
        Cached = unchecked((int)0),
        Uncached = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDeviceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothClassOfDevice))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothClassOfDevice : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothClassOfDevice>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDevice => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothClassOfDevice").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothClassOfDevice", global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceStaticsMethods.IID);
                }
            }
        }

        public static BluetoothClassOfDevice FromRawValue(uint rawValue) => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceStaticsMethods.FromRawValue(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics, rawValue);

        public static BluetoothClassOfDevice FromParts(BluetoothMajorClass majorClass, BluetoothMinorClass minorClass, BluetoothServiceCapabilities serviceCapabilities) => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceStaticsMethods.FromParts(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDeviceStatics, majorClass, minorClass, serviceCapabilities);

        public static BluetoothClassOfDevice FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothClassOfDevice>.FromAbi(thisPtr);
        }

        internal BluetoothClassOfDevice(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.IID);

        }


        public static bool operator ==(BluetoothClassOfDevice x, BluetoothClassOfDevice y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothClassOfDevice x, BluetoothClassOfDevice y) => !(x == y);
        public bool Equals(BluetoothClassOfDevice other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothClassOfDevice that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public BluetoothMajorClass MajorClass => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.get_MajorClass(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDevice);

        public BluetoothMinorClass MinorClass => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.get_MinorClass(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDevice);

        public uint RawValue => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.get_RawValue(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDevice);

        public BluetoothServiceCapabilities ServiceCapabilities => global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.get_ServiceCapabilities(_objRef_global__Windows_Devices_Bluetooth_IBluetoothClassOfDevice);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothConnectionStatus>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothConnectionStatus : int
    {
        Disconnected = unchecked((int)0),
        Connected = unchecked((int)0x1),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothDevice))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothDevice))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothDevice : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothDevice>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice4Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice5Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothDevice").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothDevice", global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromIdAsync(string deviceId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStaticsMethods.FromIdAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics, deviceId);

        public static global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromHostNameAsync(global::Windows.Networking.HostName hostName) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStaticsMethods.FromHostNameAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics, hostName);

        public static global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromBluetoothAddressAsync(ulong address) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStaticsMethods.FromBluetoothAddressAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics, address);

        public static string GetDeviceSelector() => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStaticsMethods.GetDeviceSelector(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics);

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothDevice", global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.IID);
                }
            }
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromPairingState(bool pairingState) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.GetDeviceSelectorFromPairingState(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2, pairingState);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromConnectionStatus(BluetoothConnectionStatus connectionStatus) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.GetDeviceSelectorFromConnectionStatus(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2, connectionStatus);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromDeviceName(string deviceName) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.GetDeviceSelectorFromDeviceName(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2, deviceName);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.GetDeviceSelectorFromBluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2, bluetoothAddress);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromClassOfDevice(BluetoothClassOfDevice classOfDevice) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2Methods.GetDeviceSelectorFromClassOfDevice(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceStatics2, classOfDevice);

        public static BluetoothDevice FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothDevice>.FromAbi(thisPtr);
        }

        internal BluetoothDevice(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.IID);

        }


        public static bool operator ==(BluetoothDevice x, BluetoothDevice y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothDevice x, BluetoothDevice y) => !(x == y);
        public bool Equals(BluetoothDevice other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothDevice that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> ConnectionStatusChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_ConnectionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_ConnectionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> NameChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_NameChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_NameChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> SdpRecordsChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_SdpRecordsChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.Get_SdpRecordsChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.RequestAccessAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.GetRfcommServicesAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync(BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.GetRfcommServicesAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.GetRfcommServicesForIdAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3, serviceId);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId, BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.GetRfcommServicesForIdAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3, serviceId, cacheMode);

        public ulong BluetoothAddress => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_BluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.16299.0")]
        public BluetoothDeviceId BluetoothDeviceId => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice4Methods.get_BluetoothDeviceId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice4);

        public BluetoothClassOfDevice ClassOfDevice => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_ClassOfDevice(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        public BluetoothConnectionStatus ConnectionStatus => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_ConnectionStatus(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        public global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3Methods.get_DeviceAccessInformation(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice3);

        public string DeviceId => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_DeviceId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public global::Windows.Devices.Enumeration.DeviceInformation DeviceInformation => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice2Methods.get_DeviceInformation(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice2);

        public global::Windows.Networking.HostName HostName => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_HostName(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        public string Name => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_Name(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        public global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService> RfcommServices => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_RfcommServices(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        public global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.Streams.IBuffer> SdpRecords => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.get_SdpRecords(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.17134.0")]
        public bool WasSecureConnectionUsedForPairing => global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice5Methods.get_WasSecureConnectionUsedForPairing(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDevice5);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceIdRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothDeviceId))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public sealed class BluetoothDeviceId : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothDeviceId>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceId => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothDeviceId").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceIdStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceIdStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceIdStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceIdStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothDeviceId", global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdStaticsMethods.IID);
                }
            }
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.16299.0")]
        public static BluetoothDeviceId FromId(string deviceId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdStaticsMethods.FromId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceIdStatics, deviceId);

        public static BluetoothDeviceId FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothDeviceId>.FromAbi(thisPtr);
        }

        internal BluetoothDeviceId(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.IID);

        }


        public static bool operator ==(BluetoothDeviceId x, BluetoothDeviceId y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothDeviceId x, BluetoothDeviceId y) => !(x == y);
        public bool Equals(BluetoothDeviceId other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothDeviceId that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public string Id => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.get_Id(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceId);

        public bool IsClassicDevice => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.get_IsClassicDevice(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceId);

        public bool IsLowEnergyDevice => global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.get_IsLowEnergyDevice(_objRef_global__Windows_Devices_Bluetooth_IBluetoothDeviceId);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothError>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothError : int
    {
        Success = unchecked((int)0),
        RadioNotAvailable = unchecked((int)0x1),
        ResourceInUse = unchecked((int)0x2),
        DeviceNotConnected = unchecked((int)0x3),
        OtherError = unchecked((int)0x4),
        DisabledByPolicy = unchecked((int)0x5),
        NotSupported = unchecked((int)0x6),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        DisabledByUser = unchecked((int)0x7),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.14393.0")]
        ConsentRequired = unchecked((int)0x8),
        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        TransportNotSupported = unchecked((int)0x9),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearanceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEAppearance))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    public sealed class BluetoothLEAppearance : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEAppearance>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearance => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearance").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearance", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceStaticsMethods.IID);
                }
            }
        }

        public static BluetoothLEAppearance FromRawValue(ushort rawValue) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceStaticsMethods.FromRawValue(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics, rawValue);

        public static BluetoothLEAppearance FromParts(ushort appearanceCategory, ushort appearanceSubCategory) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceStaticsMethods.FromParts(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceStatics, appearanceCategory, appearanceSubCategory);

        public static BluetoothLEAppearance FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEAppearance>.FromAbi(thisPtr);
        }

        internal BluetoothLEAppearance(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.IID);

        }


        public static bool operator ==(BluetoothLEAppearance x, BluetoothLEAppearance y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEAppearance x, BluetoothLEAppearance y) => !(x == y);
        public bool Equals(BluetoothLEAppearance other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEAppearance that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ushort Category => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.get_Category(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearance);

        public ushort RawValue => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.get_RawValue(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearance);

        public ushort SubCategory => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.get_SubCategory(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearance);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    public static class BluetoothLEAppearanceCategories
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearanceCategories").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearanceCategories", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.IID);
                }
            }
        }

        public static ushort BarcodeScanner => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_BarcodeScanner(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort BloodPressure => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_BloodPressure(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Clock => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Clock(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Computer => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Computer(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Cycling => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Cycling(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Display => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Display(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort EyeGlasses => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_EyeGlasses(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort GlucoseMeter => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_GlucoseMeter(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort HeartRate => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_HeartRate(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort HumanInterfaceDevice => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_HumanInterfaceDevice(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Keyring => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Keyring(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort MediaPlayer => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_MediaPlayer(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort OutdoorSportActivity => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_OutdoorSportActivity(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Phone => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Phone(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort PulseOximeter => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_PulseOximeter(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort RemoteControl => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_RemoteControl(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort RunningWalking => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_RunningWalking(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Tag => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Tag(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Thermometer => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Thermometer(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Uncategorized => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Uncategorized(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort Watch => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_Watch(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);

        public static ushort WeightScale => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStaticsMethods.get_WeightScale(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceCategoriesStatics);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    public static class BluetoothLEAppearanceSubcategories
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearanceSubcategories").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEAppearanceSubcategories", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.IID);
                }
            }
        }

        public static ushort BarcodeScanner => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_BarcodeScanner(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort BloodPressureArm => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_BloodPressureArm(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort BloodPressureWrist => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_BloodPressureWrist(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CardReader => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CardReader(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CyclingCadenceSensor => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CyclingCadenceSensor(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CyclingComputer => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CyclingComputer(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CyclingPowerSensor => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CyclingPowerSensor(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CyclingSpeedCadenceSensor => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CyclingSpeedCadenceSensor(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort CyclingSpeedSensor => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_CyclingSpeedSensor(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort DigitalPen => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_DigitalPen(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort DigitizerTablet => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_DigitizerTablet(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort Gamepad => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_Gamepad(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort Generic => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_Generic(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort HeartRateBelt => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_HeartRateBelt(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort Joystick => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_Joystick(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort Keyboard => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_Keyboard(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort LocationDisplay => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_LocationDisplay(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort LocationNavigationDisplay => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_LocationNavigationDisplay(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort LocationNavigationPod => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_LocationNavigationPod(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort LocationPod => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_LocationPod(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort Mouse => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_Mouse(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort OximeterFingertip => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_OximeterFingertip(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort OximeterWristWorn => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_OximeterWristWorn(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort RunningWalkingInShoe => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_RunningWalkingInShoe(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort RunningWalkingOnHip => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_RunningWalkingOnHip(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort RunningWalkingOnShoe => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_RunningWalkingOnShoe(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort SportsWatch => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_SportsWatch(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);

        public static ushort ThermometerEar => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStaticsMethods.get_ThermometerEar(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEAppearanceSubcategoriesStatics);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionParameters))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionParametersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEConnectionParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public sealed class BluetoothLEConnectionParameters : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEConnectionParameters>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionParameters => _inner;


        public static BluetoothLEConnectionParameters FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEConnectionParameters>.FromAbi(thisPtr);
        }

        internal BluetoothLEConnectionParameters(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.IID);

        }


        public static bool operator ==(BluetoothLEConnectionParameters x, BluetoothLEConnectionParameters y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEConnectionParameters x, BluetoothLEConnectionParameters y) => !(x == y);
        public bool Equals(BluetoothLEConnectionParameters other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEConnectionParameters that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ushort ConnectionInterval => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.get_ConnectionInterval(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionParameters);

        public ushort ConnectionLatency => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.get_ConnectionLatency(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionParameters);

        public ushort LinkTimeout => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.get_LinkTimeout(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionParameters);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhy))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEConnectionPhy))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public sealed class BluetoothLEConnectionPhy : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEConnectionPhy>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhy => _inner;


        public static BluetoothLEConnectionPhy FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEConnectionPhy>.FromAbi(thisPtr);
        }

        internal BluetoothLEConnectionPhy(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyMethods.IID);

        }


        public static bool operator ==(BluetoothLEConnectionPhy x, BluetoothLEConnectionPhy y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEConnectionPhy x, BluetoothLEConnectionPhy y) => !(x == y);
        public bool Equals(BluetoothLEConnectionPhy other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEConnectionPhy that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public BluetoothLEConnectionPhyInfo ReceiveInfo => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyMethods.get_ReceiveInfo(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhy);

        public BluetoothLEConnectionPhyInfo TransmitInfo => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyMethods.get_TransmitInfo(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhy);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfoRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEConnectionPhyInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public sealed class BluetoothLEConnectionPhyInfo : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEConnectionPhyInfo>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhyInfo => _inner;


        public static BluetoothLEConnectionPhyInfo FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEConnectionPhyInfo>.FromAbi(thisPtr);
        }

        internal BluetoothLEConnectionPhyInfo(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.IID);

        }


        public static bool operator ==(BluetoothLEConnectionPhyInfo x, BluetoothLEConnectionPhyInfo y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEConnectionPhyInfo x, BluetoothLEConnectionPhyInfo y) => !(x == y);
        public bool Equals(BluetoothLEConnectionPhyInfo other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEConnectionPhyInfo that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public bool IsCodedPhy => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.get_IsCodedPhy(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhyInfo);

        public bool IsUncoded1MPhy => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.get_IsUncoded1MPhy(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhyInfo);

        public bool IsUncoded2MPhy => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.get_IsUncoded2MPhy(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEConnectionPhyInfo);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEDevice))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEDeviceRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEDevice))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothLEDevice : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEDevice>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice2Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice4Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4();

        private volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5;
        private IObjectReference Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice5Methods.IID), null);
            return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5;
        }
        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5 => ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5 ?? Make___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5();



        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEDevice").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEDevice", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStaticsMethods.IID);
                }
            }
        }

        public static global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromIdAsync(string deviceId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStaticsMethods.FromIdAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics, deviceId);

        public static global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromBluetoothAddressAsync(ulong bluetoothAddress) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStaticsMethods.FromBluetoothAddressAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics, bluetoothAddress);

        public static string GetDeviceSelector() => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStaticsMethods.GetDeviceSelector(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics);

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2 = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEDevice", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.IID);
                }
            }
        }

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromPairingState(bool pairingState) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromPairingState(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, pairingState);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromConnectionStatus(BluetoothConnectionStatus connectionStatus) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromConnectionStatus(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, connectionStatus);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromDeviceName(string deviceName) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromDeviceName(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, deviceName);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromBluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, bluetoothAddress);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress, BluetoothAddressType bluetoothAddressType) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromBluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, bluetoothAddress, bluetoothAddressType);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static string GetDeviceSelectorFromAppearance(BluetoothLEAppearance appearance) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.GetDeviceSelectorFromAppearance(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, appearance);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public static global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromBluetoothAddressAsync(ulong bluetoothAddress, BluetoothAddressType bluetoothAddressType) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2Methods.FromBluetoothAddressAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDeviceStatics2, bluetoothAddress, bluetoothAddressType);

        public static BluetoothLEDevice FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEDevice>.FromAbi(thisPtr);
        }

        internal BluetoothLEDevice(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.IID);

        }


        public static bool operator ==(BluetoothLEDevice x, BluetoothLEDevice y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEDevice x, BluetoothLEDevice y) => !(x == y);
        public bool Equals(BluetoothLEDevice other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEDevice that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService GetGattService(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.GetGattService(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, serviceUuid);

        public event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> ConnectionStatusChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_ConnectionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_ConnectionStatusChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> GattServicesChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_GattServicesChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_GattServicesChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> NameChanged
        {
            add => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_NameChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Subscribe(value);
            remove => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.Get_NameChanged2(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice, (IWinRTObject)this).Unsubscribe(value);
        }

        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.RequestAccessAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync() => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.GetGattServicesAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync(BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.GetGattServicesAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(Guid serviceUuid) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.GetGattServicesForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3, serviceUuid);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(Guid serviceUuid, BluetoothCacheMode cacheMode) => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.GetGattServicesForUuidAsync(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3, serviceUuid, cacheMode);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public BluetoothLEAppearance Appearance => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice2Methods.get_Appearance(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2);

        public ulong BluetoothAddress => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.get_BluetoothAddress(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public BluetoothAddressType BluetoothAddressType => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice2Methods.get_BluetoothAddressType(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.16299.0")]
        public BluetoothDeviceId BluetoothDeviceId => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice4Methods.get_BluetoothDeviceId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice4);

        public BluetoothConnectionStatus ConnectionStatus => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.get_ConnectionStatus(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
        public global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3Methods.get_DeviceAccessInformation(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice3);

        public string DeviceId => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.get_DeviceId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10586.0")]
        public global::Windows.Devices.Enumeration.DeviceInformation DeviceInformation => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice2Methods.get_DeviceInformation(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice2);

        public global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> GattServices => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.get_GattServices(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice);

        public string Name => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.get_Name(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice);

        [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.17134.0")]
        public bool WasSecureConnectionUsedForPairing => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice5Methods.get_WasSecureConnectionUsedForPairing(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEDevice5);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEPreferredConnectionParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public sealed class BluetoothLEPreferredConnectionParameters : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEPreferredConnectionParameters>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParameters => _inner;


        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters", global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStaticsMethods.IID);
                }
            }
        }

        public static BluetoothLEPreferredConnectionParameters Balanced => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStaticsMethods.get_Balanced(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics);

        public static BluetoothLEPreferredConnectionParameters PowerOptimized => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStaticsMethods.get_PowerOptimized(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics);

        public static BluetoothLEPreferredConnectionParameters ThroughputOptimized => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStaticsMethods.get_ThroughputOptimized(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersStatics);

        public static BluetoothLEPreferredConnectionParameters FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEPreferredConnectionParameters>.FromAbi(thisPtr);
        }

        internal BluetoothLEPreferredConnectionParameters(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.IID);

        }


        public static bool operator ==(BluetoothLEPreferredConnectionParameters x, BluetoothLEPreferredConnectionParameters y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEPreferredConnectionParameters x, BluetoothLEPreferredConnectionParameters y) => !(x == y);
        public bool Equals(BluetoothLEPreferredConnectionParameters other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEPreferredConnectionParameters that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public ushort ConnectionLatency => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.get_ConnectionLatency(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParameters);

        public ushort LinkTimeout => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.get_LinkTimeout(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParameters);

        public ushort MaxConnectionInterval => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.get_MaxConnectionInterval(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParameters);

        public ushort MinConnectionInterval => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.get_MinConnectionInterval(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParameters);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequestRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothLEPreferredConnectionParametersRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public sealed class BluetoothLEPreferredConnectionParametersRequest : global::System.IDisposable, global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothLEPreferredConnectionParametersRequest>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersRequest => _inner;
        private volatile IObjectReference ___objRef_global__System_IDisposable;
        private IObjectReference Make___objRef_global__System_IDisposable()
        {
            global::System.Threading.Interlocked.CompareExchange(ref ___objRef_global__System_IDisposable, ((IWinRTObject)this).NativeObject.As<IUnknownVftbl>(global::ABI.System.IDisposableMethods.IID), null);
            return ___objRef_global__System_IDisposable;
        }
        private IObjectReference _objRef_global__System_IDisposable => ___objRef_global__System_IDisposable ?? Make___objRef_global__System_IDisposable();



        public static BluetoothLEPreferredConnectionParametersRequest FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothLEPreferredConnectionParametersRequest>.FromAbi(thisPtr);
        }

        internal BluetoothLEPreferredConnectionParametersRequest(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequestMethods.IID);

        }


        public static bool operator ==(BluetoothLEPreferredConnectionParametersRequest x, BluetoothLEPreferredConnectionParametersRequest y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothLEPreferredConnectionParametersRequest x, BluetoothLEPreferredConnectionParametersRequest y) => !(x == y);
        public bool Equals(BluetoothLEPreferredConnectionParametersRequest other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothLEPreferredConnectionParametersRequest that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public void Dispose() => global::ABI.System.IDisposableMethods.Dispose(_objRef_global__System_IDisposable);

        public BluetoothLEPreferredConnectionParametersRequestStatus Status => global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequestMethods.get_Status(_objRef_global__Windows_Devices_Bluetooth_IBluetoothLEPreferredConnectionParametersRequest);

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothLEPreferredConnectionParametersRequestStatus>))][global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    public enum BluetoothLEPreferredConnectionParametersRequestStatus : int
    {
        Unspecified = unchecked((int)0),
        Success = unchecked((int)0x1),
        DeviceNotAvailable = unchecked((int)0x2),
        AccessDenied = unchecked((int)0x3),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothMajorClass>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothMajorClass : int
    {
        Miscellaneous = unchecked((int)0),
        Computer = unchecked((int)0x1),
        Phone = unchecked((int)0x2),
        NetworkAccessPoint = unchecked((int)0x3),
        AudioVideo = unchecked((int)0x4),
        Peripheral = unchecked((int)0x5),
        Imaging = unchecked((int)0x6),
        Wearable = unchecked((int)0x7),
        Toy = unchecked((int)0x8),
        Health = unchecked((int)0x9),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothMinorClass>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothMinorClass : int
    {
        Uncategorized = unchecked((int)0),
        ComputerDesktop = unchecked((int)0x1),
        ComputerServer = unchecked((int)0x2),
        ComputerLaptop = unchecked((int)0x3),
        ComputerHandheld = unchecked((int)0x4),
        ComputerPalmSize = unchecked((int)0x5),
        ComputerWearable = unchecked((int)0x6),
        ComputerTablet = unchecked((int)0x7),
        PhoneCellular = unchecked((int)0x1),
        PhoneCordless = unchecked((int)0x2),
        PhoneSmartPhone = unchecked((int)0x3),
        PhoneWired = unchecked((int)0x4),
        PhoneIsdn = unchecked((int)0x5),
        NetworkFullyAvailable = unchecked((int)0),
        NetworkUsed01To17Percent = unchecked((int)0x8),
        NetworkUsed17To33Percent = unchecked((int)0x10),
        NetworkUsed33To50Percent = unchecked((int)0x18),
        NetworkUsed50To67Percent = unchecked((int)0x20),
        NetworkUsed67To83Percent = unchecked((int)0x28),
        NetworkUsed83To99Percent = unchecked((int)0x30),
        NetworkNoServiceAvailable = unchecked((int)0x38),
        AudioVideoWearableHeadset = unchecked((int)0x1),
        AudioVideoHandsFree = unchecked((int)0x2),
        AudioVideoMicrophone = unchecked((int)0x4),
        AudioVideoLoudspeaker = unchecked((int)0x5),
        AudioVideoHeadphones = unchecked((int)0x6),
        AudioVideoPortableAudio = unchecked((int)0x7),
        AudioVideoCarAudio = unchecked((int)0x8),
        AudioVideoSetTopBox = unchecked((int)0x9),
        AudioVideoHifiAudioDevice = unchecked((int)0xa),
        AudioVideoVcr = unchecked((int)0xb),
        AudioVideoVideoCamera = unchecked((int)0xc),
        AudioVideoCamcorder = unchecked((int)0xd),
        AudioVideoVideoMonitor = unchecked((int)0xe),
        AudioVideoVideoDisplayAndLoudspeaker = unchecked((int)0xf),
        AudioVideoVideoConferencing = unchecked((int)0x10),
        AudioVideoGamingOrToy = unchecked((int)0x12),
        PeripheralJoystick = unchecked((int)0x1),
        PeripheralGamepad = unchecked((int)0x2),
        PeripheralRemoteControl = unchecked((int)0x3),
        PeripheralSensing = unchecked((int)0x4),
        PeripheralDigitizerTablet = unchecked((int)0x5),
        PeripheralCardReader = unchecked((int)0x6),
        PeripheralDigitalPen = unchecked((int)0x7),
        PeripheralHandheldScanner = unchecked((int)0x8),
        PeripheralHandheldGesture = unchecked((int)0x9),
        WearableWristwatch = unchecked((int)0x1),
        WearablePager = unchecked((int)0x2),
        WearableJacket = unchecked((int)0x3),
        WearableHelmet = unchecked((int)0x4),
        WearableGlasses = unchecked((int)0x5),
        ToyRobot = unchecked((int)0x1),
        ToyVehicle = unchecked((int)0x2),
        ToyDoll = unchecked((int)0x3),
        ToyController = unchecked((int)0x4),
        ToyGame = unchecked((int)0x5),
        HealthBloodPressureMonitor = unchecked((int)0x1),
        HealthThermometer = unchecked((int)0x2),
        HealthWeighingScale = unchecked((int)0x3),
        HealthGlucoseMeter = unchecked((int)0x4),
        HealthPulseOximeter = unchecked((int)0x5),
        HealthHeartRateMonitor = unchecked((int)0x6),
        HealthHealthDataDisplay = unchecked((int)0x7),
        HealthStepCounter = unchecked((int)0x8),
        HealthBodyCompositionAnalyzer = unchecked((int)0x9),
        HealthPeakFlowMonitor = unchecked((int)0xa),
        HealthMedicationMonitor = unchecked((int)0xb),
        HealthKneeProsthesis = unchecked((int)0xc),
        HealthAnkleProsthesis = unchecked((int)0xd),
        HealthGenericHealthManager = unchecked((int)0xe),
        HealthPersonalMobilityDevice = unchecked((int)0xf),
    }
    [FlagsAttribute]
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::WinRT.WinRTExposedType(typeof(global::WinRT.EnumTypeDetails<BluetoothServiceCapabilities>))][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public enum BluetoothServiceCapabilities : uint
    {
        None = unchecked((uint)0),
        LimitedDiscoverableMode = unchecked((uint)0x1),
        PositioningService = unchecked((uint)0x8),
        NetworkingService = unchecked((uint)0x10),
        RenderingService = unchecked((uint)0x20),
        CapturingService = unchecked((uint)0x40),
        ObjectTransferService = unchecked((uint)0x80),
        AudioService = unchecked((uint)0x100),
        TelephoneService = unchecked((uint)0x200),
        InformationService = unchecked((uint)0x400),
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")]
    [global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter))]
    [global::ABI.Windows.Devices.Bluetooth.BluetoothSignalStrengthFilterRcwFactory]
    [global::WinRT.ProjectedRuntimeClass(typeof(IBluetoothSignalStrengthFilter))]
    [global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.10240.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    public sealed class BluetoothSignalStrengthFilter : global::System.Runtime.InteropServices.ICustomQueryInterface, IWinRTObject, IEquatable<BluetoothSignalStrengthFilter>
    {
        private IntPtr ThisPtr => _inner == null ? (((IWinRTObject)this).NativeObject).ThisPtr : _inner.ThisPtr;

        private readonly IObjectReference _inner = null;



        private IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter => _inner;


        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_BluetoothSignalStrengthFilter;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_BluetoothSignalStrengthFilter
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_BluetoothSignalStrengthFilter;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_BluetoothSignalStrengthFilter = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter");
                }
            }
        }

        public BluetoothSignalStrengthFilter() 
        {
            _inner = global::ABI.WinRT.Interop.IActivationFactoryMethods.ActivateInstanceUnsafe(_objRef_global__Windows_Devices_Bluetooth_BluetoothSignalStrengthFilter, global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.IID);
            ComWrappersSupport.RegisterObjectForInterface(this, ThisPtr);
            ComWrappersHelper.Init(_inner, false);

        }

        public static BluetoothSignalStrengthFilter FromAbi(IntPtr thisPtr)
        {
            if (thisPtr == IntPtr.Zero) return null;
            return MarshalInspectable<BluetoothSignalStrengthFilter>.FromAbi(thisPtr);
        }

        internal BluetoothSignalStrengthFilter(IObjectReference objRef)
        {
            _inner = objRef.As(global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.IID);

        }


        public static bool operator ==(BluetoothSignalStrengthFilter x, BluetoothSignalStrengthFilter y) => (x?.ThisPtr ?? IntPtr.Zero) == (y?.ThisPtr ?? IntPtr.Zero);
        public static bool operator !=(BluetoothSignalStrengthFilter x, BluetoothSignalStrengthFilter y) => !(x == y);
        public bool Equals(BluetoothSignalStrengthFilter other) => this == other;
        public override bool Equals(object obj) => obj is BluetoothSignalStrengthFilter that && this == that;
        public override int GetHashCode() => ThisPtr.GetHashCode();


        bool IWinRTObject.HasUnwrappableNativeObject => true;
        IObjectReference IWinRTObject.NativeObject => _inner;
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> _queryInterfaceCache;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _queryInterfaceCache, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference>(), null); 
            return _queryInterfaceCache;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, IObjectReference> IWinRTObject.QueryInterfaceCache => _queryInterfaceCache ?? MakeQueryInterfaceCache();
        private volatile global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> _additionalTypeData;
        private global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> MakeAdditionalTypeData()
        {
            global::System.Threading.Interlocked.CompareExchange(ref _additionalTypeData, new global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object>(), null); 
            return _additionalTypeData;
        }
        global::System.Collections.Concurrent.ConcurrentDictionary<RuntimeTypeHandle, object> IWinRTObject.AdditionalTypeData => _additionalTypeData ?? MakeAdditionalTypeData();

        private struct InterfaceTag<I>{};


        public global::System.Nullable<short> InRangeThresholdInDBm
        {
            get => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.get_InRangeThresholdInDBm(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter);
            set => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.set_InRangeThresholdInDBm(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter, value);
        }

        public global::System.Nullable<short> OutOfRangeThresholdInDBm
        {
            get => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.get_OutOfRangeThresholdInDBm(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter);
            set => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.set_OutOfRangeThresholdInDBm(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter, value);
        }

        public global::System.Nullable<global::System.TimeSpan> OutOfRangeTimeout
        {
            get => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.get_OutOfRangeTimeout(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter);
            set => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.set_OutOfRangeTimeout(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter, value);
        }

        public global::System.Nullable<global::System.TimeSpan> SamplingInterval
        {
            get => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.get_SamplingInterval(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter);
            set => global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.set_SamplingInterval(_objRef_global__Windows_Devices_Bluetooth_IBluetoothSignalStrengthFilter, value);
        }

        private bool IsOverridableInterface(Guid iid) => false;

        global::System.Runtime.InteropServices.CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(ref Guid iid, out IntPtr ppv)
        {
            ppv = IntPtr.Zero;
            if (IsOverridableInterface(iid) || global::WinRT.Interop.IID.IID_IInspectable == iid || global::WinRT.Interop.IID.IID_IWeakReferenceSource == iid)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
            }

            if (((IWinRTObject)this).NativeObject.TryAs(iid, out ppv) >= 0)
            {
                return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.Handled;
            }

            return global::System.Runtime.InteropServices.CustomQueryInterfaceResult.NotHandled;
        }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][global::System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.15063.0")]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    public static class BluetoothUuidHelper
    {

        public static I As<I>() => ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothUuidHelper").AsInterface<I>();

        private static volatile IObjectReference ___objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics;
        private static IObjectReference _objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics
        {
            get
            { 
                var factory = ___objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics;
                if (factory != null && factory.IsInCurrentContext)
                {
                    return factory;
                }
                else
                {
                    return ___objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics = ActivationFactory.Get("Windows.Devices.Bluetooth.BluetoothUuidHelper", global::ABI.Windows.Devices.Bluetooth.IBluetoothUuidHelperStaticsMethods.IID);
                }
            }
        }

        public static Guid FromShortId(uint shortId) => global::ABI.Windows.Devices.Bluetooth.IBluetoothUuidHelperStaticsMethods.FromShortId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics, shortId);

        public static global::System.Nullable<uint> TryGetShortId(Guid uuid) => global::ABI.Windows.Devices.Bluetooth.IBluetoothUuidHelperStaticsMethods.TryGetShortId(_objRef_global__Windows_Devices_Bluetooth_IBluetoothUuidHelperStatics, uuid);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("7974F04C-5F7A-4A34-9225-A855F84B1A8B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IBluetoothAdapter
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Radios.Radio> GetRadioAsync();
        ulong BluetoothAddress { get; }
        string DeviceId { get; }
        bool IsAdvertisementOffloadSupported { get; }
        bool IsCentralRoleSupported { get; }
        bool IsClassicSupported { get; }
        bool IsLowEnergySupported { get; }
        bool IsPeripheralRoleSupported { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AC94CECC-24D5-41B3-916D-1097C50B102B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 393216u)]
    internal interface IBluetoothAdapter2
    {
        bool AreClassicSecureConnectionsSupported { get; }
        bool AreLowEnergySecureConnectionsSupported { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("8F8624E0-CBA9-5211-9F89-3AAC62B4C6B8")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 655360u)]
    internal interface IBluetoothAdapter3
    {
        bool IsExtendedAdvertisingSupported { get; }
        uint MaxAdvertisementDataLength { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F875F3E1-6D9A-5D5E-AEE5-A17248E5F6DD")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapter4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 1245184u)]
    internal interface IBluetoothAdapter4
    {
        bool IsLowEnergyCodedPhySupported { get; }
        bool IsLowEnergyUncoded2MPhySupported { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("8B02FB6A-AC4C-4741-8661-8EAB7D17EA9F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IBluetoothAdapterStatics
    {
        string GetDeviceSelector();
        global::Windows.Foundation.IAsyncOperation<BluetoothAdapter> FromIdAsync(string deviceId);
        global::Windows.Foundation.IAsyncOperation<BluetoothAdapter> GetDefaultAsync();
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("D640227E-D7D7-4661-9454-65039CA17A2B")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDevice))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothClassOfDevice
    {
        BluetoothMajorClass MajorClass { get; }
        BluetoothMinorClass MinorClass { get; }
        uint RawValue { get; }
        BluetoothServiceCapabilities ServiceCapabilities { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("E46135BD-0FA2-416C-91B4-C1E48CA061C1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothClassOfDeviceStatics
    {
        BluetoothClassOfDevice FromRawValue(uint rawValue);
        BluetoothClassOfDevice FromParts(BluetoothMajorClass majorClass, BluetoothMinorClass minorClass, BluetoothServiceCapabilities serviceCapabilities);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("2335B156-90D2-4A04-AEF5-0E20B9E6B707")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothDevice
    {
        ulong BluetoothAddress { get; }
        BluetoothClassOfDevice ClassOfDevice { get; }
        BluetoothConnectionStatus ConnectionStatus { get; }
        string DeviceId { get; }
        global::Windows.Networking.HostName HostName { get; }
        string Name { get; }
        global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService> RfcommServices { get; }
        global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.Streams.IBuffer> SdpRecords { get; }
        event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> ConnectionStatusChanged;
        event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> NameChanged;
        event global::Windows.Foundation.TypedEventHandler<BluetoothDevice, object> SdpRecordsChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("0133F954-B156-4DD0-B1F5-C11BC31A5163")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothDevice2
    {
        global::Windows.Devices.Enumeration.DeviceInformation DeviceInformation { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("57FFF78B-651A-4454-B90F-EB21EF0B0D71")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 196608u)]
    internal interface IBluetoothDevice3
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetRfcommServicesAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetRfcommServicesWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync(BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetRfcommServicesForIdAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId);
        [global::Windows.Foundation.Metadata.Overload(@"GetRfcommServicesForIdWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId, BluetoothCacheMode cacheMode);
        global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("817C34AD-0E9C-42B2-A8DC-3E8094940D12")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 327680u)]
    internal interface IBluetoothDevice4
    {
        BluetoothDeviceId BluetoothDeviceId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("B5E0B385-5E85-4559-A10D-1C7281379F96")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDevice5))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 393216u)]
    internal interface IBluetoothDevice5
    {
        bool WasSecureConnectionUsedForPairing { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("C17949AF-57C1-4642-BCCE-E6C06B20AE76")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceId))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IBluetoothDeviceId
    {
        string Id { get; }
        bool IsClassicDevice { get; }
        bool IsLowEnergyDevice { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A7884E67-3EFB-4F31-BBC2-810E09977404")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 327680u)]
    internal interface IBluetoothDeviceIdStatics
    {
        BluetoothDeviceId FromId(string deviceId);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("0991DF51-57DB-4725-BBD7-84F64327EC2C")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothDeviceStatics
    {
        global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromIdAsync(string deviceId);
        global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromHostNameAsync(global::Windows.Networking.HostName hostName);
        global::Windows.Foundation.IAsyncOperation<BluetoothDevice> FromBluetoothAddressAsync(ulong address);
        string GetDeviceSelector();
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("C29E8E2F-4E14-4477-AA1B-B8B47E5B7ECE")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothDeviceStatics2
    {
        string GetDeviceSelectorFromPairingState(bool pairingState);
        string GetDeviceSelectorFromConnectionStatus(BluetoothConnectionStatus connectionStatus);
        string GetDeviceSelectorFromDeviceName(string deviceName);
        string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress);
        string GetDeviceSelectorFromClassOfDevice(BluetoothClassOfDevice classOfDevice);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("5D2079F2-66A8-4258-985E-02B4D9509F18")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearance))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEAppearance
    {
        ushort Category { get; }
        ushort RawValue { get; }
        ushort SubCategory { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("6D4D54FE-046A-4185-AAB6-824CF0610861")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEAppearanceCategoriesStatics
    {
        ushort BarcodeScanner { get; }
        ushort BloodPressure { get; }
        ushort Clock { get; }
        ushort Computer { get; }
        ushort Cycling { get; }
        ushort Display { get; }
        ushort EyeGlasses { get; }
        ushort GlucoseMeter { get; }
        ushort HeartRate { get; }
        ushort HumanInterfaceDevice { get; }
        ushort Keyring { get; }
        ushort MediaPlayer { get; }
        ushort OutdoorSportActivity { get; }
        ushort Phone { get; }
        ushort PulseOximeter { get; }
        ushort RemoteControl { get; }
        ushort RunningWalking { get; }
        ushort Tag { get; }
        ushort Thermometer { get; }
        ushort Uncategorized { get; }
        ushort Watch { get; }
        ushort WeightScale { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("A193C0C7-4504-4F4A-9BA5-CD1054E5E065")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEAppearanceStatics
    {
        BluetoothLEAppearance FromRawValue(ushort rawValue);
        BluetoothLEAppearance FromParts(ushort appearanceCategory, ushort appearanceSubCategory);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("E57BA606-2144-415A-8312-71CCF291F8D1")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEAppearanceSubcategoriesStatics
    {
        ushort BarcodeScanner { get; }
        ushort BloodPressureArm { get; }
        ushort BloodPressureWrist { get; }
        ushort CardReader { get; }
        ushort CyclingCadenceSensor { get; }
        ushort CyclingComputer { get; }
        ushort CyclingPowerSensor { get; }
        ushort CyclingSpeedCadenceSensor { get; }
        ushort CyclingSpeedSensor { get; }
        ushort DigitalPen { get; }
        ushort DigitizerTablet { get; }
        ushort Gamepad { get; }
        ushort Generic { get; }
        ushort HeartRateBelt { get; }
        ushort Joystick { get; }
        ushort Keyboard { get; }
        ushort LocationDisplay { get; }
        ushort LocationNavigationDisplay { get; }
        ushort LocationNavigationPod { get; }
        ushort LocationPod { get; }
        ushort Mouse { get; }
        ushort OximeterFingertip { get; }
        ushort OximeterWristWorn { get; }
        ushort RunningWalkingInShoe { get; }
        ushort RunningWalkingOnHip { get; }
        ushort RunningWalkingOnShoe { get; }
        ushort SportsWatch { get; }
        ushort ThermometerEar { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("33CB0771-8DA9-508F-A366-1CA388C929AB")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEConnectionParameters
    {
        ushort ConnectionInterval { get; }
        ushort ConnectionLatency { get; }
        ushort LinkTimeout { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("781E5E48-621E-5A7E-8BE6-1B9561FF63C9")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhy))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEConnectionPhy
    {
        BluetoothLEConnectionPhyInfo ReceiveInfo { get; }
        BluetoothLEConnectionPhyInfo TransmitInfo { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9A100BDD-602E-5C27-A1AE-B230015A6394")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfo))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEConnectionPhyInfo
    {
        bool IsCodedPhy { get; }
        bool IsUncoded1MPhy { get; }
        bool IsUncoded2MPhy { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("B5EE2F7B-4AD8-4642-AC48-80A0B500E887")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothLEDevice
    {
        global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService GetGattService(Guid serviceUuid);
        ulong BluetoothAddress { get; }
        BluetoothConnectionStatus ConnectionStatus { get; }
        string DeviceId { get; }
        global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> GattServices { get; }
        string Name { get; }
        event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> ConnectionStatusChanged;
        event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> GattServicesChanged;
        event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> NameChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("26F062B3-7AEE-4D31-BABA-B1B9775F5916")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEDevice2
    {
        BluetoothLEAppearance Appearance { get; }
        BluetoothAddressType BluetoothAddressType { get; }
        global::Windows.Devices.Enumeration.DeviceInformation DeviceInformation { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("AEE9E493-44AC-40DC-AF33-B2C13C01CA46")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice3))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IBluetoothLEDevice3
    {
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetGattServicesAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync();
        [global::Windows.Foundation.Metadata.Overload(@"GetGattServicesWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync(BluetoothCacheMode cacheMode);
        [global::Windows.Foundation.Metadata.Overload(@"GetGattServicesForUuidAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(Guid serviceUuid);
        [global::Windows.Foundation.Metadata.Overload(@"GetGattServicesForUuidWithCacheModeAsync")]
        global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(Guid serviceUuid, BluetoothCacheMode cacheMode);
        global::Windows.Devices.Enumeration.DeviceAccessInformation DeviceAccessInformation { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("2B605031-2248-4B2F-ACF0-7CEE36FC5870")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice4))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 327680u)]
    internal interface IBluetoothLEDevice4
    {
        BluetoothDeviceId BluetoothDeviceId { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("9D6A1260-5287-458E-95BA-17C8B7BB326E")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice5))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 393216u)]
    internal interface IBluetoothLEDevice5
    {
        bool WasSecureConnectionUsedForPairing { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("CA7190EF-0CAE-573C-A1CA-E1FC5BFC39E2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDevice6))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEDevice6
    {
        BluetoothLEConnectionParameters GetConnectionParameters();
        BluetoothLEConnectionPhy GetConnectionPhy();
        BluetoothLEPreferredConnectionParametersRequest RequestPreferredConnectionParameters(BluetoothLEPreferredConnectionParameters preferredConnectionParameters);
        event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> ConnectionParametersChanged;
        event global::Windows.Foundation.TypedEventHandler<BluetoothLEDevice, object> ConnectionPhyChanged;
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("C8CF1A19-F0B6-4BF0-8689-41303DE2D9F4")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothLEDeviceStatics
    {
        global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromIdAsync(string deviceId);
        [global::Windows.Foundation.Metadata.Overload(@"FromBluetoothAddressAsync")]
        global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromBluetoothAddressAsync(ulong bluetoothAddress);
        string GetDeviceSelector();
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("5F12C06B-3BAC-43E8-AD16-563271BD41C2")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 131072u)]
    internal interface IBluetoothLEDeviceStatics2
    {
        string GetDeviceSelectorFromPairingState(bool pairingState);
        string GetDeviceSelectorFromConnectionStatus(BluetoothConnectionStatus connectionStatus);
        string GetDeviceSelectorFromDeviceName(string deviceName);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorFromBluetoothAddress")]
        string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress);
        [global::Windows.Foundation.Metadata.Overload(@"GetDeviceSelectorFromBluetoothAddressWithBluetoothAddressType")]
        string GetDeviceSelectorFromBluetoothAddress(ulong bluetoothAddress, BluetoothAddressType bluetoothAddressType);
        string GetDeviceSelectorFromAppearance(BluetoothLEAppearance appearance);
        [global::Windows.Foundation.Metadata.Overload(@"FromBluetoothAddressWithBluetoothAddressTypeAsync")]
        global::Windows.Foundation.IAsyncOperation<BluetoothLEDevice> FromBluetoothAddressAsync(ulong bluetoothAddress, BluetoothAddressType bluetoothAddressType);
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("F2F44344-7372-5F7B-9B34-29C944F5A715")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParameters))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEPreferredConnectionParameters
    {
        ushort ConnectionLatency { get; }
        ushort LinkTimeout { get; }
        ushort MaxConnectionInterval { get; }
        ushort MinConnectionInterval { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("8A375276-A528-5266-B661-CCE6A5FF9739")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequest))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEPreferredConnectionParametersRequest
    {
        BluetoothLEPreferredConnectionParametersRequestStatus Status { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("0E3E8EDC-2751-55AA-A838-8FAEEE818D72")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 851968u)]
    internal interface IBluetoothLEPreferredConnectionParametersStatics
    {
        BluetoothLEPreferredConnectionParameters Balanced { get; }
        BluetoothLEPreferredConnectionParameters PowerOptimized { get; }
        BluetoothLEPreferredConnectionParameters ThroughputOptimized { get; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("DF7B7391-6BB5-4CFE-90B1-5D7324EDCF7F")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilter))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 65536u)]
    internal interface IBluetoothSignalStrengthFilter
    {
        global::System.Nullable<short> InRangeThresholdInDBm { get; set; }
        global::System.Nullable<short> OutOfRangeThresholdInDBm { get; set; }
        global::System.Nullable<global::System.TimeSpan> OutOfRangeTimeout { get; set; }
        global::System.Nullable<global::System.TimeSpan> SamplingInterval { get; set; }
    }
    [global::WinRT.WindowsRuntimeType("Windows.Foundation.UniversalApiContract")][Guid("17DF0CD8-CF74-4B21-AFE6-F57A11BCDEA0")][global::WinRT.WindowsRuntimeHelperType(typeof(global::ABI.Windows.Devices.Bluetooth.IBluetoothUuidHelperStatics))]
    [global::Windows.Foundation.Metadata.ContractVersion(typeof(global::Windows.Foundation.UniversalApiContract), 262144u)]
    internal interface IBluetoothUuidHelperStatics
    {
        Guid FromShortId(uint shortId);
        global::System.Nullable<uint> TryGetShortId(Guid uuid);
    }
}

#pragma warning disable CA1416
namespace ABI.Windows.Devices.Bluetooth
{
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothAdapter
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothAdapter obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothAdapter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothAdapter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothAdapterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothAdapter FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothAdapter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothAdapter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothAdapter[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothAdapter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothAdapter[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothAdapter[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothAdapter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothAdapterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothAdapter(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothClassOfDevice
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothClassOfDeviceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothClassOfDevice FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothClassOfDevice.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothClassOfDevice[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothClassOfDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothClassOfDevice>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothClassOfDeviceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothClassOfDevice(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothDevice
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothDevice obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothDevice>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothDevice obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothDevice FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothDevice.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothDevice obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothDevice[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothDevice[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDevice>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothDeviceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothDevice(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothDeviceId
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothDeviceId obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothDeviceId obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothDeviceIdMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothDeviceId FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothDeviceId.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothDeviceId obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothDeviceId[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothDeviceId[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothDeviceId[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothDeviceId[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothDeviceId>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothDeviceIdRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothDeviceId(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEAppearance
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEAppearance obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEAppearance obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEAppearanceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEAppearance FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEAppearance.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEAppearance obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEAppearance[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEAppearance[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEAppearance[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEAppearance[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEAppearance>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEAppearanceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEAppearance(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEConnectionParameters
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionParametersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEConnectionParametersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEConnectionPhy
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEConnectionPhyRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEConnectionPhyInfo
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfoMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEConnectionPhyInfoRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEDevice
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEDevice obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEDevice obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEDeviceMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEDevice FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEDevice.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEDevice obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEDevice[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEDevice[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEDevice[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEDevice>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEDeviceRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEDevice(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEPreferredConnectionParameters
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEPreferredConnectionParametersRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothLEPreferredConnectionParametersRequest
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequestMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequestMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothLEPreferredConnectionParametersRequestRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest(inspectable.ObjRef);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public struct BluetoothSignalStrengthFilter
    {

        public static IObjectReference CreateMarshaler(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter obj) => obj is null ? null : MarshalInspectable<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.CreateMarshaler<IUnknownVftbl>(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.IID);
        public static ObjectReferenceValue CreateMarshaler2(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter obj) => MarshalInspectable<object>.CreateMarshaler2(obj, global::ABI.Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilterMethods.IID);
        public static IntPtr GetAbi(IObjectReference value) => value is null ? IntPtr.Zero : MarshalInterfaceHelper<object>.GetAbi(value);
        public static global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter FromAbi(IntPtr thisPtr) => global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter.FromAbi(thisPtr);
        public static IntPtr FromManaged(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter obj) => obj is null ? IntPtr.Zero : CreateMarshaler2(obj).Detach();
        public static unsafe MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.MarshalerArray CreateMarshalerArray(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.CreateMarshalerArray2(array, (o) => CreateMarshaler2(o));
        public static (int length, IntPtr data) GetAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.GetAbiArray(box);
        public static unsafe global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter[] FromAbiArray(object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.FromAbiArray(box, FromAbi);
        public static void CopyAbiArray(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter[] array, object box) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.CopyAbiArray(array, box, FromAbi);
        public static (int length, IntPtr data) FromManagedArray(global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter[] array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.FromManagedArray(array, (o) => FromManaged(o));
        public static void DisposeMarshaler(IObjectReference value) => MarshalInspectable<object>.DisposeMarshaler(value);
        public static void DisposeMarshalerArray(MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.MarshalerArray array) => MarshalInterfaceHelper<global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter>.DisposeMarshalerArray(array);
        public static void DisposeAbi(IntPtr abi) => MarshalInspectable<object>.DisposeAbi(abi);
        public static unsafe void DisposeAbiArray(object box) => MarshalInspectable<object>.DisposeAbiArray(box);
    }
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    internal sealed class BluetoothSignalStrengthFilterRcwFactoryAttribute : global::WinRT.WinRTImplementationTypeRcwFactoryAttribute
    {
        public override object CreateInstance(global::WinRT.IInspectable inspectable)
            => new global::Windows.Devices.Bluetooth.BluetoothSignalStrengthFilter(inspectable.ObjRef);
    }
    internal static class IBluetoothAdapterMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Radios.Radio> GetRadioAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[13](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Radios_Radio.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Radios.Radio>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Radios.Radio>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe ulong get_BluetoothAddress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_DeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_IsAdvertisementOffloadSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsCentralRoleSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsClassicSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsLowEnergySupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsPeripheralRoleSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x4C, 0xF0, 0x74, 0x79, 0x7A, 0x5F, 0x34, 0x4A, 0x92, 0x25, 0xA8, 0x55, 0xF8, 0x4B, 0x1A, 0x8B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("7974F04C-5F7A-4A34-9225-A855F84B1A8B")]
    internal interface IBluetoothAdapter : global::Windows.Devices.Bluetooth.IBluetoothAdapter
    {
    }
    internal static class IBluetoothAdapter2Methods
    {

        internal static unsafe bool get_AreClassicSecureConnectionsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_AreLowEnergySecureConnectionsSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xCC, 0xCE, 0x94, 0xAC, 0xD5, 0x24, 0xB3, 0x41, 0x91, 0x6D, 0x10, 0x97, 0xC5, 0xB, 0x10, 0x2B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AC94CECC-24D5-41B3-916D-1097C50B102B")]
    internal interface IBluetoothAdapter2 : global::Windows.Devices.Bluetooth.IBluetoothAdapter2
    {
    }
    internal static class IBluetoothAdapter3Methods
    {

        internal static unsafe bool get_IsExtendedAdvertisingSupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe uint get_MaxAdvertisementDataLength(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE0, 0x24, 0x86, 0x8F, 0xA9, 0xCB, 0x11, 0x52, 0x9F, 0x89, 0x3A, 0xAC, 0x62, 0xB4, 0xC6, 0xB8 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8F8624E0-CBA9-5211-9F89-3AAC62B4C6B8")]
    internal interface IBluetoothAdapter3 : global::Windows.Devices.Bluetooth.IBluetoothAdapter3
    {
    }
    internal static class IBluetoothAdapter4Methods
    {

        internal static unsafe bool get_IsLowEnergyCodedPhySupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsLowEnergyUncoded2MPhySupported(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xE1, 0xF3, 0x75, 0xF8, 0x9A, 0x6D, 0x5E, 0x5D, 0xAE, 0xE5, 0xA1, 0x72, 0x48, 0xE5, 0xF6, 0xDD };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F875F3E1-6D9A-5D5E-AEE5-A17248E5F6DD")]
    internal interface IBluetoothAdapter4 : global::Windows.Devices.Bluetooth.IBluetoothAdapter4
    {
    }
    internal static class IBluetoothAdapterStaticsMethods
    {


        internal static unsafe string GetDeviceSelector(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter> FromIdAsync(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalString.GetAbi(ref __deviceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothAdapter.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter> GetDefaultAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothAdapter.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothAdapter>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6A, 0xFB, 0x2, 0x8B, 0x4C, 0xAC, 0x41, 0x47, 0x86, 0x61, 0x8E, 0xAB, 0x7D, 0x17, 0xEA, 0x9F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8B02FB6A-AC4C-4741-8661-8EAB7D17EA9F")]
    internal interface IBluetoothAdapterStatics : global::Windows.Devices.Bluetooth.IBluetoothAdapterStatics
    {
    }
    internal static class IBluetoothClassOfDeviceMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothMajorClass get_MajorClass(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothMajorClass __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothMajorClass*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothMinorClass get_MinorClass(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothMinorClass __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothMinorClass*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe uint get_RawValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            uint __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities get_ServiceCapabilities(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7E, 0x22, 0x40, 0xD6, 0xD7, 0xD7, 0x61, 0x46, 0x94, 0x54, 0x65, 0x3, 0x9C, 0xA1, 0x7A, 0x2B };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("D640227E-D7D7-4661-9454-65039CA17A2B")]
    internal interface IBluetoothClassOfDevice : global::Windows.Devices.Bluetooth.IBluetoothClassOfDevice
    {
    }
    internal static class IBluetoothClassOfDeviceStaticsMethods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothClassOfDevice FromRawValue(IObjectReference _obj, uint rawValue)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, IntPtr*, int>**)ThisPtr)[6](ThisPtr, rawValue, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothClassOfDevice FromParts(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothMajorClass majorClass, global::Windows.Devices.Bluetooth.BluetoothMinorClass minorClass, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities serviceCapabilities)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothMajorClass, global::Windows.Devices.Bluetooth.BluetoothMinorClass, global::Windows.Devices.Bluetooth.BluetoothServiceCapabilities, IntPtr*, int>**)ThisPtr)[7](ThisPtr, majorClass, minorClass, serviceCapabilities, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xBD, 0x35, 0x61, 0xE4, 0xA2, 0xF, 0x6C, 0x41, 0x91, 0xB4, 0xC1, 0xE4, 0x8C, 0xA0, 0x61, 0xC1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E46135BD-0FA2-416C-91B4-C1E48CA061C1")]
    internal interface IBluetoothClassOfDeviceStatics : global::Windows.Devices.Bluetooth.IBluetoothClassOfDeviceStatics
    {
    }
    internal static class IBluetoothDeviceMethods
    {

        internal static unsafe ulong get_BluetoothAddress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothClassOfDevice get_ClassOfDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothConnectionStatus get_ConnectionStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothConnectionStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_DeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Networking.HostName get_HostName(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Networking.HostName.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Networking.HostName.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService> get_RfcommServices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_Rfcomm_RfcommDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceService>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.Streams.IBuffer> get_SdpRecords(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Storage_Streams_IBuffer.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.Streams.IBuffer>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.Streams.IBuffer>>.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _ConnectionStatusChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> MakeConnectionStatusChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ConnectionStatusChanged_, new(), null);
            return _ConnectionStatusChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _ConnectionStatusChanged => _ConnectionStatusChanged_ ?? MakeConnectionStatusChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>> Get_ConnectionStatusChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ConnectionStatusChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[18],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[19],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _NameChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> MakeNameChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _NameChanged_, new(), null);
            return _NameChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _NameChanged => _NameChanged_ ?? MakeNameChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>> Get_NameChanged2(IObjectReference _obj, object _thisObj)
        {
            return _NameChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[14],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[15],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _SdpRecordsChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> MakeSdpRecordsChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _SdpRecordsChanged_, new(), null);
            return _SdpRecordsChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>>> _SdpRecordsChanged => _SdpRecordsChanged_ ?? MakeSdpRecordsChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothDevice, object>> Get_SdpRecordsChanged2(IObjectReference _obj, object _thisObj)
        {
            return _SdpRecordsChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[16],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[17],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x56, 0xB1, 0x35, 0x23, 0xD2, 0x90, 0x4, 0x4A, 0xAE, 0xF5, 0xE, 0x20, 0xB9, 0xE6, 0xB7, 0x7 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2335B156-90D2-4A04-AEF5-0E20B9E6B707")]
    internal interface IBluetoothDevice : global::Windows.Devices.Bluetooth.IBluetoothDevice
    {
    }
    internal static class IBluetoothDevice2Methods
    {

        internal static unsafe global::Windows.Devices.Enumeration.DeviceInformation get_DeviceInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Enumeration.DeviceInformation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Enumeration.DeviceInformation.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x54, 0xF9, 0x33, 0x1, 0x56, 0xB1, 0xD0, 0x4D, 0xB1, 0xF5, 0xC1, 0x1B, 0xC3, 0x1A, 0x51, 0x63 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0133F954-B156-4DD0-B1F5-C11BC31A5163")]
    internal interface IBluetoothDevice2 : global::Windows.Devices.Bluetooth.IBluetoothDevice2
    {
    }
    internal static class IBluetoothDevice3Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_DeviceAccessStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_Rfcomm_RfcommDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[9](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_Rfcomm_RfcommDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __serviceId = default;
            IntPtr __retval = default;
            try
            {
                __serviceId = global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.CreateMarshaler2(serviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__serviceId), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_Rfcomm_RfcommDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__serviceId);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult> GetRfcommServicesForIdAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId serviceId, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __serviceId = default;
            IntPtr __retval = default;
            try
            {
                __serviceId = global::ABI.Windows.Devices.Bluetooth.Rfcomm.RfcommServiceId.CreateMarshaler2(serviceId);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__serviceId), cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_Rfcomm_RfcommDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__serviceId);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.Rfcomm.RfcommDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Enumeration.DeviceAccessInformation get_DeviceAccessInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x8B, 0xF7, 0xFF, 0x57, 0x1A, 0x65, 0x54, 0x44, 0xB9, 0xF, 0xEB, 0x21, 0xEF, 0xB, 0xD, 0x71 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("57FFF78B-651A-4454-B90F-EB21EF0B0D71")]
    internal interface IBluetoothDevice3 : global::Windows.Devices.Bluetooth.IBluetoothDevice3
    {
    }
    internal static class IBluetoothDevice4Methods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothDeviceId get_BluetoothDeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAD, 0x34, 0x7C, 0x81, 0x9C, 0xE, 0xB2, 0x42, 0xA8, 0xDC, 0x3E, 0x80, 0x94, 0x94, 0xD, 0x12 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("817C34AD-0E9C-42B2-A8DC-3E8094940D12")]
    internal interface IBluetoothDevice4 : global::Windows.Devices.Bluetooth.IBluetoothDevice4
    {
    }
    internal static class IBluetoothDevice5Methods
    {

        internal static unsafe bool get_WasSecureConnectionUsedForPairing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x85, 0xB3, 0xE0, 0xB5, 0x85, 0x5E, 0x59, 0x45, 0xA1, 0xD, 0x1C, 0x72, 0x81, 0x37, 0x9F, 0x96 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5E0B385-5E85-4559-A10D-1C7281379F96")]
    internal interface IBluetoothDevice5 : global::Windows.Devices.Bluetooth.IBluetoothDevice5
    {
    }
    internal static class IBluetoothDeviceIdMethods
    {

        internal static unsafe string get_Id(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe bool get_IsClassicDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsLowEnergyDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xAF, 0x49, 0x79, 0xC1, 0xC1, 0x57, 0x42, 0x46, 0xBC, 0xCE, 0xE6, 0xC0, 0x6B, 0x20, 0xAE, 0x76 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C17949AF-57C1-4642-BCCE-E6C06B20AE76")]
    internal interface IBluetoothDeviceId : global::Windows.Devices.Bluetooth.IBluetoothDeviceId
    {
    }
    internal static class IBluetoothDeviceIdStaticsMethods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothDeviceId FromId(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.FromAbi(__retval);
                }
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x67, 0x4E, 0x88, 0xA7, 0xFB, 0x3E, 0x31, 0x4F, 0xBB, 0xC2, 0x81, 0xE, 0x9, 0x97, 0x74, 0x4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A7884E67-3EFB-4F31-BBC2-810E09977404")]
    internal interface IBluetoothDeviceIdStatics : global::Windows.Devices.Bluetooth.IBluetoothDeviceIdStatics
    {
    }
    internal static class IBluetoothDeviceStaticsMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice> FromIdAsync(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothDevice.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice> FromHostNameAsync(IObjectReference _obj, global::Windows.Networking.HostName hostName)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __hostName = default;
            IntPtr __retval = default;
            try
            {
                __hostName = global::ABI.Windows.Networking.HostName.CreateMarshaler2(hostName);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__hostName), &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothDevice.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__hostName);
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice> FromBluetoothAddressAsync(IObjectReference _obj, ulong address)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, IntPtr*, int>**)ThisPtr)[8](ThisPtr, address, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothDevice.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothDevice>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelector(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[9](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x51, 0xDF, 0x91, 0x9, 0xDB, 0x57, 0x25, 0x47, 0xBB, 0xD7, 0x84, 0xF6, 0x43, 0x27, 0xEC, 0x2C };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0991DF51-57DB-4725-BBD7-84F64327EC2C")]
    internal interface IBluetoothDeviceStatics : global::Windows.Devices.Bluetooth.IBluetoothDeviceStatics
    {
    }
    internal static class IBluetoothDeviceStatics2Methods
    {


        internal static unsafe string GetDeviceSelectorFromPairingState(IObjectReference _obj, bool pairingState)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, IntPtr*, int>**)ThisPtr)[6](ThisPtr, (byte)(pairingState ? 1 : 0), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromConnectionStatus(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus connectionStatus)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus, IntPtr*, int>**)ThisPtr)[7](ThisPtr, connectionStatus, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromDeviceName(IObjectReference _obj, string deviceName)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceName = new(deviceName);
                fixed(void* ___deviceName = __deviceName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __deviceName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalString.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromBluetoothAddress(IObjectReference _obj, ulong bluetoothAddress)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, IntPtr*, int>**)ThisPtr)[9](ThisPtr, bluetoothAddress, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromClassOfDevice(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothClassOfDevice classOfDevice)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __classOfDevice = default;
            IntPtr __retval = default;
            try
            {
                __classOfDevice = global::ABI.Windows.Devices.Bluetooth.BluetoothClassOfDevice.CreateMarshaler2(classOfDevice);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, MarshalInspectable<object>.GetAbi(__classOfDevice), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__classOfDevice);
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x2F, 0x8E, 0x9E, 0xC2, 0x14, 0x4E, 0x77, 0x44, 0xAA, 0x1B, 0xB8, 0xB4, 0x7E, 0x5B, 0x7E, 0xCE };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C29E8E2F-4E14-4477-AA1B-B8B47E5B7ECE")]
    internal interface IBluetoothDeviceStatics2 : global::Windows.Devices.Bluetooth.IBluetoothDeviceStatics2
    {
    }
    internal static class IBluetoothLEAppearanceMethods
    {

        internal static unsafe ushort get_Category(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RawValue(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_SubCategory(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xF2, 0x79, 0x20, 0x5D, 0xA8, 0x66, 0x58, 0x42, 0x98, 0x5E, 0x2, 0xB4, 0xD9, 0x50, 0x9F, 0x18 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5D2079F2-66A8-4258-985E-02B4D9509F18")]
    internal interface IBluetoothLEAppearance : global::Windows.Devices.Bluetooth.IBluetoothLEAppearance
    {
    }
    internal static class IBluetoothLEAppearanceCategoriesStaticsMethods
    {

        internal static unsafe ushort get_BarcodeScanner(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_BloodPressure(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Clock(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Computer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Cycling(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Display(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_EyeGlasses(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_GlucoseMeter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_HeartRate(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_HumanInterfaceDevice(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Keyring(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_MediaPlayer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_OutdoorSportActivity(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Phone(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_PulseOximeter(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RemoteControl(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RunningWalking(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Tag(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Thermometer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Uncategorized(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Watch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_WeightScale(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xFE, 0x54, 0x4D, 0x6D, 0x6A, 0x4, 0x85, 0x41, 0xAA, 0xB6, 0x82, 0x4C, 0xF0, 0x61, 0x8, 0x61 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("6D4D54FE-046A-4185-AAB6-824CF0610861")]
    internal interface IBluetoothLEAppearanceCategoriesStatics : global::Windows.Devices.Bluetooth.IBluetoothLEAppearanceCategoriesStatics
    {
    }
    internal static class IBluetoothLEAppearanceStaticsMethods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEAppearance FromRawValue(IObjectReference _obj, ushort rawValue)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, IntPtr*, int>**)ThisPtr)[6](ThisPtr, rawValue, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEAppearance FromParts(IObjectReference _obj, ushort appearanceCategory, ushort appearanceSubCategory)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort, ushort, IntPtr*, int>**)ThisPtr)[7](ThisPtr, appearanceCategory, appearanceSubCategory, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xC7, 0xC0, 0x93, 0xA1, 0x4, 0x45, 0x4A, 0x4F, 0x9B, 0xA5, 0xCD, 0x10, 0x54, 0xE5, 0xE0, 0x65 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("A193C0C7-4504-4F4A-9BA5-CD1054E5E065")]
    internal interface IBluetoothLEAppearanceStatics : global::Windows.Devices.Bluetooth.IBluetoothLEAppearanceStatics
    {
    }
    internal static class IBluetoothLEAppearanceSubcategoriesStaticsMethods
    {

        internal static unsafe ushort get_BarcodeScanner(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[19](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_BloodPressureArm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_BloodPressureWrist(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[11](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CardReader(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[17](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CyclingCadenceSensor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[25](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CyclingComputer(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[23](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CyclingPowerSensor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[26](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CyclingSpeedCadenceSensor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[27](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_CyclingSpeedSensor(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[24](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_DigitalPen(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[18](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_DigitizerTablet(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[16](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Gamepad(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[15](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Generic(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_HeartRateBelt(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Joystick(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[14](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Keyboard(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[12](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LocationDisplay(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[30](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LocationNavigationDisplay(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[31](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LocationNavigationPod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[33](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LocationPod(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[32](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_Mouse(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[13](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_OximeterFingertip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[28](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_OximeterWristWorn(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[29](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RunningWalkingInShoe(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[20](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RunningWalkingOnHip(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[22](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_RunningWalkingOnShoe(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[21](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_SportsWatch(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_ThermometerEar(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6, 0xA6, 0x7B, 0xE5, 0x44, 0x21, 0x5A, 0x41, 0x83, 0x12, 0x71, 0xCC, 0xF2, 0x91, 0xF8, 0xD1 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("E57BA606-2144-415A-8312-71CCF291F8D1")]
    internal interface IBluetoothLEAppearanceSubcategoriesStatics : global::Windows.Devices.Bluetooth.IBluetoothLEAppearanceSubcategoriesStatics
    {
    }
    internal static class IBluetoothLEConnectionParametersMethods
    {

        internal static unsafe ushort get_ConnectionInterval(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_ConnectionLatency(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LinkTimeout(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x71, 0x7, 0xCB, 0x33, 0xA9, 0x8D, 0x8F, 0x50, 0xA3, 0x66, 0x1C, 0xA3, 0x88, 0xC9, 0x29, 0xAB };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("33CB0771-8DA9-508F-A366-1CA388C929AB")]
    internal interface IBluetoothLEConnectionParameters : global::Windows.Devices.Bluetooth.IBluetoothLEConnectionParameters
    {
    }
    internal static class IBluetoothLEConnectionPhyMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo get_ReceiveInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo get_TransmitInfo(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhyInfo.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x48, 0x5E, 0x1E, 0x78, 0x1E, 0x62, 0x7E, 0x5A, 0x8B, 0xE6, 0x1B, 0x95, 0x61, 0xFF, 0x63, 0xC9 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("781E5E48-621E-5A7E-8BE6-1B9561FF63C9")]
    internal interface IBluetoothLEConnectionPhy : global::Windows.Devices.Bluetooth.IBluetoothLEConnectionPhy
    {
    }
    internal static class IBluetoothLEConnectionPhyInfoMethods
    {

        internal static unsafe bool get_IsCodedPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsUncoded1MPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }

        internal static unsafe bool get_IsUncoded2MPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDD, 0xB, 0x10, 0x9A, 0x2E, 0x60, 0x27, 0x5C, 0xA1, 0xAE, 0xB2, 0x30, 0x1, 0x5A, 0x63, 0x94 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9A100BDD-602E-5C27-A1AE-B230015A6394")]
    internal interface IBluetoothLEConnectionPhyInfo : global::Windows.Devices.Bluetooth.IBluetoothLEConnectionPhyInfo
    {
    }
    internal static class IBluetoothLEDeviceMethods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService GetGattService(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[11](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService.DisposeAbi(__retval);
            }
        }
        internal static unsafe ulong get_BluetoothAddress(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ulong __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong*, int>**)ThisPtr)[10](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothConnectionStatus get_ConnectionStatus(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothConnectionStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe string get_DeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService> get_GattServices(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceService.EnsureInitialized();
                return MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceService>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string get_Name(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionStatusChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> MakeConnectionStatusChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ConnectionStatusChanged_, new(), null);
            return _ConnectionStatusChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionStatusChanged => _ConnectionStatusChanged_ ?? MakeConnectionStatusChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>> Get_ConnectionStatusChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ConnectionStatusChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothLEDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[16],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[17],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _GattServicesChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> MakeGattServicesChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _GattServicesChanged_, new(), null);
            return _GattServicesChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _GattServicesChanged => _GattServicesChanged_ ?? MakeGattServicesChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>> Get_GattServicesChanged2(IObjectReference _obj, object _thisObj)
        {
            return _GattServicesChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothLEDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[14],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[15],
                1);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _NameChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> MakeNameChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _NameChanged_, new(), null);
            return _NameChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _NameChanged => _NameChanged_ ?? MakeNameChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>> Get_NameChanged2(IObjectReference _obj, object _thisObj)
        {
            return _NameChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothLEDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[12],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[13],
                2);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x7B, 0x2F, 0xEE, 0xB5, 0xD8, 0x4A, 0x42, 0x46, 0xAC, 0x48, 0x80, 0xA0, 0xB5, 0x0, 0xE8, 0x87 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("B5EE2F7B-4AD8-4642-AC48-80A0B500E887")]
    internal interface IBluetoothLEDevice : global::Windows.Devices.Bluetooth.IBluetoothLEDevice
    {
    }
    internal static class IBluetoothLEDevice2Methods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEAppearance get_Appearance(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothAddressType get_BluetoothAddressType(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothAddressType __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothAddressType*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::Windows.Devices.Enumeration.DeviceInformation get_DeviceInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Enumeration.DeviceInformation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Enumeration.DeviceInformation.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xB3, 0x62, 0xF0, 0x26, 0xEE, 0x7A, 0x31, 0x4D, 0xBA, 0xBA, 0xB1, 0xB9, 0x77, 0x5F, 0x59, 0x16 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("26F062B3-7AEE-4D31-BABA-B1B9775F5916")]
    internal interface IBluetoothLEDevice2 : global::Windows.Devices.Bluetooth.IBluetoothLEDevice2
    {
    }
    internal static class IBluetoothLEDevice3Methods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus> RequestAccessAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Enumeration_DeviceAccessStatus.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceAccessStatus>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesAsync(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[9](ThisPtr, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(IObjectReference _obj, Guid serviceUuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[10](ThisPtr, serviceUuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult> GetGattServicesForUuidAsync(IObjectReference _obj, Guid serviceUuid, global::Windows.Devices.Bluetooth.BluetoothCacheMode cacheMode)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, global::Windows.Devices.Bluetooth.BluetoothCacheMode, IntPtr*, int>**)ThisPtr)[11](ThisPtr, serviceUuid, cacheMode, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_GenericAttributeProfile_GattDeviceServicesResult.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.GenericAttributeProfile.GattDeviceServicesResult>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe global::Windows.Devices.Enumeration.DeviceAccessInformation get_DeviceAccessInformation(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Enumeration.DeviceAccessInformation.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x93, 0xE4, 0xE9, 0xAE, 0xAC, 0x44, 0xDC, 0x40, 0xAF, 0x33, 0xB2, 0xC1, 0x3C, 0x1, 0xCA, 0x46 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("AEE9E493-44AC-40DC-AF33-B2C13C01CA46")]
    internal interface IBluetoothLEDevice3 : global::Windows.Devices.Bluetooth.IBluetoothLEDevice3
    {
    }
    internal static class IBluetoothLEDevice4Methods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothDeviceId get_BluetoothDeviceId(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothDeviceId.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x31, 0x50, 0x60, 0x2B, 0x48, 0x22, 0x2F, 0x4B, 0xAC, 0xF0, 0x7C, 0xEE, 0x36, 0xFC, 0x58, 0x70 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("2B605031-2248-4B2F-ACF0-7CEE36FC5870")]
    internal interface IBluetoothLEDevice4 : global::Windows.Devices.Bluetooth.IBluetoothLEDevice4
    {
    }
    internal static class IBluetoothLEDevice5Methods
    {

        internal static unsafe bool get_WasSecureConnectionUsedForPairing(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            byte __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval != 0;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x60, 0x12, 0x6A, 0x9D, 0x87, 0x52, 0x8E, 0x45, 0x95, 0xBA, 0x17, 0xC8, 0xB7, 0xBB, 0x32, 0x6E };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("9D6A1260-5287-458E-95BA-17C8B7BB326E")]
    internal interface IBluetoothLEDevice5 : global::Windows.Devices.Bluetooth.IBluetoothLEDevice5
    {
    }
    internal static class IBluetoothLEDevice6Methods
    {


        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionParameters GetConnectionParameters(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionParameters.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionParameters.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEConnectionPhy GetConnectionPhy(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhy.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEConnectionPhy.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest RequestPreferredConnectionParameters(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters preferredConnectionParameters)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __preferredConnectionParameters = default;
            IntPtr __retval = default;
            try
            {
                __preferredConnectionParameters = global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.CreateMarshaler2(preferredConnectionParameters);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalInspectable<object>.GetAbi(__preferredConnectionParameters), &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__preferredConnectionParameters);
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequest.DisposeAbi(__retval);
            }
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionParametersChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> MakeConnectionParametersChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ConnectionParametersChanged_, new(), null);
            return _ConnectionParametersChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionParametersChanged => _ConnectionParametersChanged_ ?? MakeConnectionParametersChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>> Get_ConnectionParametersChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ConnectionParametersChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothLEDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[9],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[10],
                0);
            });
        }

        private volatile static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionPhyChanged_;
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> MakeConnectionPhyChangedTable()
        {
            
            global::System.Threading.Interlocked.CompareExchange(ref _ConnectionPhyChanged_, new(), null);
            return _ConnectionPhyChanged_;
        }
        private static global::System.Runtime.CompilerServices.ConditionalWeakTable<object, global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>>> _ConnectionPhyChanged => _ConnectionPhyChanged_ ?? MakeConnectionPhyChangedTable();



        internal static unsafe global::ABI.WinRT.Interop.EventSource<global::Windows.Foundation.TypedEventHandler<global::Windows.Devices.Bluetooth.BluetoothLEDevice, object>> Get_ConnectionPhyChanged2(IObjectReference _obj, object _thisObj)
        {
            return _ConnectionPhyChanged.GetValue(_thisObj, (key) =>
            {

                var ThisPtr = _obj.ThisPtr;

                return 
                new _EventSource_global__Windows_Foundation_TypedEventHandler_global__Windows_Devices_Bluetooth_BluetoothLEDevice__object_(_obj,
                (*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, global::WinRT.EventRegistrationToken*, int>**)ThisPtr)[11],
                (*(delegate* unmanaged[Stdcall]<IntPtr, global::WinRT.EventRegistrationToken, int>**)ThisPtr)[12],
                1);
            });
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xEF, 0x90, 0x71, 0xCA, 0xAE, 0xC, 0x3C, 0x57, 0xA1, 0xCA, 0xE1, 0xFC, 0x5B, 0xFC, 0x39, 0xE2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("CA7190EF-0CAE-573C-A1CA-E1FC5BFC39E2")]
    internal interface IBluetoothLEDevice6 : global::Windows.Devices.Bluetooth.IBluetoothLEDevice6
    {
    }
    internal static class IBluetoothLEDeviceStaticsMethods
    {


        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice> FromIdAsync(IObjectReference _obj, string deviceId)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceId = new(deviceId);
                fixed(void* ___deviceId = __deviceId)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, MarshalString.GetAbi(ref __deviceId), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothLEDevice.EnsureInitialized();
                    return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice> FromBluetoothAddressAsync(IObjectReference _obj, ulong bluetoothAddress)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, IntPtr*, int>**)ThisPtr)[7](ThisPtr, bluetoothAddress, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothLEDevice.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelector(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x19, 0x1A, 0xCF, 0xC8, 0xB6, 0xF0, 0xF0, 0x4B, 0x86, 0x89, 0x41, 0x30, 0x3D, 0xE2, 0xD9, 0xF4 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("C8CF1A19-F0B6-4BF0-8689-41303DE2D9F4")]
    internal interface IBluetoothLEDeviceStatics : global::Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics
    {
    }
    internal static class IBluetoothLEDeviceStatics2Methods
    {


        internal static unsafe string GetDeviceSelectorFromPairingState(IObjectReference _obj, bool pairingState)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, byte, IntPtr*, int>**)ThisPtr)[6](ThisPtr, (byte)(pairingState ? 1 : 0), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromConnectionStatus(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus connectionStatus)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothConnectionStatus, IntPtr*, int>**)ThisPtr)[7](ThisPtr, connectionStatus, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromDeviceName(IObjectReference _obj, string deviceName)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                MarshalString.Pinnable __deviceName = new(deviceName);
                fixed(void* ___deviceName = __deviceName)
                {
                    global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, MarshalString.GetAbi(ref __deviceName), &__retval));
                    global::System.GC.KeepAlive(_obj);
                    return MarshalString.FromAbi(__retval);
                }
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromBluetoothAddress(IObjectReference _obj, ulong bluetoothAddress)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, IntPtr*, int>**)ThisPtr)[9](ThisPtr, bluetoothAddress, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromBluetoothAddress(IObjectReference _obj, ulong bluetoothAddress, global::Windows.Devices.Bluetooth.BluetoothAddressType bluetoothAddressType)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, global::Windows.Devices.Bluetooth.BluetoothAddressType, IntPtr*, int>**)ThisPtr)[10](ThisPtr, bluetoothAddress, bluetoothAddressType, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe string GetDeviceSelectorFromAppearance(IObjectReference _obj, global::Windows.Devices.Bluetooth.BluetoothLEAppearance appearance)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __appearance = default;
            IntPtr __retval = default;
            try
            {
                __appearance = global::ABI.Windows.Devices.Bluetooth.BluetoothLEAppearance.CreateMarshaler2(appearance);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, IntPtr*, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__appearance), &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalString.FromAbi(__retval);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__appearance);
                MarshalString.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice> FromBluetoothAddressAsync(IObjectReference _obj, ulong bluetoothAddress, global::Windows.Devices.Bluetooth.BluetoothAddressType bluetoothAddressType)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ulong, global::Windows.Devices.Bluetooth.BluetoothAddressType, IntPtr*, int>**)ThisPtr)[12](ThisPtr, bluetoothAddress, bluetoothAddressType, &__retval));
                global::System.GC.KeepAlive(_obj);
                _ = global::WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Devices_Bluetooth_BluetoothLEDevice.EnsureInitialized();
                return MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Bluetooth.BluetoothLEDevice>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x6B, 0xC0, 0x12, 0x5F, 0xAC, 0x3B, 0xE8, 0x43, 0xAD, 0x16, 0x56, 0x32, 0x71, 0xBD, 0x41, 0xC2 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("5F12C06B-3BAC-43E8-AD16-563271BD41C2")]
    internal interface IBluetoothLEDeviceStatics2 : global::Windows.Devices.Bluetooth.IBluetoothLEDeviceStatics2
    {
    }
    internal static class IBluetoothLEPreferredConnectionParametersMethods
    {

        internal static unsafe ushort get_ConnectionLatency(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[7](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_LinkTimeout(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_MaxConnectionInterval(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[9](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe ushort get_MinConnectionInterval(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            ushort __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, ushort*, int>**)ThisPtr)[8](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x44, 0x43, 0xF4, 0xF2, 0x72, 0x73, 0x7B, 0x5F, 0x9B, 0x34, 0x29, 0xC9, 0x44, 0xF5, 0xA7, 0x15 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("F2F44344-7372-5F7B-9B34-29C944F5A715")]
    internal interface IBluetoothLEPreferredConnectionParameters : global::Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParameters
    {
    }
    internal static class IBluetoothLEPreferredConnectionParametersRequestMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequestStatus get_Status(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequestStatus __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParametersRequestStatus*, int>**)ThisPtr)[6](ThisPtr, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x76, 0x52, 0x37, 0x8A, 0x28, 0xA5, 0x66, 0x52, 0xB6, 0x61, 0xCC, 0xE6, 0xA5, 0xFF, 0x97, 0x39 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("8A375276-A528-5266-B661-CCE6A5FF9739")]
    internal interface IBluetoothLEPreferredConnectionParametersRequest : global::Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersRequest
    {
    }
    internal static class IBluetoothLEPreferredConnectionParametersStaticsMethods
    {

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters get_Balanced(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters get_PowerOptimized(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.DisposeAbi(__retval);
            }
        }

        internal static unsafe global::Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters get_ThroughputOptimized(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[7](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.FromAbi(__retval);
            }
            finally
            {
                global::ABI.Windows.Devices.Bluetooth.BluetoothLEPreferredConnectionParameters.DisposeAbi(__retval);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xDC, 0x8E, 0x3E, 0xE, 0x51, 0x27, 0xAA, 0x55, 0xA8, 0x38, 0x8F, 0xAE, 0xEE, 0x81, 0x8D, 0x72 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("0E3E8EDC-2751-55AA-A838-8FAEEE818D72")]
    internal interface IBluetoothLEPreferredConnectionParametersStatics : global::Windows.Devices.Bluetooth.IBluetoothLEPreferredConnectionParametersStatics
    {
    }
    internal static class IBluetoothSignalStrengthFilterMethods
    {

        internal static unsafe global::System.Nullable<short> get_InRangeThresholdInDBm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[6](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<short>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<short>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_InRangeThresholdInDBm(IObjectReference _obj, global::System.Nullable<short> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<short>>.CreateMarshaler2(value, global::ABI.System.Nullable<short>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[7](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<short> get_OutOfRangeThresholdInDBm(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[8](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<short>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<short>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_OutOfRangeThresholdInDBm(IObjectReference _obj, global::System.Nullable<short> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<short>>.CreateMarshaler2(value, global::ABI.System.Nullable<short>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[9](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<global::System.TimeSpan> get_OutOfRangeTimeout(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[10](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_OutOfRangeTimeout(IObjectReference _obj, global::System.Nullable<global::System.TimeSpan> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.TimeSpan>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[11](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }

        internal static unsafe global::System.Nullable<global::System.TimeSpan> get_SamplingInterval(IObjectReference _obj)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr*, int>**)ThisPtr)[12](ThisPtr, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.DisposeAbi(__retval);
            }
        }
        internal static unsafe void set_SamplingInterval(IObjectReference _obj, global::System.Nullable<global::System.TimeSpan> value)
        {
            var ThisPtr = _obj.ThisPtr;

            ObjectReferenceValue __value = default;
            try
            {
                __value = MarshalInterface<global::System.Nullable<global::System.TimeSpan>>.CreateMarshaler2(value, global::ABI.System.Nullable<global::System.TimeSpan>.PIID);
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, IntPtr, int>**)ThisPtr)[13](ThisPtr, MarshalInspectable<object>.GetAbi(__value)));
                global::System.GC.KeepAlive(_obj);
            }
            finally
            {
                MarshalInspectable<object>.DisposeMarshaler(__value);
            }
        }



        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0x91, 0x73, 0x7B, 0xDF, 0xB5, 0x6B, 0xFE, 0x4C, 0x90, 0xB1, 0x5D, 0x73, 0x24, 0xED, 0xCF, 0x7F };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("DF7B7391-6BB5-4CFE-90B1-5D7324EDCF7F")]
    internal interface IBluetoothSignalStrengthFilter : global::Windows.Devices.Bluetooth.IBluetoothSignalStrengthFilter
    {
    }
    internal static class IBluetoothUuidHelperStaticsMethods
    {


        internal static unsafe Guid FromShortId(IObjectReference _obj, uint shortId)
        {
            var ThisPtr = _obj.ThisPtr;

            Guid __retval = default;
            global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, uint, Guid*, int>**)ThisPtr)[6](ThisPtr, shortId, &__retval));
            global::System.GC.KeepAlive(_obj);
            return __retval;
        }

        internal static unsafe global::System.Nullable<uint> TryGetShortId(IObjectReference _obj, Guid uuid)
        {
            var ThisPtr = _obj.ThisPtr;

            IntPtr __retval = default;
            try
            {
                global::WinRT.ExceptionHelpers.ThrowExceptionForHR((*(delegate* unmanaged[Stdcall]<IntPtr, Guid, IntPtr*, int>**)ThisPtr)[7](ThisPtr, uuid, &__retval));
                global::System.GC.KeepAlive(_obj);
                return MarshalInterface<global::System.Nullable<uint>>.FromAbi(__retval);
            }
            finally
            {
                MarshalInterface<global::System.Nullable<uint>>.DisposeAbi(__retval);
            }
        }


        public static ref readonly global::System.Guid IID
        {
            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            get
            {
                global::System.ReadOnlySpan<byte> data = new byte[] { 0xD8, 0xC, 0xDF, 0x17, 0x74, 0xCF, 0x21, 0x4B, 0xAF, 0xE6, 0xF5, 0x7A, 0x11, 0xBC, 0xDE, 0xA0 };
                return ref global::System.Runtime.CompilerServices.Unsafe.As<byte, global::System.Guid>(ref global::System.Runtime.InteropServices.MemoryMarshal.GetReference(data));
            }
        }

    }
    [Guid("17DF0CD8-CF74-4B21-AFE6-F57A11BCDEA0")]
    internal interface IBluetoothUuidHelperStatics : global::Windows.Devices.Bluetooth.IBluetoothUuidHelperStatics
    {
    }
}
#pragma warning restore CA1416
