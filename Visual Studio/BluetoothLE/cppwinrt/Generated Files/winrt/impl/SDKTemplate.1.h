// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240405.15

#pragma once
#ifndef WINRT_SDKTemplate_1_H
#define WINRT_SDKTemplate_1_H
#include "winrt/impl/SDKTemplate.0.h"
WINRT_EXPORT namespace winrt::SDKTemplate
{
    struct WINRT_IMPL_EMPTY_BASES IBluetoothLEDeviceDisplay :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IBluetoothLEDeviceDisplay>
    {
        IBluetoothLEDeviceDisplay(std::nullptr_t = nullptr) noexcept {}
        IBluetoothLEDeviceDisplay(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMainPage :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMainPage>
    {
        IMainPage(std::nullptr_t = nullptr) noexcept {}
        IMainPage(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IMainPageStatics :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IMainPageStatics>
    {
        IMainPageStatics(std::nullptr_t = nullptr) noexcept {}
        IMainPageStatics(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScenario1_Discovery :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScenario1_Discovery>
    {
        IScenario1_Discovery(std::nullptr_t = nullptr) noexcept {}
        IScenario1_Discovery(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScenario2_Client :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScenario2_Client>
    {
        IScenario2_Client(std::nullptr_t = nullptr) noexcept {}
        IScenario2_Client(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScenario3_ServerForeground :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScenario3_ServerForeground>
    {
        IScenario3_ServerForeground(std::nullptr_t = nullptr) noexcept {}
        IScenario3_ServerForeground(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IScenario4_ServerBackground :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IScenario4_ServerBackground>
    {
        IScenario4_ServerBackground(std::nullptr_t = nullptr) noexcept {}
        IScenario4_ServerBackground(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
    struct WINRT_IMPL_EMPTY_BASES IStyles :
        winrt::Windows::Foundation::IInspectable,
        impl::consume_t<IStyles>
    {
        IStyles(std::nullptr_t = nullptr) noexcept {}
        IStyles(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
    };
}
#endif
